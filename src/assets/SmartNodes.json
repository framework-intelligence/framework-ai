{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "jobId",
          "type": "uint256"
        }
      ],
      "name": "approveJobCreation",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "capacity",
          "type": "uint256"
        },
        {
          "internalType": "address[]",
          "name": "workerAddresses",
          "type": "address[]"
        }
      ],
      "name": "createJob",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "publicKeyHash",
          "type": "string"
        }
      ],
      "name": "createValidator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getJobIdCounter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getValidatorIdCounter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "jobIdCounter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "jobs",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "capacity",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "isCompleted",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "lockTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "pendingJobs",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "creator",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "capacity",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "requiredSignatures",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "unlockTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "validatorIdByAddress",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "validatorIdByHash",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "validatorIdCounter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "validators",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "validatorAddress",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "publicKeyHash",
          "type": "string"
        },
        {
          "internalType": "uint32",
          "name": "locked",
          "type": "uint32"
        },
        {
          "internalType": "bool",
          "name": "isActive",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/Users/matthewhawken/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/token/ERC20/ERC20.sol",
    "1": "/Users/matthewhawken/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/token/ERC20/IERC20.sol",
    "2": "/Users/matthewhawken/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/token/ERC20/extensions/IERC20Metadata.sol",
    "3": "/Users/matthewhawken/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/utils/Context.sol",
    "4": "contracts/SmartNodes.sol"
  },
  "ast": {
    "absolutePath": "contracts/SmartNodes.sol",
    "exportedSymbols": {
      "Context": [
        1151
      ],
      "ERC20": [
        1027
      ],
      "IERC20": [
        1105
      ],
      "IERC20Metadata": [
        1130
      ],
      "SmartNodes": [
        481
      ]
    },
    "id": 482,
    "license": "GPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "36:23:4"
      },
      {
        "absolutePath": "/Users/matthewhawken/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 482,
        "sourceUnit": 1028,
        "src": "61:55:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3,
              "name": "ERC20",
              "nameLocations": [
                "141:5:4"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1027,
              "src": "141:5:4"
            },
            "id": 4,
            "nodeType": "InheritanceSpecifier",
            "src": "141:5:4"
          }
        ],
        "canonicalName": "SmartNodes",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 481,
        "linearizedBaseContracts": [
          481,
          1027,
          1130,
          1105,
          1151
        ],
        "name": "SmartNodes",
        "nameLocation": "127:10:4",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "SmartNodes.Validator",
            "id": 15,
            "members": [
              {
                "constant": false,
                "id": 6,
                "mutability": "mutable",
                "name": "id",
                "nameLocation": "188:2:4",
                "nodeType": "VariableDeclaration",
                "scope": 15,
                "src": "180:10:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 5,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "180:7:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 8,
                "mutability": "mutable",
                "name": "validatorAddress",
                "nameLocation": "208:16:4",
                "nodeType": "VariableDeclaration",
                "scope": 15,
                "src": "200:24:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 7,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "200:7:4",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 10,
                "mutability": "mutable",
                "name": "publicKeyHash",
                "nameLocation": "241:13:4",
                "nodeType": "VariableDeclaration",
                "scope": 15,
                "src": "234:20:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 9,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "234:6:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 12,
                "mutability": "mutable",
                "name": "locked",
                "nameLocation": "271:6:4",
                "nodeType": "VariableDeclaration",
                "scope": 15,
                "src": "264:13:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint32",
                  "typeString": "uint32"
                },
                "typeName": {
                  "id": 11,
                  "name": "uint32",
                  "nodeType": "ElementaryTypeName",
                  "src": "264:6:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 14,
                "mutability": "mutable",
                "name": "isActive",
                "nameLocation": "292:8:4",
                "nodeType": "VariableDeclaration",
                "scope": 15,
                "src": "287:13:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 13,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "287:4:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Validator",
            "nameLocation": "160:9:4",
            "nodeType": "StructDefinition",
            "scope": 481,
            "src": "153:154:4",
            "visibility": "public"
          },
          {
            "canonicalName": "SmartNodes.Job",
            "id": 27,
            "members": [
              {
                "constant": false,
                "id": 17,
                "mutability": "mutable",
                "name": "id",
                "nameLocation": "342:2:4",
                "nodeType": "VariableDeclaration",
                "scope": 27,
                "src": "334:10:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 16,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "334:7:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 19,
                "mutability": "mutable",
                "name": "owner",
                "nameLocation": "362:5:4",
                "nodeType": "VariableDeclaration",
                "scope": 27,
                "src": "354:13:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 18,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "354:7:4",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 21,
                "mutability": "mutable",
                "name": "capacity",
                "nameLocation": "385:8:4",
                "nodeType": "VariableDeclaration",
                "scope": 27,
                "src": "377:16:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 20,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "377:7:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 24,
                "mutability": "mutable",
                "name": "workerAddresses",
                "nameLocation": "413:15:4",
                "nodeType": "VariableDeclaration",
                "scope": 27,
                "src": "403:25:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                  "typeString": "address[]"
                },
                "typeName": {
                  "baseType": {
                    "id": 22,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "403:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 23,
                  "nodeType": "ArrayTypeName",
                  "src": "403:9:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                    "typeString": "address[]"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 26,
                "mutability": "mutable",
                "name": "isCompleted",
                "nameLocation": "501:11:4",
                "nodeType": "VariableDeclaration",
                "scope": 27,
                "src": "496:16:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 25,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "496:4:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Job",
            "nameLocation": "320:3:4",
            "nodeType": "StructDefinition",
            "scope": 481,
            "src": "313:206:4",
            "visibility": "public"
          },
          {
            "canonicalName": "SmartNodes.JobCreationRequest",
            "id": 41,
            "members": [
              {
                "constant": false,
                "id": 29,
                "mutability": "mutable",
                "name": "id",
                "nameLocation": "569:2:4",
                "nodeType": "VariableDeclaration",
                "scope": 41,
                "src": "561:10:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 28,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "561:7:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 31,
                "mutability": "mutable",
                "name": "creator",
                "nameLocation": "589:7:4",
                "nodeType": "VariableDeclaration",
                "scope": 41,
                "src": "581:15:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 30,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "581:7:4",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 33,
                "mutability": "mutable",
                "name": "capacity",
                "nameLocation": "614:8:4",
                "nodeType": "VariableDeclaration",
                "scope": 41,
                "src": "606:16:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 32,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "606:7:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 36,
                "mutability": "mutable",
                "name": "workerAddresses",
                "nameLocation": "642:15:4",
                "nodeType": "VariableDeclaration",
                "scope": 41,
                "src": "632:25:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                  "typeString": "address[]"
                },
                "typeName": {
                  "baseType": {
                    "id": 34,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "632:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 35,
                  "nodeType": "ArrayTypeName",
                  "src": "632:9:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                    "typeString": "address[]"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 40,
                "mutability": "mutable",
                "name": "signatures",
                "nameLocation": "750:10:4",
                "nodeType": "VariableDeclaration",
                "scope": 41,
                "src": "725:35:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                  "typeString": "mapping(address => bool)"
                },
                "typeName": {
                  "id": 39,
                  "keyName": "",
                  "keyNameLocation": "-1:-1:-1",
                  "keyType": {
                    "id": 37,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "733:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "725:24:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                    "typeString": "mapping(address => bool)"
                  },
                  "valueName": "",
                  "valueNameLocation": "-1:-1:-1",
                  "valueType": {
                    "id": 38,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "744:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "JobCreationRequest",
            "nameLocation": "532:18:4",
            "nodeType": "StructDefinition",
            "scope": 481,
            "src": "525:242:4",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "27764547",
            "id": 45,
            "mutability": "mutable",
            "name": "validatorIdByAddress",
            "nameLocation": "808:20:4",
            "nodeType": "VariableDeclaration",
            "scope": 481,
            "src": "773:55:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 44,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 42,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "781:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "773:27:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 43,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "792:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "2130a16f",
            "id": 49,
            "mutability": "mutable",
            "name": "validatorIdByHash",
            "nameLocation": "868:17:4",
            "nodeType": "VariableDeclaration",
            "scope": 481,
            "src": "834:51:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
              "typeString": "mapping(string => uint256)"
            },
            "typeName": {
              "id": 48,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 46,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "842:6:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "834:26:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
                "typeString": "mapping(string => uint256)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 47,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "852:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "35aa2e44",
            "id": 54,
            "mutability": "mutable",
            "name": "validators",
            "nameLocation": "928:10:4",
            "nodeType": "VariableDeclaration",
            "scope": 481,
            "src": "891:47:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Validator_$15_storage_$",
              "typeString": "mapping(uint256 => struct SmartNodes.Validator)"
            },
            "typeName": {
              "id": 53,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 50,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "899:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "891:29:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Validator_$15_storage_$",
                "typeString": "mapping(uint256 => struct SmartNodes.Validator)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 52,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 51,
                  "name": "Validator",
                  "nameLocations": [
                    "910:9:4"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 15,
                  "src": "910:9:4"
                },
                "referencedDeclaration": 15,
                "src": "910:9:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Validator_$15_storage_ptr",
                  "typeString": "struct SmartNodes.Validator"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "8f029d5e",
            "id": 56,
            "mutability": "mutable",
            "name": "validatorIdCounter",
            "nameLocation": "959:18:4",
            "nodeType": "VariableDeclaration",
            "scope": 481,
            "src": "944:33:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 55,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "944:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "180aedf3",
            "id": 61,
            "mutability": "mutable",
            "name": "jobs",
            "nameLocation": "1015:4:4",
            "nodeType": "VariableDeclaration",
            "scope": 481,
            "src": "984:35:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Job_$27_storage_$",
              "typeString": "mapping(uint256 => struct SmartNodes.Job)"
            },
            "typeName": {
              "id": 60,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 57,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "992:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "984:23:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Job_$27_storage_$",
                "typeString": "mapping(uint256 => struct SmartNodes.Job)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 59,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 58,
                  "name": "Job",
                  "nameLocations": [
                    "1003:3:4"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 27,
                  "src": "1003:3:4"
                },
                "referencedDeclaration": 27,
                "src": "1003:3:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Job_$27_storage_ptr",
                  "typeString": "struct SmartNodes.Job"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "0f5a11ca",
            "id": 63,
            "mutability": "mutable",
            "name": "jobIdCounter",
            "nameLocation": "1040:12:4",
            "nodeType": "VariableDeclaration",
            "scope": 481,
            "src": "1025:27:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 62,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1025:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "0480b2ba",
            "id": 68,
            "mutability": "mutable",
            "name": "pendingJobs",
            "nameLocation": "1105:11:4",
            "nodeType": "VariableDeclaration",
            "scope": 481,
            "src": "1059:57:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_JobCreationRequest_$41_storage_$",
              "typeString": "mapping(uint256 => struct SmartNodes.JobCreationRequest)"
            },
            "typeName": {
              "id": 67,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 64,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1067:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1059:38:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_JobCreationRequest_$41_storage_$",
                "typeString": "mapping(uint256 => struct SmartNodes.JobCreationRequest)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 66,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 65,
                  "name": "JobCreationRequest",
                  "nameLocations": [
                    "1078:18:4"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 41,
                  "src": "1078:18:4"
                },
                "referencedDeclaration": 41,
                "src": "1078:18:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_JobCreationRequest_$41_storage_ptr",
                  "typeString": "struct SmartNodes.JobCreationRequest"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "8d068043",
            "id": 71,
            "mutability": "mutable",
            "name": "requiredSignatures",
            "nameLocation": "1137:18:4",
            "nodeType": "VariableDeclaration",
            "scope": 481,
            "src": "1122:37:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 69,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1122:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "32",
              "id": 70,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1158:1:4",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_2_by_1",
                "typeString": "int_const 2"
              },
              "value": "2"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 92,
              "nodeType": "Block",
              "src": "1259:97:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 79,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1275:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 80,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1279:6:4",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1275:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "313030",
                        "id": 81,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1287:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        }
                      ],
                      "id": 78,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 887,
                      "src": "1269:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 82,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1269:22:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83,
                  "nodeType": "ExpressionStatement",
                  "src": "1269:22:4"
                },
                {
                  "expression": {
                    "id": 86,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 84,
                      "name": "validatorIdCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56,
                      "src": "1301:18:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 85,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1322:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "1301:22:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 87,
                  "nodeType": "ExpressionStatement",
                  "src": "1301:22:4"
                },
                {
                  "expression": {
                    "id": 90,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 88,
                      "name": "jobIdCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 63,
                      "src": "1333:12:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 89,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1348:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "1333:16:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 91,
                  "nodeType": "ExpressionStatement",
                  "src": "1333:16:4"
                }
              ]
            },
            "id": 93,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "54656e736f724c696e6b",
                    "id": 74,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1236:12:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_be8bc9c6d9e8bd5a83e7acb5070de9bfdc1c6375836d7e67b61959643c7d8186",
                      "typeString": "literal_string \"TensorLink\""
                    },
                    "value": "TensorLink"
                  },
                  {
                    "hexValue": "544c494e4b",
                    "id": 75,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1250:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_19d2e54141d87ceb8f8978b6873d61274bfdf61b39f48e34d15d0be8b934f204",
                      "typeString": "literal_string \"TLINK\""
                    },
                    "value": "TLINK"
                  }
                ],
                "id": 76,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 73,
                  "name": "ERC20",
                  "nameLocations": [
                    "1230:5:4"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1027,
                  "src": "1230:5:4"
                },
                "nodeType": "ModifierInvocation",
                "src": "1230:28:4"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 72,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1227:2:4"
            },
            "returnParameters": {
              "id": 77,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1259:0:4"
            },
            "scope": 481,
            "src": "1216:140:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 100,
              "nodeType": "Block",
              "src": "1421:36:4",
              "statements": [
                {
                  "expression": {
                    "id": 98,
                    "name": "jobIdCounter",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 63,
                    "src": "1438:12:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 97,
                  "id": 99,
                  "nodeType": "Return",
                  "src": "1431:19:4"
                }
              ]
            },
            "functionSelector": "25b61d56",
            "id": 101,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getJobIdCounter",
            "nameLocation": "1371:15:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 94,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1386:2:4"
            },
            "returnParameters": {
              "id": 97,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 96,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 101,
                  "src": "1412:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 95,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1412:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1411:9:4"
            },
            "scope": 481,
            "src": "1362:95:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 108,
              "nodeType": "Block",
              "src": "1528:42:4",
              "statements": [
                {
                  "expression": {
                    "id": 106,
                    "name": "validatorIdCounter",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 56,
                    "src": "1545:18:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 105,
                  "id": 107,
                  "nodeType": "Return",
                  "src": "1538:25:4"
                }
              ]
            },
            "functionSelector": "d56c907d",
            "id": 109,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getValidatorIdCounter",
            "nameLocation": "1472:21:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 102,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1493:2:4"
            },
            "returnParameters": {
              "id": 105,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 104,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 109,
                  "src": "1519:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 103,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1519:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1518:9:4"
            },
            "scope": 481,
            "src": "1463:107:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 148,
              "nodeType": "Block",
              "src": "1639:447:4",
              "statements": [
                {
                  "assignments": [
                    116
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 116,
                      "mutability": "mutable",
                      "name": "validator",
                      "nameLocation": "1666:9:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 148,
                      "src": "1649:26:4",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Validator_$15_memory_ptr",
                        "typeString": "struct SmartNodes.Validator"
                      },
                      "typeName": {
                        "id": 115,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 114,
                          "name": "Validator",
                          "nameLocations": [
                            "1649:9:4"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 15,
                          "src": "1649:9:4"
                        },
                        "referencedDeclaration": 15,
                        "src": "1649:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Validator_$15_storage_ptr",
                          "typeString": "struct SmartNodes.Validator"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 125,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 118,
                        "name": "validatorIdCounter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56,
                        "src": "1706:18:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 119,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1756:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 120,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1760:6:4",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1756:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 121,
                        "name": "publicKeyHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 111,
                        "src": "1795:13:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 122,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1830:1:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 123,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1855:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 117,
                      "name": "Validator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15,
                      "src": "1678:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Validator_$15_storage_ptr_$",
                        "typeString": "type(struct SmartNodes.Validator storage pointer)"
                      }
                    },
                    "id": 124,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "nameLocations": [
                      "1702:2:4",
                      "1738:16:4",
                      "1780:13:4",
                      "1822:6:4",
                      "1845:8:4"
                    ],
                    "names": [
                      "id",
                      "validatorAddress",
                      "publicKeyHash",
                      "locked",
                      "isActive"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "1678:192:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Validator_$15_memory_ptr",
                      "typeString": "struct SmartNodes.Validator memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1649:221:4"
                },
                {
                  "expression": {
                    "id": 130,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 126,
                        "name": "validators",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54,
                        "src": "1881:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Validator_$15_storage_$",
                          "typeString": "mapping(uint256 => struct SmartNodes.Validator storage ref)"
                        }
                      },
                      "id": 128,
                      "indexExpression": {
                        "id": 127,
                        "name": "validatorIdCounter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56,
                        "src": "1892:18:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1881:30:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Validator_$15_storage",
                        "typeString": "struct SmartNodes.Validator storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 129,
                      "name": "validator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 116,
                      "src": "1914:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Validator_$15_memory_ptr",
                        "typeString": "struct SmartNodes.Validator memory"
                      }
                    },
                    "src": "1881:42:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Validator_$15_storage",
                      "typeString": "struct SmartNodes.Validator storage ref"
                    }
                  },
                  "id": 131,
                  "nodeType": "ExpressionStatement",
                  "src": "1881:42:4"
                },
                {
                  "expression": {
                    "id": 137,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 132,
                        "name": "validatorIdByAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45,
                        "src": "1933:20:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 135,
                      "indexExpression": {
                        "expression": {
                          "id": 133,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1954:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 134,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1958:6:4",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1954:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1933:32:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 136,
                      "name": "validatorIdCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56,
                      "src": "1968:18:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1933:53:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 138,
                  "nodeType": "ExpressionStatement",
                  "src": "1933:53:4"
                },
                {
                  "expression": {
                    "id": 143,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 139,
                        "name": "validatorIdByHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49,
                        "src": "1996:17:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
                          "typeString": "mapping(string memory => uint256)"
                        }
                      },
                      "id": 141,
                      "indexExpression": {
                        "id": 140,
                        "name": "publicKeyHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 111,
                        "src": "2014:13:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1996:32:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 142,
                      "name": "validatorIdCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56,
                      "src": "2031:18:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1996:53:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 144,
                  "nodeType": "ExpressionStatement",
                  "src": "1996:53:4"
                },
                {
                  "expression": {
                    "id": 146,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "2059:20:4",
                    "subExpression": {
                      "id": 145,
                      "name": "validatorIdCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56,
                      "src": "2059:18:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 147,
                  "nodeType": "ExpressionStatement",
                  "src": "2059:20:4"
                }
              ]
            },
            "functionSelector": "cf6acd47",
            "id": 149,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createValidator",
            "nameLocation": "1585:15:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 112,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 111,
                  "mutability": "mutable",
                  "name": "publicKeyHash",
                  "nameLocation": "1615:13:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 149,
                  "src": "1601:27:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 110,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1601:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1600:29:4"
            },
            "returnParameters": {
              "id": 113,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1639:0:4"
            },
            "scope": 481,
            "src": "1576:510:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 200,
              "nodeType": "Block",
              "src": "2137:356:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 157,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 155,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 151,
                          "src": "2155:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 156,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2164:1:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2155:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416d6f756e74206d7573742062652067726561746572207468616e207a65726f2e",
                        "id": 158,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2167:35:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_589780fdaac943d73bde148f4b0fd3e83692efc7fc17ad3217c393187982f13a",
                          "typeString": "literal_string \"Amount must be greater than zero.\""
                        },
                        "value": "Amount must be greater than zero."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_589780fdaac943d73bde148f4b0fd3e83692efc7fc17ad3217c393187982f13a",
                          "typeString": "literal_string \"Amount must be greater than zero.\""
                        }
                      ],
                      "id": 154,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2147:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 159,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2147:56:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 160,
                  "nodeType": "ExpressionStatement",
                  "src": "2147:56:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 167,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 163,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "2231:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 164,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2235:6:4",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2231:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 162,
                            "name": "balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 580,
                            "src": "2221:9:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view returns (uint256)"
                            }
                          },
                          "id": 165,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2221:21:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 166,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 151,
                          "src": "2246:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2221:31:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e73756666696369656e742062616c616e63652e",
                        "id": 168,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2254:23:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7572e40391d07d4b91d51e72cb8caa5f33f56b2b616c219ac11e2b95b18edce9",
                          "typeString": "literal_string \"Insufficient balance.\""
                        },
                        "value": "Insufficient balance."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7572e40391d07d4b91d51e72cb8caa5f33f56b2b616c219ac11e2b95b18edce9",
                          "typeString": "literal_string \"Insufficient balance.\""
                        }
                      ],
                      "id": 161,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2213:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 169,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2213:65:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 170,
                  "nodeType": "ExpressionStatement",
                  "src": "2213:65:4"
                },
                {
                  "assignments": [
                    172
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 172,
                      "mutability": "mutable",
                      "name": "validatorId",
                      "nameLocation": "2297:11:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 200,
                      "src": "2289:19:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 171,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2289:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 177,
                  "initialValue": {
                    "baseExpression": {
                      "id": 173,
                      "name": "validatorIdByAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45,
                      "src": "2311:20:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 176,
                    "indexExpression": {
                      "expression": {
                        "id": 174,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "2332:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 175,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2336:6:4",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "2332:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2311:32:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2289:54:4"
                },
                {
                  "assignments": [
                    180
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 180,
                      "mutability": "mutable",
                      "name": "validator",
                      "nameLocation": "2371:9:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 200,
                      "src": "2353:27:4",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Validator_$15_storage_ptr",
                        "typeString": "struct SmartNodes.Validator"
                      },
                      "typeName": {
                        "id": 179,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 178,
                          "name": "Validator",
                          "nameLocations": [
                            "2353:9:4"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 15,
                          "src": "2353:9:4"
                        },
                        "referencedDeclaration": 15,
                        "src": "2353:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Validator_$15_storage_ptr",
                          "typeString": "struct SmartNodes.Validator"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 184,
                  "initialValue": {
                    "baseExpression": {
                      "id": 181,
                      "name": "validators",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 54,
                      "src": "2383:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Validator_$15_storage_$",
                        "typeString": "mapping(uint256 => struct SmartNodes.Validator storage ref)"
                      }
                    },
                    "id": 183,
                    "indexExpression": {
                      "id": 182,
                      "name": "validatorId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 172,
                      "src": "2394:11:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2383:23:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Validator_$15_storage",
                      "typeString": "struct SmartNodes.Validator storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2353:53:4"
                },
                {
                  "expression": {
                    "id": 192,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 185,
                        "name": "validator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 180,
                        "src": "2417:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Validator_$15_storage_ptr",
                          "typeString": "struct SmartNodes.Validator storage pointer"
                        }
                      },
                      "id": 187,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "2427:6:4",
                      "memberName": "locked",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12,
                      "src": "2417:16:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 190,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 151,
                          "src": "2444:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 189,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2437:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint32_$",
                          "typeString": "type(uint32)"
                        },
                        "typeName": {
                          "id": 188,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2437:6:4",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 191,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2437:14:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "2417:34:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 193,
                  "nodeType": "ExpressionStatement",
                  "src": "2417:34:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 195,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2467:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 196,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2471:6:4",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2467:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 197,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 151,
                        "src": "2479:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 194,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 959,
                      "src": "2461:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 198,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2461:25:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 199,
                  "nodeType": "ExpressionStatement",
                  "src": "2461:25:4"
                }
              ]
            },
            "functionSelector": "6e27d889",
            "id": 201,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "lockTokens",
            "nameLocation": "2101:10:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 152,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 151,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2120:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 201,
                  "src": "2112:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 150,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2112:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2111:16:4"
            },
            "returnParameters": {
              "id": 153,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2137:0:4"
            },
            "scope": 481,
            "src": "2092:401:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 243,
              "nodeType": "Block",
              "src": "2546:294:4",
              "statements": [
                {
                  "assignments": [
                    207
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 207,
                      "mutability": "mutable",
                      "name": "validatorId",
                      "nameLocation": "2564:11:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 243,
                      "src": "2556:19:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 206,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2556:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 212,
                  "initialValue": {
                    "baseExpression": {
                      "id": 208,
                      "name": "validatorIdByAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45,
                      "src": "2578:20:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 211,
                    "indexExpression": {
                      "expression": {
                        "id": 209,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "2599:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 210,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2603:6:4",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "2599:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2578:32:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2556:54:4"
                },
                {
                  "assignments": [
                    215
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 215,
                      "mutability": "mutable",
                      "name": "validator",
                      "nameLocation": "2638:9:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 243,
                      "src": "2620:27:4",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Validator_$15_storage_ptr",
                        "typeString": "struct SmartNodes.Validator"
                      },
                      "typeName": {
                        "id": 214,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 213,
                          "name": "Validator",
                          "nameLocations": [
                            "2620:9:4"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 15,
                          "src": "2620:9:4"
                        },
                        "referencedDeclaration": 15,
                        "src": "2620:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Validator_$15_storage_ptr",
                          "typeString": "struct SmartNodes.Validator"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 219,
                  "initialValue": {
                    "baseExpression": {
                      "id": 216,
                      "name": "validators",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 54,
                      "src": "2650:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Validator_$15_storage_$",
                        "typeString": "mapping(uint256 => struct SmartNodes.Validator storage ref)"
                      }
                    },
                    "id": 218,
                    "indexExpression": {
                      "id": 217,
                      "name": "validatorId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 207,
                      "src": "2661:11:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2650:23:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Validator_$15_storage",
                      "typeString": "struct SmartNodes.Validator storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2620:53:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 224,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 221,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 203,
                          "src": "2692:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "expression": {
                            "id": 222,
                            "name": "validator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 215,
                            "src": "2702:9:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Validator_$15_storage_ptr",
                              "typeString": "struct SmartNodes.Validator storage pointer"
                            }
                          },
                          "id": 223,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2712:6:4",
                          "memberName": "locked",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 12,
                          "src": "2702:16:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "src": "2692:26:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416d6f756e742065786365656473206c6f636b65642062616c616e63652e",
                        "id": 225,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2720:32:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_063df6901c618308fab14606f14936f5e92e367105330137e8dfec42473ac685",
                          "typeString": "literal_string \"Amount exceeds locked balance.\""
                        },
                        "value": "Amount exceeds locked balance."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_063df6901c618308fab14606f14936f5e92e367105330137e8dfec42473ac685",
                          "typeString": "literal_string \"Amount exceeds locked balance.\""
                        }
                      ],
                      "id": 220,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2684:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 226,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2684:69:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 227,
                  "nodeType": "ExpressionStatement",
                  "src": "2684:69:4"
                },
                {
                  "expression": {
                    "id": 235,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 228,
                        "name": "validator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 215,
                        "src": "2764:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Validator_$15_storage_ptr",
                          "typeString": "struct SmartNodes.Validator storage pointer"
                        }
                      },
                      "id": 230,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "2774:6:4",
                      "memberName": "locked",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12,
                      "src": "2764:16:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 233,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 203,
                          "src": "2791:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 232,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2784:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint32_$",
                          "typeString": "type(uint32)"
                        },
                        "typeName": {
                          "id": 231,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2784:6:4",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 234,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2784:14:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "2764:34:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 236,
                  "nodeType": "ExpressionStatement",
                  "src": "2764:34:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 238,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2814:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 239,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2818:6:4",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2814:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 240,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 203,
                        "src": "2826:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 237,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 887,
                      "src": "2808:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 241,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2808:25:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 242,
                  "nodeType": "ExpressionStatement",
                  "src": "2808:25:4"
                }
              ]
            },
            "functionSelector": "7c405325",
            "id": 244,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "unlockTokens",
            "nameLocation": "2508:12:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 204,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 203,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2529:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 244,
                  "src": "2521:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 202,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2521:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2520:16:4"
            },
            "returnParameters": {
              "id": 205,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2546:0:4"
            },
            "scope": 481,
            "src": "2499:341:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 354,
              "nodeType": "Block",
              "src": "2938:1096:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 255,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 253,
                          "name": "capacity",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 246,
                          "src": "2956:8:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 254,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2967:1:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2956:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4361706163697479206d7573742062652067726561746572207468616e207a65726f2e",
                        "id": 256,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2970:37:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_27c4496e0b903c3e5c1cec28b750015af5de509049c696379b4a6e57ecd75a54",
                          "typeString": "literal_string \"Capacity must be greater than zero.\""
                        },
                        "value": "Capacity must be greater than zero."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_27c4496e0b903c3e5c1cec28b750015af5de509049c696379b4a6e57ecd75a54",
                          "typeString": "literal_string \"Capacity must be greater than zero.\""
                        }
                      ],
                      "id": 252,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2948:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 257,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2948:60:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 258,
                  "nodeType": "ExpressionStatement",
                  "src": "2948:60:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 263,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 260,
                            "name": "workerAddresses",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 249,
                            "src": "3039:15:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 261,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3055:6:4",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "3039:22:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 262,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3064:1:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3039:26:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4174206c65617374206f6e6520776f726b6572206d757374206265207370656369666965642e",
                        "id": 264,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3079:40:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a1d2748fea83aba8e0fe96e1a64b37d602af5b5272642db3ab0c8bdcdb8d2775",
                          "typeString": "literal_string \"At least one worker must be specified.\""
                        },
                        "value": "At least one worker must be specified."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a1d2748fea83aba8e0fe96e1a64b37d602af5b5272642db3ab0c8bdcdb8d2775",
                          "typeString": "literal_string \"At least one worker must be specified.\""
                        }
                      ],
                      "id": 259,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3018:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 265,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3018:111:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 266,
                  "nodeType": "ExpressionStatement",
                  "src": "3018:111:4"
                },
                {
                  "assignments": [
                    268
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 268,
                      "mutability": "mutable",
                      "name": "validatorId",
                      "nameLocation": "3148:11:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 354,
                      "src": "3140:19:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 267,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3140:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 273,
                  "initialValue": {
                    "baseExpression": {
                      "id": 269,
                      "name": "validatorIdByAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45,
                      "src": "3162:20:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 272,
                    "indexExpression": {
                      "expression": {
                        "id": 270,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "3183:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 271,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3187:6:4",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "3183:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3162:32:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3140:54:4"
                },
                {
                  "assignments": [
                    276
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 276,
                      "mutability": "mutable",
                      "name": "validator",
                      "nameLocation": "3222:9:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 354,
                      "src": "3204:27:4",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Validator_$15_storage_ptr",
                        "typeString": "struct SmartNodes.Validator"
                      },
                      "typeName": {
                        "id": 275,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 274,
                          "name": "Validator",
                          "nameLocations": [
                            "3204:9:4"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 15,
                          "src": "3204:9:4"
                        },
                        "referencedDeclaration": 15,
                        "src": "3204:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Validator_$15_storage_ptr",
                          "typeString": "struct SmartNodes.Validator"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 280,
                  "initialValue": {
                    "baseExpression": {
                      "id": 277,
                      "name": "validators",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 54,
                      "src": "3234:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Validator_$15_storage_$",
                        "typeString": "mapping(uint256 => struct SmartNodes.Validator storage ref)"
                      }
                    },
                    "id": 279,
                    "indexExpression": {
                      "id": 278,
                      "name": "validatorId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 268,
                      "src": "3245:11:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3234:23:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Validator_$15_storage",
                      "typeString": "struct SmartNodes.Validator storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3204:53:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 282,
                          "name": "validator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 276,
                          "src": "3275:9:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Validator_$15_storage_ptr",
                            "typeString": "struct SmartNodes.Validator storage pointer"
                          }
                        },
                        "id": 283,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3285:8:4",
                        "memberName": "isActive",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 14,
                        "src": "3275:18:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56616c696461746f72206973206e6f74206163746976652e",
                        "id": 284,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3295:26:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9797bee2e6537791420a173c338dd49d009732d4333462ab1d571b8551ad2166",
                          "typeString": "literal_string \"Validator is not active.\""
                        },
                        "value": "Validator is not active."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9797bee2e6537791420a173c338dd49d009732d4333462ab1d571b8551ad2166",
                          "typeString": "literal_string \"Validator is not active.\""
                        }
                      ],
                      "id": 281,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3267:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 285,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3267:55:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 286,
                  "nodeType": "ExpressionStatement",
                  "src": "3267:55:4"
                },
                {
                  "assignments": [
                    289
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 289,
                      "mutability": "mutable",
                      "name": "newRequest",
                      "nameLocation": "3452:10:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 354,
                      "src": "3425:37:4",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_JobCreationRequest_$41_storage_ptr",
                        "typeString": "struct SmartNodes.JobCreationRequest"
                      },
                      "typeName": {
                        "id": 288,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 287,
                          "name": "JobCreationRequest",
                          "nameLocations": [
                            "3425:18:4"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 41,
                          "src": "3425:18:4"
                        },
                        "referencedDeclaration": 41,
                        "src": "3425:18:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_JobCreationRequest_$41_storage_ptr",
                          "typeString": "struct SmartNodes.JobCreationRequest"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 293,
                  "initialValue": {
                    "baseExpression": {
                      "id": 290,
                      "name": "pendingJobs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 68,
                      "src": "3465:11:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_JobCreationRequest_$41_storage_$",
                        "typeString": "mapping(uint256 => struct SmartNodes.JobCreationRequest storage ref)"
                      }
                    },
                    "id": 292,
                    "indexExpression": {
                      "id": 291,
                      "name": "jobIdCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 63,
                      "src": "3477:12:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3465:25:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_JobCreationRequest_$41_storage",
                      "typeString": "struct SmartNodes.JobCreationRequest storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3425:65:4"
                },
                {
                  "expression": {
                    "id": 298,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 294,
                        "name": "newRequest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 289,
                        "src": "3500:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_JobCreationRequest_$41_storage_ptr",
                          "typeString": "struct SmartNodes.JobCreationRequest storage pointer"
                        }
                      },
                      "id": 296,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "3511:2:4",
                      "memberName": "id",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 29,
                      "src": "3500:13:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 297,
                      "name": "jobIdCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 63,
                      "src": "3516:12:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3500:28:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 299,
                  "nodeType": "ExpressionStatement",
                  "src": "3500:28:4"
                },
                {
                  "expression": {
                    "id": 305,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 300,
                        "name": "newRequest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 289,
                        "src": "3538:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_JobCreationRequest_$41_storage_ptr",
                          "typeString": "struct SmartNodes.JobCreationRequest storage pointer"
                        }
                      },
                      "id": 302,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "3549:7:4",
                      "memberName": "creator",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31,
                      "src": "3538:18:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 303,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "3559:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 304,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3563:6:4",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "3559:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3538:31:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 306,
                  "nodeType": "ExpressionStatement",
                  "src": "3538:31:4"
                },
                {
                  "expression": {
                    "id": 311,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 307,
                        "name": "newRequest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 289,
                        "src": "3579:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_JobCreationRequest_$41_storage_ptr",
                          "typeString": "struct SmartNodes.JobCreationRequest storage pointer"
                        }
                      },
                      "id": 309,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "3590:8:4",
                      "memberName": "capacity",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 33,
                      "src": "3579:19:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 310,
                      "name": "capacity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 246,
                      "src": "3601:8:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3579:30:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 312,
                  "nodeType": "ExpressionStatement",
                  "src": "3579:30:4"
                },
                {
                  "expression": {
                    "id": 317,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 313,
                        "name": "newRequest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 289,
                        "src": "3619:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_JobCreationRequest_$41_storage_ptr",
                          "typeString": "struct SmartNodes.JobCreationRequest storage pointer"
                        }
                      },
                      "id": 315,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "3630:15:4",
                      "memberName": "workerAddresses",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36,
                      "src": "3619:26:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 316,
                      "name": "workerAddresses",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 249,
                      "src": "3648:15:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[] memory"
                      }
                    },
                    "src": "3619:44:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "id": 318,
                  "nodeType": "ExpressionStatement",
                  "src": "3619:44:4"
                },
                {
                  "expression": {
                    "id": 320,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "3674:14:4",
                    "subExpression": {
                      "id": 319,
                      "name": "jobIdCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 63,
                      "src": "3674:12:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 321,
                  "nodeType": "ExpressionStatement",
                  "src": "3674:14:4"
                },
                {
                  "body": {
                    "id": 343,
                    "nodeType": "Block",
                    "src": "3847:74:4",
                    "statements": [
                      {
                        "expression": {
                          "id": 341,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "expression": {
                                "id": 333,
                                "name": "newRequest",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 289,
                                "src": "3861:10:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_JobCreationRequest_$41_storage_ptr",
                                  "typeString": "struct SmartNodes.JobCreationRequest storage pointer"
                                }
                              },
                              "id": 338,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3872:10:4",
                              "memberName": "signatures",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 40,
                              "src": "3861:21:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 339,
                            "indexExpression": {
                              "baseExpression": {
                                "id": 335,
                                "name": "workerAddresses",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 249,
                                "src": "3883:15:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 337,
                              "indexExpression": {
                                "id": 336,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 323,
                                "src": "3899:1:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3883:18:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3861:41:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "66616c7365",
                            "id": 340,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3905:5:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "3861:49:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 342,
                        "nodeType": "ExpressionStatement",
                        "src": "3861:49:4"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 329,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 326,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 323,
                      "src": "3814:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 327,
                        "name": "workerAddresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 249,
                        "src": "3818:15:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 328,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3834:6:4",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "3818:22:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3814:26:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 344,
                  "initializationExpression": {
                    "assignments": [
                      323
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 323,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "3807:1:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 344,
                        "src": "3799:9:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 322,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3799:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 325,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 324,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3811:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3799:13:4"
                  },
                  "isSimpleCounterLoop": true,
                  "loopExpression": {
                    "expression": {
                      "id": 331,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "3842:3:4",
                      "subExpression": {
                        "id": 330,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 323,
                        "src": "3842:1:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 332,
                    "nodeType": "ExpressionStatement",
                    "src": "3842:3:4"
                  },
                  "nodeType": "ForStatement",
                  "src": "3794:127:4"
                },
                {
                  "expression": {
                    "id": 352,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "expression": {
                          "id": 345,
                          "name": "newRequest",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 289,
                          "src": "3987:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_JobCreationRequest_$41_storage_ptr",
                            "typeString": "struct SmartNodes.JobCreationRequest storage pointer"
                          }
                        },
                        "id": 349,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3998:10:4",
                        "memberName": "signatures",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 40,
                        "src": "3987:21:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 350,
                      "indexExpression": {
                        "expression": {
                          "id": 347,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4009:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 348,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4013:6:4",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4009:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3987:33:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 351,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4023:4:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3987:40:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 353,
                  "nodeType": "ExpressionStatement",
                  "src": "3987:40:4"
                }
              ]
            },
            "functionSelector": "7369455f",
            "id": 355,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createJob",
            "nameLocation": "2855:9:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 250,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 246,
                  "mutability": "mutable",
                  "name": "capacity",
                  "nameLocation": "2873:8:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 355,
                  "src": "2865:16:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 245,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2865:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 249,
                  "mutability": "mutable",
                  "name": "workerAddresses",
                  "nameLocation": "2900:15:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 355,
                  "src": "2883:32:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 247,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2883:7:4",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 248,
                    "nodeType": "ArrayTypeName",
                    "src": "2883:9:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2864:52:4"
            },
            "returnParameters": {
              "id": 251,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2938:0:4"
            },
            "scope": 481,
            "src": "2846:1188:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 438,
              "nodeType": "Block",
              "src": "4092:834:4",
              "statements": [
                {
                  "assignments": [
                    361
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 361,
                      "mutability": "mutable",
                      "name": "validatorId",
                      "nameLocation": "4110:11:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 438,
                      "src": "4102:19:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 360,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4102:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 366,
                  "initialValue": {
                    "baseExpression": {
                      "id": 362,
                      "name": "validatorIdByAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45,
                      "src": "4124:20:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 365,
                    "indexExpression": {
                      "expression": {
                        "id": 363,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "4145:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 364,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4149:6:4",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "4145:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4124:32:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4102:54:4"
                },
                {
                  "assignments": [
                    369
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 369,
                      "mutability": "mutable",
                      "name": "validator",
                      "nameLocation": "4184:9:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 438,
                      "src": "4166:27:4",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Validator_$15_storage_ptr",
                        "typeString": "struct SmartNodes.Validator"
                      },
                      "typeName": {
                        "id": 368,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 367,
                          "name": "Validator",
                          "nameLocations": [
                            "4166:9:4"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 15,
                          "src": "4166:9:4"
                        },
                        "referencedDeclaration": 15,
                        "src": "4166:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Validator_$15_storage_ptr",
                          "typeString": "struct SmartNodes.Validator"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 373,
                  "initialValue": {
                    "baseExpression": {
                      "id": 370,
                      "name": "validators",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 54,
                      "src": "4196:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Validator_$15_storage_$",
                        "typeString": "mapping(uint256 => struct SmartNodes.Validator storage ref)"
                      }
                    },
                    "id": 372,
                    "indexExpression": {
                      "id": 371,
                      "name": "validatorId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 361,
                      "src": "4207:11:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4196:23:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Validator_$15_storage",
                      "typeString": "struct SmartNodes.Validator storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4166:53:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 375,
                          "name": "validator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 369,
                          "src": "4237:9:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Validator_$15_storage_ptr",
                            "typeString": "struct SmartNodes.Validator storage pointer"
                          }
                        },
                        "id": 376,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4247:8:4",
                        "memberName": "isActive",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 14,
                        "src": "4237:18:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56616c696461746f72206973206e6f74206163746976652e",
                        "id": 377,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4257:26:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9797bee2e6537791420a173c338dd49d009732d4333462ab1d571b8551ad2166",
                          "typeString": "literal_string \"Validator is not active.\""
                        },
                        "value": "Validator is not active."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9797bee2e6537791420a173c338dd49d009732d4333462ab1d571b8551ad2166",
                          "typeString": "literal_string \"Validator is not active.\""
                        }
                      ],
                      "id": 374,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4229:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 378,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4229:55:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 379,
                  "nodeType": "ExpressionStatement",
                  "src": "4229:55:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 386,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 381,
                              "name": "pendingJobs",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 68,
                              "src": "4315:11:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_JobCreationRequest_$41_storage_$",
                                "typeString": "mapping(uint256 => struct SmartNodes.JobCreationRequest storage ref)"
                              }
                            },
                            "id": 383,
                            "indexExpression": {
                              "id": 382,
                              "name": "jobId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 357,
                              "src": "4327:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4315:18:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_JobCreationRequest_$41_storage",
                              "typeString": "struct SmartNodes.JobCreationRequest storage ref"
                            }
                          },
                          "id": 384,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4334:2:4",
                          "memberName": "id",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 29,
                          "src": "4315:21:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 385,
                          "name": "jobId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 357,
                          "src": "4340:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4315:30:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4a6f62206372656174696f6e207265717565737420646f6573206e6f742065786973742e",
                        "id": 387,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4359:38:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_90bb02a42f5e3f861985752c50f35389179fbb8eca283c7be021f1873b49c6f8",
                          "typeString": "literal_string \"Job creation request does not exist.\""
                        },
                        "value": "Job creation request does not exist."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_90bb02a42f5e3f861985752c50f35389179fbb8eca283c7be021f1873b49c6f8",
                          "typeString": "literal_string \"Job creation request does not exist.\""
                        }
                      ],
                      "id": 380,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4294:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 388,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4294:113:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 389,
                  "nodeType": "ExpressionStatement",
                  "src": "4294:113:4"
                },
                {
                  "assignments": [
                    392
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 392,
                      "mutability": "mutable",
                      "name": "request",
                      "nameLocation": "4445:7:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 438,
                      "src": "4418:34:4",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_JobCreationRequest_$41_storage_ptr",
                        "typeString": "struct SmartNodes.JobCreationRequest"
                      },
                      "typeName": {
                        "id": 391,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 390,
                          "name": "JobCreationRequest",
                          "nameLocations": [
                            "4418:18:4"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 41,
                          "src": "4418:18:4"
                        },
                        "referencedDeclaration": 41,
                        "src": "4418:18:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_JobCreationRequest_$41_storage_ptr",
                          "typeString": "struct SmartNodes.JobCreationRequest"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 396,
                  "initialValue": {
                    "baseExpression": {
                      "id": 393,
                      "name": "pendingJobs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 68,
                      "src": "4455:11:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_JobCreationRequest_$41_storage_$",
                        "typeString": "mapping(uint256 => struct SmartNodes.JobCreationRequest storage ref)"
                      }
                    },
                    "id": 395,
                    "indexExpression": {
                      "id": 394,
                      "name": "jobId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 357,
                      "src": "4467:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4455:18:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_JobCreationRequest_$41_storage",
                      "typeString": "struct SmartNodes.JobCreationRequest storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4418:55:4"
                },
                {
                  "expression": {
                    "id": 404,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "expression": {
                          "id": 397,
                          "name": "request",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 392,
                          "src": "4483:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_JobCreationRequest_$41_storage_ptr",
                            "typeString": "struct SmartNodes.JobCreationRequest storage pointer"
                          }
                        },
                        "id": 401,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4491:10:4",
                        "memberName": "signatures",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 40,
                        "src": "4483:18:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 402,
                      "indexExpression": {
                        "expression": {
                          "id": 399,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4502:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 400,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4506:6:4",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4502:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4483:30:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 403,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4516:4:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "4483:37:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 405,
                  "nodeType": "ExpressionStatement",
                  "src": "4483:37:4"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 410,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 407,
                          "name": "request",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 392,
                          "src": "4551:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_JobCreationRequest_$41_storage_ptr",
                            "typeString": "struct SmartNodes.JobCreationRequest storage pointer"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_JobCreationRequest_$41_storage_ptr",
                            "typeString": "struct SmartNodes.JobCreationRequest storage pointer"
                          }
                        ],
                        "id": 406,
                        "name": "countSignatures",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 480,
                        "src": "4535:15:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_struct$_JobCreationRequest_$41_storage_ptr_$returns$_t_uint256_$",
                          "typeString": "function (struct SmartNodes.JobCreationRequest storage pointer) view returns (uint256)"
                        }
                      },
                      "id": 408,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4535:24:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 409,
                      "name": "requiredSignatures",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 71,
                      "src": "4563:18:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4535:46:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 437,
                  "nodeType": "IfStatement",
                  "src": "4531:389:4",
                  "trueBody": {
                    "id": 436,
                    "nodeType": "Block",
                    "src": "4583:337:4",
                    "statements": [
                      {
                        "assignments": [
                          413
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 413,
                            "mutability": "mutable",
                            "name": "job",
                            "nameLocation": "4608:3:4",
                            "nodeType": "VariableDeclaration",
                            "scope": 436,
                            "src": "4597:14:4",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Job_$27_memory_ptr",
                              "typeString": "struct SmartNodes.Job"
                            },
                            "typeName": {
                              "id": 412,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 411,
                                "name": "Job",
                                "nameLocations": [
                                  "4597:3:4"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 27,
                                "src": "4597:3:4"
                              },
                              "referencedDeclaration": 27,
                              "src": "4597:3:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Job_$27_storage_ptr",
                                "typeString": "struct SmartNodes.Job"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 424,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 415,
                              "name": "jobId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 357,
                              "src": "4640:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 416,
                                "name": "request",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 392,
                                "src": "4670:7:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_JobCreationRequest_$41_storage_ptr",
                                  "typeString": "struct SmartNodes.JobCreationRequest storage pointer"
                                }
                              },
                              "id": 417,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4678:7:4",
                              "memberName": "creator",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 31,
                              "src": "4670:15:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 418,
                                "name": "request",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 392,
                                "src": "4713:7:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_JobCreationRequest_$41_storage_ptr",
                                  "typeString": "struct SmartNodes.JobCreationRequest storage pointer"
                                }
                              },
                              "id": 419,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4721:8:4",
                              "memberName": "capacity",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 33,
                              "src": "4713:16:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 420,
                                "name": "request",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 392,
                                "src": "4764:7:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_JobCreationRequest_$41_storage_ptr",
                                  "typeString": "struct SmartNodes.JobCreationRequest storage pointer"
                                }
                              },
                              "id": 421,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4772:15:4",
                              "memberName": "workerAddresses",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 36,
                              "src": "4764:23:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            {
                              "hexValue": "66616c7365",
                              "id": 422,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4818:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "false"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 414,
                            "name": "Job",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27,
                            "src": "4614:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_Job_$27_storage_ptr_$",
                              "typeString": "type(struct SmartNodes.Job storage pointer)"
                            }
                          },
                          "id": 423,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "structConstructorCall",
                          "lValueRequested": false,
                          "nameLocations": [
                            "4636:2:4",
                            "4663:5:4",
                            "4703:8:4",
                            "4747:15:4",
                            "4805:11:4"
                          ],
                          "names": [
                            "id",
                            "owner",
                            "capacity",
                            "workerAddresses",
                            "isCompleted"
                          ],
                          "nodeType": "FunctionCall",
                          "src": "4614:224:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Job_$27_memory_ptr",
                            "typeString": "struct SmartNodes.Job memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4597:241:4"
                      },
                      {
                        "expression": {
                          "id": 429,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 425,
                              "name": "jobs",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 61,
                              "src": "4853:4:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Job_$27_storage_$",
                                "typeString": "mapping(uint256 => struct SmartNodes.Job storage ref)"
                              }
                            },
                            "id": 427,
                            "indexExpression": {
                              "id": 426,
                              "name": "jobId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 357,
                              "src": "4858:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "4853:11:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Job_$27_storage",
                              "typeString": "struct SmartNodes.Job storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 428,
                            "name": "job",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 413,
                            "src": "4867:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Job_$27_memory_ptr",
                              "typeString": "struct SmartNodes.Job memory"
                            }
                          },
                          "src": "4853:17:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Job_$27_storage",
                            "typeString": "struct SmartNodes.Job storage ref"
                          }
                        },
                        "id": 430,
                        "nodeType": "ExpressionStatement",
                        "src": "4853:17:4"
                      },
                      {
                        "expression": {
                          "id": 434,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "delete",
                          "prefix": true,
                          "src": "4884:25:4",
                          "subExpression": {
                            "baseExpression": {
                              "id": 431,
                              "name": "pendingJobs",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 68,
                              "src": "4891:11:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_JobCreationRequest_$41_storage_$",
                                "typeString": "mapping(uint256 => struct SmartNodes.JobCreationRequest storage ref)"
                              }
                            },
                            "id": 433,
                            "indexExpression": {
                              "id": 432,
                              "name": "jobId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 357,
                              "src": "4903:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "4891:18:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_JobCreationRequest_$41_storage",
                              "typeString": "struct SmartNodes.JobCreationRequest storage ref"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 435,
                        "nodeType": "ExpressionStatement",
                        "src": "4884:25:4"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "e061fe02",
            "id": 439,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approveJobCreation",
            "nameLocation": "4049:18:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 358,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 357,
                  "mutability": "mutable",
                  "name": "jobId",
                  "nameLocation": "4076:5:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 439,
                  "src": "4068:13:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 356,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4068:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4067:15:4"
            },
            "returnParameters": {
              "id": 359,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4092:0:4"
            },
            "scope": 481,
            "src": "4040:886:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 479,
              "nodeType": "Block",
              "src": "5053:243:4",
              "statements": [
                {
                  "assignments": [
                    448
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 448,
                      "mutability": "mutable",
                      "name": "count",
                      "nameLocation": "5071:5:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 479,
                      "src": "5063:13:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 447,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5063:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 450,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 449,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5079:1:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5063:17:4"
                },
                {
                  "body": {
                    "id": 475,
                    "nodeType": "Block",
                    "src": "5151:116:4",
                    "statements": [
                      {
                        "condition": {
                          "baseExpression": {
                            "expression": {
                              "id": 463,
                              "name": "request",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 442,
                              "src": "5169:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_JobCreationRequest_$41_storage_ptr",
                                "typeString": "struct SmartNodes.JobCreationRequest storage pointer"
                              }
                            },
                            "id": 464,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5177:10:4",
                            "memberName": "signatures",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 40,
                            "src": "5169:18:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 469,
                          "indexExpression": {
                            "baseExpression": {
                              "expression": {
                                "id": 465,
                                "name": "request",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 442,
                                "src": "5188:7:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_JobCreationRequest_$41_storage_ptr",
                                  "typeString": "struct SmartNodes.JobCreationRequest storage pointer"
                                }
                              },
                              "id": 466,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5196:15:4",
                              "memberName": "workerAddresses",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 36,
                              "src": "5188:23:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 468,
                            "indexExpression": {
                              "id": 467,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 452,
                              "src": "5212:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5188:26:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5169:46:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 474,
                        "nodeType": "IfStatement",
                        "src": "5165:92:4",
                        "trueBody": {
                          "id": 473,
                          "nodeType": "Block",
                          "src": "5217:40:4",
                          "statements": [
                            {
                              "expression": {
                                "id": 471,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "++",
                                "prefix": false,
                                "src": "5235:7:4",
                                "subExpression": {
                                  "id": 470,
                                  "name": "count",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 448,
                                  "src": "5235:5:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 472,
                              "nodeType": "ExpressionStatement",
                              "src": "5235:7:4"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 459,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 455,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 452,
                      "src": "5110:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "expression": {
                          "id": 456,
                          "name": "request",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 442,
                          "src": "5114:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_JobCreationRequest_$41_storage_ptr",
                            "typeString": "struct SmartNodes.JobCreationRequest storage pointer"
                          }
                        },
                        "id": 457,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5122:15:4",
                        "memberName": "workerAddresses",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 36,
                        "src": "5114:23:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 458,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5138:6:4",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "5114:30:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5110:34:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 476,
                  "initializationExpression": {
                    "assignments": [
                      452
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 452,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "5103:1:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 476,
                        "src": "5095:9:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 451,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5095:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 454,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 453,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5107:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "5095:13:4"
                  },
                  "isSimpleCounterLoop": true,
                  "loopExpression": {
                    "expression": {
                      "id": 461,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "5146:3:4",
                      "subExpression": {
                        "id": 460,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 452,
                        "src": "5146:1:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 462,
                    "nodeType": "ExpressionStatement",
                    "src": "5146:3:4"
                  },
                  "nodeType": "ForStatement",
                  "src": "5090:177:4"
                },
                {
                  "expression": {
                    "id": 477,
                    "name": "count",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 448,
                    "src": "5284:5:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 446,
                  "id": 478,
                  "nodeType": "Return",
                  "src": "5277:12:4"
                }
              ]
            },
            "id": 480,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "countSignatures",
            "nameLocation": "4941:15:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 443,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 442,
                  "mutability": "mutable",
                  "name": "request",
                  "nameLocation": "4984:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 480,
                  "src": "4957:34:4",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_JobCreationRequest_$41_storage_ptr",
                    "typeString": "struct SmartNodes.JobCreationRequest"
                  },
                  "typeName": {
                    "id": 441,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 440,
                      "name": "JobCreationRequest",
                      "nameLocations": [
                        "4957:18:4"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 41,
                      "src": "4957:18:4"
                    },
                    "referencedDeclaration": 41,
                    "src": "4957:18:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_JobCreationRequest_$41_storage_ptr",
                      "typeString": "struct SmartNodes.JobCreationRequest"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4956:36:4"
            },
            "returnParameters": {
              "id": 446,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 445,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 480,
                  "src": "5040:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 444,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5040:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5039:9:4"
            },
            "scope": 481,
            "src": "4932:364:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 482,
        "src": "118:5180:4",
        "usedErrors": [],
        "usedEvents": [
          1095,
          1104
        ]
      }
    ],
    "src": "36:5263:4"
  },
  "bytecode": "",
  "bytecodeSha1": "749c3d17617e343de84f915942050ffa830f210c",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.25+commit.b61c2a91"
  },
  "contractName": "SmartNodes",
  "coverageMap": {
    "branches": {
      "0": {
        "ERC20._approve": {
          "82": [
            10083,
            10102,
            true
          ],
          "83": [
            10161,
            10182,
            true
          ]
        },
        "ERC20._burn": {
          "87": [
            9036,
            9057,
            true
          ],
          "88": [
            9227,
            9251,
            true
          ]
        },
        "ERC20._mint": {
          "89": [
            8327,
            8348,
            true
          ]
        },
        "ERC20._transfer": {
          "84": [
            7390,
            7410,
            true
          ],
          "85": [
            7470,
            7493,
            true
          ],
          "86": [
            7661,
            7684,
            true
          ]
        },
        "ERC20.decreaseAllowance": {
          "81": [
            6564,
            6599,
            true
          ]
        },
        "ERC20.transferFrom": {
          "80": [
            5081,
            5107,
            true
          ]
        }
      },
      "1": {},
      "2": {},
      "3": {},
      "4": {
        "SmartNodes.approveJobCreation": {
          "76": [
            4237,
            4255,
            true
          ],
          "77": [
            4315,
            4345,
            true
          ],
          "78": [
            4535,
            4581,
            false
          ]
        },
        "SmartNodes.countSignatures": {
          "79": [
            5169,
            5215,
            false
          ]
        },
        "SmartNodes.createJob": {
          "72": [
            2956,
            2968,
            true
          ],
          "73": [
            3039,
            3065,
            true
          ],
          "74": [
            3275,
            3293,
            true
          ]
        },
        "SmartNodes.lockTokens": {
          "70": [
            2155,
            2165,
            true
          ],
          "71": [
            2221,
            2252,
            true
          ]
        },
        "SmartNodes.unlockTokens": {
          "75": [
            2692,
            2718,
            true
          ]
        }
      }
    },
    "statements": {
      "0": {
        "ERC20._approve": {
          "47": [
            10075,
            10143
          ],
          "48": [
            10153,
            10221
          ],
          "49": [
            10232,
            10268
          ],
          "50": [
            10278,
            10315
          ]
        },
        "ERC20._burn": {
          "58": [
            9028,
            9095
          ],
          "59": [
            9219,
            9290
          ],
          "60": [
            9324,
            9368
          ],
          "61": [
            9388,
            9410
          ],
          "62": [
            9421,
            9463
          ]
        },
        "ERC20._mint": {
          "63": [
            8319,
            8384
          ],
          "64": [
            8455,
            8477
          ],
          "65": [
            8487,
            8515
          ],
          "66": [
            8525,
            8567
          ]
        },
        "ERC20._transfer": {
          "51": [
            7382,
            7452
          ],
          "52": [
            7462,
            7533
          ],
          "53": [
            7653,
            7727
          ],
          "54": [
            7761,
            7803
          ],
          "55": [
            7823,
            7853
          ],
          "56": [
            7864,
            7904
          ],
          "57": [
            7915,
            7961
          ]
        },
        "ERC20.allowance": {
          "5": [
            3992,
            4026
          ]
        },
        "ERC20.approve": {
          "7": [
            4270,
            4309
          ],
          "9": [
            4319,
            4330
          ]
        },
        "ERC20.balanceOf": {
          "3": [
            3419,
            3444
          ]
        },
        "ERC20.decimals": {
          "2": [
            3086,
            3095
          ]
        },
        "ERC20.decreaseAllowance": {
          "34": [
            6556,
            6641
          ],
          "35": [
            6675,
            6742
          ],
          "36": [
            6763,
            6774
          ]
        },
        "ERC20.increaseAllowance": {
          "14": [
            5781,
            5861
          ]
        },
        "ERC20.name": {
          "6": [
            2153,
            2165
          ]
        },
        "ERC20.symbol": {
          "33": [
            2366,
            2380
          ]
        },
        "ERC20.totalSupply": {
          "0": [
            3242,
            3261
          ]
        },
        "ERC20.transfer": {
          "37": [
            3756,
            3798
          ]
        },
        "ERC20.transferFrom": {
          "10": [
            4956,
            4992
          ],
          "11": [
            5073,
            5152
          ],
          "12": [
            5186,
            5243
          ],
          "13": [
            5264,
            5275
          ]
        }
      },
      "1": {},
      "2": {},
      "3": {
        "Context._msgSender": {
          "8": [
            658,
            675
          ]
        }
      },
      "4": {
        "SmartNodes.approveJobCreation": {
          "42": [
            4229,
            4284
          ],
          "43": [
            4294,
            4407
          ],
          "44": [
            4483,
            4520
          ],
          "45": [
            4853,
            4870
          ],
          "46": [
            4884,
            4909
          ]
        },
        "SmartNodes.countSignatures": {
          "67": [
            5235,
            5242
          ],
          "68": [
            5146,
            5149
          ],
          "69": [
            5277,
            5289
          ]
        },
        "SmartNodes.createJob": {
          "19": [
            2948,
            3008
          ],
          "20": [
            3018,
            3129
          ],
          "21": [
            3267,
            3322
          ],
          "22": [
            3500,
            3528
          ],
          "23": [
            3538,
            3569
          ],
          "24": [
            3579,
            3609
          ],
          "25": [
            3619,
            3663
          ],
          "26": [
            3674,
            3688
          ],
          "27": [
            3861,
            3910
          ],
          "28": [
            3842,
            3845
          ],
          "29": [
            3987,
            4027
          ]
        },
        "SmartNodes.createValidator": {
          "38": [
            1881,
            1923
          ],
          "39": [
            1933,
            1986
          ],
          "40": [
            1996,
            2049
          ],
          "41": [
            2059,
            2079
          ]
        },
        "SmartNodes.getJobIdCounter": {
          "1": [
            1431,
            1450
          ]
        },
        "SmartNodes.getValidatorIdCounter": {
          "4": [
            1538,
            1563
          ]
        },
        "SmartNodes.lockTokens": {
          "15": [
            2147,
            2203
          ],
          "16": [
            2213,
            2278
          ],
          "17": [
            2417,
            2451
          ],
          "18": [
            2461,
            2486
          ]
        },
        "SmartNodes.unlockTokens": {
          "30": [
            2684,
            2753
          ],
          "31": [
            2764,
            2798
          ],
          "32": [
            2808,
            2833
          ]
        }
      }
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.2.0/Context",
    "OpenZeppelin/openzeppelin-contracts@4.2.0/ERC20",
    "OpenZeppelin/openzeppelin-contracts@4.2.0/IERC20",
    "OpenZeppelin/openzeppelin-contracts@4.2.0/IERC20Metadata"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b506004361061018e5760003560e01c80636e27d889116100de57806395d89b4111610097578063cf6acd4711610071578063cf6acd4714610406578063d56c907d14610419578063dd62ed3e14610421578063e061fe021461045a57600080fd5b806395d89b41146103d8578063a457c2d7146103e0578063a9059cbb146103f357600080fd5b80636e27d8891461036257806370a08231146103775780637369455f146103a05780637c405325146103b35780638d068043146103c65780638f029d5e146103cf57600080fd5b80632130a16f1161014b578063277645471161012557806327764547146102fc578063313ce5671461031c57806335aa2e441461032b578063395093511461034f57600080fd5b80632130a16f146102b657806323b872dd146102e157806325b61d56146102f457600080fd5b80630480b2ba1461019357806306fdde03146101f3578063095ea7b3146102085780630f5a11ca1461022b578063180aedf31461024257806318160ddd146102ae575b600080fd5b6101cb6101a1366004611509565b600b6020526000908152604090208054600182015460029092015490916001600160a01b03169083565b604080519384526001600160a01b039092166020840152908201526060015b60405180910390f35b6101fb61046d565b6040516101ea9190611572565b61021b6102163660046115a8565b6104ff565b60405190151581526020016101ea565b610234600a5481565b6040519081526020016101ea565b610284610250366004611509565b600960205260009081526040902080546001820154600283015460049093015491926001600160a01b039091169160ff1684565b604080519485526001600160a01b03909316602085015291830152151560608201526080016101ea565b600254610234565b6102346102c4366004611619565b805160208183018101805160068252928201919093012091525481565b61021b6102ef3660046116ae565b610516565b600a54610234565b61023461030a3660046116ea565b60056020526000908152604090205481565b604051601281526020016101ea565b61033e610339366004611509565b6105c5565b6040516101ea959493929190611705565b61021b61035d3660046115a8565b610694565b610375610370366004611509565b6106d0565b005b6102346103853660046116ea565b6001600160a01b031660009081526020819052604090205490565b6103756103ae36600461174e565b6107e9565b6103756103c1366004611509565b6109fa565b610234600c5481565b61023460085481565b6101fb610ab7565b61021b6103ee3660046115a8565b610ac6565b61021b6104013660046115a8565b610b5f565b610375610414366004611619565b610b6c565b600854610234565b61023461042f366004611807565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b610375610468366004611509565b610c6b565b60606003805461047c9061183a565b80601f01602080910402602001604051908101604052809291908181526020018280546104a89061183a565b80156104f55780601f106104ca576101008083540402835291602001916104f5565b820191906000526020600020905b8154815290600101906020018083116104d857829003601f168201915b5050505050905090565b600061050c338484610ed9565b5060015b92915050565b6000610523848484610ffd565b6001600160a01b0384166000908152600160209081526040808320338452909152902054828110156105ad5760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b6105ba8533858403610ed9565b506001949350505050565b60076020526000908152604090208054600182015460028301805492936001600160a01b03909216926105f79061183a565b80601f01602080910402602001604051908101604052809291908181526020018280546106239061183a565b80156106705780601f1061064557610100808354040283529160200191610670565b820191906000526020600020905b81548152906001019060200180831161065357829003601f168201915b5050506003909301549192505063ffffffff81169060ff6401000000009091041685565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909161050c9185906106cb90869061188a565b610ed9565b6000811161072a5760405162461bcd60e51b815260206004820152602160248201527f416d6f756e74206d7573742062652067726561746572207468616e207a65726f6044820152601760f91b60648201526084016105a4565b336000908152602081905260409020548111156107815760405162461bcd60e51b815260206004820152601560248201527424b739bab33334b1b4b2b73a103130b630b731b29760591b60448201526064016105a4565b3360009081526005602090815260408083205480845260079092528220600381018054929391928592906107bc90849063ffffffff1661189d565b92506101000a81548163ffffffff021916908363ffffffff1602179055506107e433846111cb565b505050565b600082116108455760405162461bcd60e51b815260206004820152602360248201527f4361706163697479206d7573742062652067726561746572207468616e207a6560448201526239379760e91b60648201526084016105a4565b60008151116108a55760405162461bcd60e51b815260206004820152602660248201527f4174206c65617374206f6e6520776f726b6572206d757374206265207370656360448201526534b334b2b21760d11b60648201526084016105a4565b3360009081526005602090815260408083205480845260079092529091206003810154640100000000900460ff1661091a5760405162461bcd60e51b81526020600482015260186024820152772b30b634b230ba37b91034b9903737ba1030b1ba34bb329760411b60448201526064016105a4565b600a546000818152600b602090815260409091209182556001820180546001600160a01b031916331790556002820186905584516109609160038401919087019061146e565b50600a8054906000610971836118ba565b919050555060005b84518110156109d657600082600401600087848151811061099c5761099c6118d3565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff1916911515919091179055600101610979565b50336000908152600490910160205260409020805460ff1916600117905550505050565b336000908152600560209081526040808320548084526007909252909120600381015463ffffffff16831115610a725760405162461bcd60e51b815260206004820152601e60248201527f416d6f756e742065786365656473206c6f636b65642062616c616e63652e000060448201526064016105a4565b600381018054849190600090610a8f90849063ffffffff166118e9565b92506101000a81548163ffffffff021916908363ffffffff1602179055506107e43384611319565b60606004805461047c9061183a565b3360009081526001602090815260408083206001600160a01b038616845290915281205482811015610b485760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016105a4565b610b553385858403610ed9565b5060019392505050565b600061050c338484610ffd565b6040805160a081018252600854808252336020808401918252838501868152600060608601819052600160808701819052948152600790925294902083518155905191810180546001600160a01b0319166001600160a01b03909316929092179091559151909182916002820190610be49082611956565b5060608201516003909101805460809093015115156401000000000264ffffffffff1990931663ffffffff90921691909117919091179055600854336000908152600560205260409081902082905551600690610c42908590611a16565b9081526040519081900360200190205560088054906000610c62836118ba565b91905055505050565b3360009081526005602090815260408083205480845260079092529091206003810154640100000000900460ff16610ce05760405162461bcd60e51b81526020600482015260186024820152772b30b634b230ba37b91034b9903737ba1030b1ba34bb329760411b60448201526064016105a4565b6000838152600b60205260409020548314610d495760405162461bcd60e51b8152602060048201526024808201527f4a6f62206372656174696f6e207265717565737420646f6573206e6f7420657860448201526334b9ba1760e11b60648201526084016105a4565b6000838152600b6020908152604080832033845260048101909252909120805460ff19166001179055600c54610d7e826113f8565b03610ed3576040805160a08101825285815260018301546001600160a01b0316602080830191909152600284015482840152600384018054845181840281018401909552808552600094606085019390929190830182828015610e0a57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610dec575b5050509183525050600060209182018190528781526009825260409081902083518155838301516001820180546001600160a01b0319166001600160a01b039092169190911790559083015160028201556060830151805193945084939192610e7b9260038501929091019061146e565b50608091909101516004909101805460ff19169115159190911790556000858152600b602052604081208181556001810180546001600160a01b03191690556002810182905590610ecf60038301826114d3565b5050505b50505050565b6001600160a01b038316610f3b5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016105a4565b6001600160a01b038216610f9c5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016105a4565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0383166110615760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016105a4565b6001600160a01b0382166110c35760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016105a4565b6001600160a01b0383166000908152602081905260409020548181101561113b5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016105a4565b6001600160a01b0380851660009081526020819052604080822085850390559185168152908120805484929061117290849061188a565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516111be91815260200190565b60405180910390a3610ed3565b6001600160a01b03821661122b5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016105a4565b6001600160a01b0382166000908152602081905260409020548181101561129f5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016105a4565b6001600160a01b03831660009081526020819052604081208383039055600280548492906112ce908490611a32565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3505050565b6001600160a01b03821661136f5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016105a4565b8060026000828254611381919061188a565b90915550506001600160a01b038216600090815260208190526040812080548392906113ae90849061188a565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b600080805b600384015481101561146757836004016000856003018381548110611424576114246118d3565b60009182526020808320909101546001600160a01b0316835282019290925260400190205460ff161561145f578161145b816118ba565b9250505b6001016113fd565b5092915050565b8280548282559060005260206000209081019282156114c3579160200282015b828111156114c357825182546001600160a01b0319166001600160a01b0390911617825560209092019160019091019061148e565b506114cf9291506114f4565b5090565b50805460008255906000526020600020908101906114f191906114f4565b50565b5b808211156114cf57600081556001016114f5565b60006020828403121561151b57600080fd5b5035919050565b60005b8381101561153d578181015183820152602001611525565b50506000910152565b6000815180845261155e816020860160208601611522565b601f01601f19169290920160200192915050565b6020815260006115856020830184611546565b9392505050565b80356001600160a01b03811681146115a357600080fd5b919050565b600080604083850312156115bb57600080fd5b6115c48361158c565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715611611576116116115d2565b604052919050565b6000602080838503121561162c57600080fd5b823567ffffffffffffffff8082111561164457600080fd5b818501915085601f83011261165857600080fd5b81358181111561166a5761166a6115d2565b61167c601f8201601f191685016115e8565b9150808252868482850101111561169257600080fd5b8084840185840137600090820190930192909252509392505050565b6000806000606084860312156116c357600080fd5b6116cc8461158c565b92506116da6020850161158c565b9150604084013590509250925092565b6000602082840312156116fc57600080fd5b6115858261158c565b8581526001600160a01b038516602082015260a06040820181905260009061172f90830186611546565b63ffffffff949094166060830152509015156080909101529392505050565b6000806040838503121561176157600080fd5b8235915060208084013567ffffffffffffffff8082111561178157600080fd5b818601915086601f83011261179557600080fd5b8135818111156117a7576117a76115d2565b8060051b91506117b88483016115e8565b81815291830184019184810190898411156117d257600080fd5b938501935b838510156117f7576117e88561158c565b825293850193908501906117d7565b8096505050505050509250929050565b6000806040838503121561181a57600080fd5b6118238361158c565b91506118316020840161158c565b90509250929050565b600181811c9082168061184e57607f821691505b60208210810361186e57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b8082018082111561051057610510611874565b63ffffffff81811683821601908082111561146757611467611874565b6000600182016118cc576118cc611874565b5060010190565b634e487b7160e01b600052603260045260246000fd5b63ffffffff82811682821603908082111561146757611467611874565b601f8211156107e4576000816000526020600020601f850160051c8101602086101561192f5750805b601f850160051c820191505b8181101561194e5782815560010161193b565b505050505050565b815167ffffffffffffffff811115611970576119706115d2565b6119848161197e845461183a565b84611906565b602080601f8311600181146119b957600084156119a15750858301515b600019600386901b1c1916600185901b17855561194e565b600085815260208120601f198616915b828110156119e8578886015182559484019460019091019084016119c9565b5085821015611a065787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60008251611a28818460208701611522565b9190910192915050565b818103818111156105105761051061187456fea2646970667358221220ce0b46fb71b4e940be28cf3b79cded9493afc546aa6d23da366f9d0f451f21ca64736f6c63430008190033",
  "deployedSourceMap": "118:5180:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1059:57;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1059:57:4;;;;;;;;401:25:5;;;-1:-1:-1;;;;;462:32:5;;;457:2;442:18;;435:60;511:18;;;504:34;389:2;374:18;1059:57:4;;;;;;;;2074:98:0;;;:::i;:::-;;;;;;;:::i;4171:166::-;;;;;;:::i;:::-;;:::i;:::-;;;1907:14:5;;1900:22;1882:41;;1870:2;1855:18;4171:166:0;1742:187:5;1025:27:4;;;;;;;;;2080:25:5;;;2068:2;2053:18;1025:27:4;1934:177:5;984:35:4;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;984:35:4;;;;;;;;;;;;2341:25:5;;;-1:-1:-1;;;;;2402:32:5;;;2397:2;2382:18;;2375:60;2451:18;;;2444:34;2521:14;2514:22;2509:2;2494:18;;2487:50;2328:3;2313:19;984:35:4;2116:427:5;3162:106:0;3249:12;;3162:106;;834:51:4;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;4804:478:0;;;;;;:::i;:::-;;:::i;1362:95:4:-;1438:12;;1362:95;;773:55;;;;;;:::i;:::-;;;;;;;;;;;;;;3011:91:0;;;3093:2;4395:36:5;;4383:2;4368:18;3011:91:0;4253:184:5;891:47:4;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;:::i;5677:212:0:-;;;;;;:::i;:::-;;:::i;2092:401:4:-;;;;;;:::i;:::-;;:::i;:::-;;3326:125:0;;;;;;:::i;:::-;-1:-1:-1;;;;;3426:18:0;3400:7;3426:18;;;;;;;;;;;;3326:125;2846:1188:4;;;;;;:::i;:::-;;:::i;2499:341::-;;;;;;:::i;:::-;;:::i;1122:37::-;;;;;;944:33;;;;;;2285:102:0;;;:::i;6376:405::-;;;;;;:::i;:::-;;:::i;3654:172::-;;;;;;:::i;:::-;;:::i;1576:510:4:-;;;;;;:::i;:::-;;:::i;1463:107::-;1545:18;;1463:107;;3884:149:0;;;;;;:::i;:::-;-1:-1:-1;;;;;3999:18:0;;;3973:7;3999:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3884:149;4040:886:4;;;;;;:::i;:::-;;:::i;2074:98:0:-;2128:13;2160:5;2153:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:98;:::o;4171:166::-;4254:4;4270:39;665:10:3;4293:7:0;4302:6;4270:8;:39::i;:::-;-1:-1:-1;4326:4:0;4171:166;;;;;:::o;4804:478::-;4940:4;4956:36;4966:6;4974:9;4985:6;4956:9;:36::i;:::-;-1:-1:-1;;;;;5030:19:0;;5003:24;5030:19;;;:11;:19;;;;;;;;665:10:3;5030:33:0;;;;;;;;5081:26;;;;5073:79;;;;-1:-1:-1;;;5073:79:0;;6882:2:5;5073:79:0;;;6864:21:5;6921:2;6901:18;;;6894:30;6960:34;6940:18;;;6933:62;-1:-1:-1;;;7011:18:5;;;7004:38;7059:19;;5073:79:0;;;;;;;;;5186:57;5195:6;665:10:3;5236:6:0;5217:16;:25;5186:8;:57::i;:::-;-1:-1:-1;5271:4:0;;4804:478;-1:-1:-1;;;;4804:478:0:o;891:47:4:-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;891:47:4;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;891:47:4;;;;;;;-1:-1:-1;;891:47:4;;;;;;;;;;;:::o;5677:212:0:-;665:10:3;5765:4:0;5813:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;5813:34:0;;;;;;;;;;5765:4;;5781:80;;5804:7;;5813:47;;5850:10;;5813:47;:::i;:::-;5781:8;:80::i;2092:401:4:-;2164:1;2155:6;:10;2147:56;;;;-1:-1:-1;;;2147:56:4;;7553:2:5;2147:56:4;;;7535:21:5;7592:2;7572:18;;;7565:30;7631:34;7611:18;;;7604:62;-1:-1:-1;;;7682:18:5;;;7675:31;7723:19;;2147:56:4;7351:397:5;2147:56:4;2231:10;3400:7:0;3426:18;;;;;;;;;;;2246:6:4;-1:-1:-1;2221:31:4;2213:65;;;;-1:-1:-1;;;2213:65:4;;7955:2:5;2213:65:4;;;7937:21:5;7994:2;7974:18;;;7967:30;-1:-1:-1;;;8013:18:5;;;8006:51;8074:18;;2213:65:4;7753:345:5;2213:65:4;2332:10;2289:19;2311:32;;;:20;:32;;;;;;;;;2383:23;;;:10;:23;;;;;2417:16;;;:34;;2311:32;;2383:23;;2444:6;;2289:19;2417:34;;2444:6;;2417:34;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;2461:25;2467:10;2479:6;2461:5;:25::i;:::-;2137:356;;2092:401;:::o;2846:1188::-;2967:1;2956:8;:12;2948:60;;;;-1:-1:-1;;;2948:60:4;;8482:2:5;2948:60:4;;;8464:21:5;8521:2;8501:18;;;8494:30;8560:34;8540:18;;;8533:62;-1:-1:-1;;;8611:18:5;;;8604:33;8654:19;;2948:60:4;8280:399:5;2948:60:4;3064:1;3039:15;:22;:26;3018:111;;;;-1:-1:-1;;;3018:111:4;;8886:2:5;3018:111:4;;;8868:21:5;8925:2;8905:18;;;8898:30;8964:34;8944:18;;;8937:62;-1:-1:-1;;;9015:18:5;;;9008:36;9061:19;;3018:111:4;8684:402:5;3018:111:4;3183:10;3140:19;3162:32;;;:20;:32;;;;;;;;;3234:23;;;:10;:23;;;;;;3275:18;;;;;;;;;3267:55;;;;-1:-1:-1;;;3267:55:4;;9293:2:5;3267:55:4;;;9275:21:5;9332:2;9312:18;;;9305:30;-1:-1:-1;;;9351:18:5;;;9344:54;9415:18;;3267:55:4;9091:348:5;3267:55:4;3477:12;;3425:37;3465:25;;;:11;:25;;;;;;;;3500:28;;;3538:18;;;:31;;-1:-1:-1;;;;;;3538:31:4;3559:10;3538:31;;;3579:19;;;:30;;;3619:44;;;;:26;;;;:44;;;;;:::i;:::-;-1:-1:-1;3674:12:4;:14;;;:12;:14;;;:::i;:::-;;;;;;3799:9;3794:127;3818:15;:22;3814:1;:26;3794:127;;;3905:5;3861:10;:21;;:41;3883:15;3899:1;3883:18;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;3861:41:4;;;;;;;;;;;-1:-1:-1;3861:41:4;:49;;-1:-1:-1;;3861:49:4;;;;;;;;;;-1:-1:-1;3842:3:4;3794:127;;;-1:-1:-1;4009:10:4;3987:33;;;;:21;;;;:33;;;;;:40;;-1:-1:-1;;3987:40:4;4023:4;3987:40;;;-1:-1:-1;;;;2846:1188:4:o;2499:341::-;2599:10;2556:19;2578:32;;;:20;:32;;;;;;;;;2650:23;;;:10;:23;;;;;;2702:16;;;;;;2692:26;;;2684:69;;;;-1:-1:-1;;;2684:69:4;;9918:2:5;2684:69:4;;;9900:21:5;9957:2;9937:18;;;9930:30;9996:32;9976:18;;;9969:60;10046:18;;2684:69:4;9716:354:5;2684:69:4;2764:16;;;:34;;2791:6;;2764:16;;;:34;;2791:6;;2764:34;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;2808:25;2814:10;2826:6;2808:5;:25::i;2285:102:0:-;2341:13;2373:7;2366:14;;;;;:::i;6376:405::-;665:10:3;6469:4:0;6512:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;6512:34:0;;;;;;;;;;6564:35;;;;6556:85;;;;-1:-1:-1;;;6556:85:0;;10457:2:5;6556:85:0;;;10439:21:5;10496:2;10476:18;;;10469:30;10535:34;10515:18;;;10508:62;-1:-1:-1;;;10586:18:5;;;10579:35;10631:19;;6556:85:0;10255:401:5;6556:85:0;6675:67;665:10:3;6698:7:0;6726:15;6707:16;:34;6675:8;:67::i;:::-;-1:-1:-1;6770:4:0;;6376:405;-1:-1:-1;;;6376:405:0:o;3654:172::-;3740:4;3756:42;665:10:3;3780:9:0;3791:6;3756:9;:42::i;1576:510:4:-;1678:192;;;;;;;;1706:18;;1678:192;;;1756:10;1678:192;;;;;;;;;;;;;-1:-1:-1;1678:192:4;;;;;;1855:4;1678:192;;;;;;1881:30;;;:10;:30;;;;;;:42;;;;;;;;;;;-1:-1:-1;;;;;;1881:42:4;-1:-1:-1;;;;;1881:42:4;;;;;;;;;;;;1678:192;;;;1881:42;;;;;;;;:::i;:::-;-1:-1:-1;1881:42:4;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1881:42:4;;;;;;;;;;;;;;;;;1968:18;;1954:10;1881:42;1933:32;;;:20;:32;;;;;;;:53;;;1996:32;:17;;:32;;2014:13;;1996:32;:::i;:::-;;;;;;;;;;;;;;:53;2059:18;:20;;;:18;:20;;;:::i;:::-;;;;;;1639:447;1576:510;:::o;4040:886::-;4145:10;4102:19;4124:32;;;:20;:32;;;;;;;;;4196:23;;;:10;:23;;;;;;4237:18;;;;;;;;;4229:55;;;;-1:-1:-1;;;4229:55:4;;9293:2:5;4229:55:4;;;9275:21:5;9332:2;9312:18;;;9305:30;-1:-1:-1;;;9351:18:5;;;9344:54;9415:18;;4229:55:4;9091:348:5;4229:55:4;4315:18;;;;:11;:18;;;;;:21;:30;;4294:113;;;;-1:-1:-1;;;4294:113:4;;13352:2:5;4294:113:4;;;13334:21:5;13391:2;13371:18;;;13364:30;13430:34;13410:18;;;13403:62;-1:-1:-1;;;13481:18:5;;;13474:34;13525:19;;4294:113:4;13150:400:5;4294:113:4;4418:34;4455:18;;;:11;:18;;;;;;;;4502:10;4483:30;;:18;;;:30;;;;;;:37;;-1:-1:-1;;4483:37:4;4516:4;4483:37;;;4563:18;;4535:24;4455:18;4535:15;:24::i;:::-;:46;4531:389;;4614:224;;;;;;;;;;;4670:15;;;;-1:-1:-1;;;;;4670:15:4;4614:224;;;;;;;;4713:16;;;;4614:224;;;;4764:23;;;4614:224;;;;;;;;;;;;;;;;;4597:14;;4614:224;;;;;;4764:23;4614:224;;;4764:23;4614:224;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4614:224:4;;;;;;;;;;;;;;;;-1:-1:-1;;;4614:224:4;;;-1:-1:-1;;4818:5:4;4614:224;;;;;;;4853:11;;;:4;:11;;;;;;;:17;;;;;;;;4614:224;4853:17;;;;-1:-1:-1;;;;;;4853:17:4;-1:-1:-1;;;;;4853:17:4;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4853:17:4;;:11;;:17;;;;;;;;;;;:::i;:::-;-1:-1:-1;4853:17:4;;;;;;;;;;;;-1:-1:-1;;4853:17:4;;;;;;;;;;-1:-1:-1;4891:18:4;;;:11;:18;;;;;4884:25;;;-1:-1:-1;4884:25:4;;;;-1:-1:-1;;;;;;4884:25:4;;;;;;;;;4891:18;4884:25;;;;-1:-1:-1;4884:25:4;:::i;:::-;;;4583:337;4531:389;4092:834;;;4040:886;:::o;9952:370:0:-;-1:-1:-1;;;;;10083:19:0;;10075:68;;;;-1:-1:-1;;;10075:68:0;;13757:2:5;10075:68:0;;;13739:21:5;13796:2;13776:18;;;13769:30;13835:34;13815:18;;;13808:62;-1:-1:-1;;;13886:18:5;;;13879:34;13930:19;;10075:68:0;13555:400:5;10075:68:0;-1:-1:-1;;;;;10161:21:0;;10153:68;;;;-1:-1:-1;;;10153:68:0;;14162:2:5;10153:68:0;;;14144:21:5;14201:2;14181:18;;;14174:30;14240:34;14220:18;;;14213:62;-1:-1:-1;;;14291:18:5;;;14284:32;14333:19;;10153:68:0;13960:398:5;10153:68:0;-1:-1:-1;;;;;10232:18:0;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10283:32;;2080:25:5;;;10283:32:0;;2053:18:5;10283:32:0;;;;;;;9952:370;;;:::o;7255:713::-;-1:-1:-1;;;;;7390:20:0;;7382:70;;;;-1:-1:-1;;;7382:70:0;;14565:2:5;7382:70:0;;;14547:21:5;14604:2;14584:18;;;14577:30;14643:34;14623:18;;;14616:62;-1:-1:-1;;;14694:18:5;;;14687:35;14739:19;;7382:70:0;14363:401:5;7382:70:0;-1:-1:-1;;;;;7470:23:0;;7462:71;;;;-1:-1:-1;;;7462:71:0;;14971:2:5;7462:71:0;;;14953:21:5;15010:2;14990:18;;;14983:30;15049:34;15029:18;;;15022:62;-1:-1:-1;;;15100:18:5;;;15093:33;15143:19;;7462:71:0;14769:399:5;7462:71:0;-1:-1:-1;;;;;7626:17:0;;7602:21;7626:17;;;;;;;;;;;7661:23;;;;7653:74;;;;-1:-1:-1;;;7653:74:0;;15375:2:5;7653:74:0;;;15357:21:5;15414:2;15394:18;;;15387:30;15453:34;15433:18;;;15426:62;-1:-1:-1;;;15504:18:5;;;15497:36;15550:19;;7653:74:0;15173:402:5;7653:74:0;-1:-1:-1;;;;;7761:17:0;;;:9;:17;;;;;;;;;;;7781:22;;;7761:42;;7823:20;;;;;;;;:30;;7797:6;;7761:9;7823:30;;7797:6;;7823:30;:::i;:::-;;;;;;;;7886:9;-1:-1:-1;;;;;7869:35:0;7878:6;-1:-1:-1;;;;;7869:35:0;;7897:6;7869:35;;;;2080:25:5;;2068:2;2053:18;;1934:177;7869:35:0;;;;;;;;7915:46;2092:401:4;8953:576:0;-1:-1:-1;;;;;9036:21:0;;9028:67;;;;-1:-1:-1;;;9028:67:0;;15782:2:5;9028:67:0;;;15764:21:5;15821:2;15801:18;;;15794:30;15860:34;15840:18;;;15833:62;-1:-1:-1;;;15911:18:5;;;15904:31;15952:19;;9028:67:0;15580:397:5;9028:67:0;-1:-1:-1;;;;;9191:18:0;;9166:22;9191:18;;;;;;;;;;;9227:24;;;;9219:71;;;;-1:-1:-1;;;9219:71:0;;16184:2:5;9219:71:0;;;16166:21:5;16223:2;16203:18;;;16196:30;16262:34;16242:18;;;16235:62;-1:-1:-1;;;16313:18:5;;;16306:32;16355:19;;9219:71:0;15982:398:5;9219:71:0;-1:-1:-1;;;;;9324:18:0;;:9;:18;;;;;;;;;;9345:23;;;9324:44;;9388:12;:22;;9362:6;;9324:9;9388:22;;9362:6;;9388:22;:::i;:::-;;;;-1:-1:-1;;9426:37:0;;2080:25:5;;;9452:1:0;;-1:-1:-1;;;;;9426:37:0;;;;;2068:2:5;2053:18;9426:37:0;;;;;;;2137:356:4;;2092:401;:::o;8244:389:0:-;-1:-1:-1;;;;;8327:21:0;;8319:65;;;;-1:-1:-1;;;8319:65:0;;16720:2:5;8319:65:0;;;16702:21:5;16759:2;16739:18;;;16732:30;16798:33;16778:18;;;16771:61;16849:18;;8319:65:0;16518:355:5;8319:65:0;8471:6;8455:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8487:18:0;;:9;:18;;;;;;;;;;:28;;8509:6;;8487:9;:28;;8509:6;;8487:28;:::i;:::-;;;;-1:-1:-1;;8530:37:0;;2080:25:5;;;-1:-1:-1;;;;;8530:37:0;;;8547:1;;8530:37;;2068:2:5;2053:18;8530:37:0;;;;;;;8244:389;;:::o;4932:364:4:-;5040:7;;;5090:177;5114:23;;;:30;5110:34;;5090:177;;;5169:7;:18;;:46;5188:7;:23;;5212:1;5188:26;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;5188:26:4;5169:46;;;;;;;;;;;;;;;5165:92;;;5235:7;;;;:::i;:::-;;;;5165:92;5146:3;;5090:177;;;-1:-1:-1;5284:5:4;4932:364;-1:-1:-1;;4932:364:4:o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;;14:180:5;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:5;;14:180;-1:-1:-1;14:180:5:o;549:250::-;634:1;644:113;658:6;655:1;652:13;644:113;;;734:11;;;728:18;715:11;;;708:39;680:2;673:10;644:113;;;-1:-1:-1;;791:1:5;773:16;;766:27;549:250::o;804:271::-;846:3;884:5;878:12;911:6;906:3;899:19;927:76;996:6;989:4;984:3;980:14;973:4;966:5;962:16;927:76;:::i;:::-;1057:2;1036:15;-1:-1:-1;;1032:29:5;1023:39;;;;1064:4;1019:50;;804:271;-1:-1:-1;;804:271:5:o;1080:220::-;1229:2;1218:9;1211:21;1192:4;1249:45;1290:2;1279:9;1275:18;1267:6;1249:45;:::i;:::-;1241:53;1080:220;-1:-1:-1;;;1080:220:5:o;1305:173::-;1373:20;;-1:-1:-1;;;;;1422:31:5;;1412:42;;1402:70;;1468:1;1465;1458:12;1402:70;1305:173;;;:::o;1483:254::-;1551:6;1559;1612:2;1600:9;1591:7;1587:23;1583:32;1580:52;;;1628:1;1625;1618:12;1580:52;1651:29;1670:9;1651:29;:::i;:::-;1641:39;1727:2;1712:18;;;;1699:32;;-1:-1:-1;;;1483:254:5:o;2548:127::-;2609:10;2604:3;2600:20;2597:1;2590:31;2640:4;2637:1;2630:15;2664:4;2661:1;2654:15;2680:275;2751:2;2745:9;2816:2;2797:13;;-1:-1:-1;;2793:27:5;2781:40;;2851:18;2836:34;;2872:22;;;2833:62;2830:88;;;2898:18;;:::i;:::-;2934:2;2927:22;2680:275;;-1:-1:-1;2680:275:5:o;2960:764::-;3029:6;3060:2;3103;3091:9;3082:7;3078:23;3074:32;3071:52;;;3119:1;3116;3109:12;3071:52;3159:9;3146:23;3188:18;3229:2;3221:6;3218:14;3215:34;;;3245:1;3242;3235:12;3215:34;3283:6;3272:9;3268:22;3258:32;;3328:7;3321:4;3317:2;3313:13;3309:27;3299:55;;3350:1;3347;3340:12;3299:55;3386:2;3373:16;3408:2;3404;3401:10;3398:36;;;3414:18;;:::i;:::-;3456:53;3499:2;3480:13;;-1:-1:-1;;3476:27:5;3472:36;;3456:53;:::i;:::-;3443:66;;3532:2;3525:5;3518:17;3572:7;3567:2;3562;3558;3554:11;3550:20;3547:33;3544:53;;;3593:1;3590;3583:12;3544:53;3648:2;3643;3639;3635:11;3630:2;3623:5;3619:14;3606:45;3692:1;3671:14;;;3667:23;;;3660:34;;;;-1:-1:-1;3675:5:5;2960:764;-1:-1:-1;;;2960:764:5:o;3729:328::-;3806:6;3814;3822;3875:2;3863:9;3854:7;3850:23;3846:32;3843:52;;;3891:1;3888;3881:12;3843:52;3914:29;3933:9;3914:29;:::i;:::-;3904:39;;3962:38;3996:2;3985:9;3981:18;3962:38;:::i;:::-;3952:48;;4047:2;4036:9;4032:18;4019:32;4009:42;;3729:328;;;;;:::o;4062:186::-;4121:6;4174:2;4162:9;4153:7;4149:23;4145:32;4142:52;;;4190:1;4187;4180:12;4142:52;4213:29;4232:9;4213:29;:::i;4442:558::-;4677:25;;;-1:-1:-1;;;;;4738:32:5;;4733:2;4718:18;;4711:60;4758:3;4802:2;4787:18;;4780:31;;;-1:-1:-1;;4828:46:5;;4854:19;;4846:6;4828:46;:::i;:::-;4922:10;4910:23;;;;4905:2;4890:18;;4883:51;-1:-1:-1;4978:14:5;;4971:22;4965:3;4950:19;;;4943:51;4820:54;4442:558;-1:-1:-1;;;4442:558:5:o;5005:1020::-;5098:6;5106;5159:2;5147:9;5138:7;5134:23;5130:32;5127:52;;;5175:1;5172;5165:12;5127:52;5211:9;5198:23;5188:33;;5240:2;5293;5282:9;5278:18;5265:32;5316:18;5357:2;5349:6;5346:14;5343:34;;;5373:1;5370;5363:12;5343:34;5411:6;5400:9;5396:22;5386:32;;5456:7;5449:4;5445:2;5441:13;5437:27;5427:55;;5478:1;5475;5468:12;5427:55;5514:2;5501:16;5536:2;5532;5529:10;5526:36;;;5542:18;;:::i;:::-;5588:2;5585:1;5581:10;5571:20;;5611:28;5635:2;5631;5627:11;5611:28;:::i;:::-;5673:15;;;5743:11;;;5739:20;;;5704:12;;;;5771:19;;;5768:39;;;5803:1;5800;5793:12;5768:39;5827:11;;;;5847:148;5863:6;5858:3;5855:15;5847:148;;;5929:23;5948:3;5929:23;:::i;:::-;5917:36;;5880:12;;;;5973;;;;5847:148;;;6014:5;6004:15;;;;;;;;5005:1020;;;;;:::o;6030:260::-;6098:6;6106;6159:2;6147:9;6138:7;6134:23;6130:32;6127:52;;;6175:1;6172;6165:12;6127:52;6198:29;6217:9;6198:29;:::i;:::-;6188:39;;6246:38;6280:2;6269:9;6265:18;6246:38;:::i;:::-;6236:48;;6030:260;;;;;:::o;6295:380::-;6374:1;6370:12;;;;6417;;;6438:61;;6492:4;6484:6;6480:17;6470:27;;6438:61;6545:2;6537:6;6534:14;6514:18;6511:38;6508:161;;6591:10;6586:3;6582:20;6579:1;6572:31;6626:4;6623:1;6616:15;6654:4;6651:1;6644:15;6508:161;;6295:380;;;:::o;7089:127::-;7150:10;7145:3;7141:20;7138:1;7131:31;7181:4;7178:1;7171:15;7205:4;7202:1;7195:15;7221:125;7286:9;;;7307:10;;;7304:36;;;7320:18;;:::i;8103:172::-;8170:10;8200;;;8212;;;8196:27;;8235:11;;;8232:37;;;8249:18;;:::i;9444:135::-;9483:3;9504:17;;;9501:43;;9524:18;;:::i;:::-;-1:-1:-1;9571:1:5;9560:13;;9444:135::o;9584:127::-;9645:10;9640:3;9636:20;9633:1;9626:31;9676:4;9673:1;9666:15;9700:4;9697:1;9690:15;10075:175;10143:10;10186;;;10174;;;10170:27;;10209:12;;;10206:38;;;10224:18;;:::i;10787:543::-;10889:2;10884:3;10881:11;10878:446;;;10925:1;10949:5;10946:1;10939:16;10993:4;10990:1;10980:18;11063:2;11051:10;11047:19;11044:1;11040:27;11034:4;11030:38;11099:4;11087:10;11084:20;11081:47;;;-1:-1:-1;11122:4:5;11081:47;11177:2;11172:3;11168:12;11165:1;11161:20;11155:4;11151:31;11141:41;;11232:82;11250:2;11243:5;11240:13;11232:82;;;11295:17;;;11276:1;11265:13;11232:82;;;11236:3;;;10787:543;;;:::o;11506:1345::-;11632:3;11626:10;11659:18;11651:6;11648:30;11645:56;;;11681:18;;:::i;:::-;11710:97;11800:6;11760:38;11792:4;11786:11;11760:38;:::i;:::-;11754:4;11710:97;:::i;:::-;11862:4;;11919:2;11908:14;;11936:1;11931:663;;;;12638:1;12655:6;12652:89;;;-1:-1:-1;12707:19:5;;;12701:26;12652:89;-1:-1:-1;;11463:1:5;11459:11;;;11455:24;11451:29;11441:40;11487:1;11483:11;;;11438:57;12754:81;;11901:944;;11931:663;10734:1;10727:14;;;10771:4;10758:18;;-1:-1:-1;;11967:20:5;;;12085:236;12099:7;12096:1;12093:14;12085:236;;;12188:19;;;12182:26;12167:42;;12280:27;;;;12248:1;12236:14;;;;12115:19;;12085:236;;;12089:3;12349:6;12340:7;12337:19;12334:201;;;12410:19;;;12404:26;-1:-1:-1;;12493:1:5;12489:14;;;12505:3;12485:24;12481:37;12477:42;12462:58;12447:74;;12334:201;-1:-1:-1;;;;;12581:1:5;12565:14;;;12561:22;12548:36;;-1:-1:-1;11506:1345:5:o;12856:289::-;12987:3;13025:6;13019:13;13041:66;13100:6;13095:3;13088:4;13080:6;13076:17;13041:66;:::i;:::-;13123:16;;;;;12856:289;-1:-1:-1;;12856:289:5:o;16385:128::-;16452:9;;;16473:11;;;16470:37;;;16487:18;;:::i",
  "language": "Solidity",
  "natspec": {
    "events": {
      "Approval(address,address,uint256)": {
        "details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
      },
      "Transfer(address,address,uint256)": {
        "details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
      }
    },
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
      }
    },
    "version": 1
  },
  "offset": [
    118,
    5298
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x18E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6E27D889 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xCF6ACD47 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xCF6ACD47 EQ PUSH2 0x406 JUMPI DUP1 PUSH4 0xD56C907D EQ PUSH2 0x419 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x421 JUMPI DUP1 PUSH4 0xE061FE02 EQ PUSH2 0x45A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x3D8 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x3E0 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x3F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6E27D889 EQ PUSH2 0x362 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x377 JUMPI DUP1 PUSH4 0x7369455F EQ PUSH2 0x3A0 JUMPI DUP1 PUSH4 0x7C405325 EQ PUSH2 0x3B3 JUMPI DUP1 PUSH4 0x8D068043 EQ PUSH2 0x3C6 JUMPI DUP1 PUSH4 0x8F029D5E EQ PUSH2 0x3CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2130A16F GT PUSH2 0x14B JUMPI DUP1 PUSH4 0x27764547 GT PUSH2 0x125 JUMPI DUP1 PUSH4 0x27764547 EQ PUSH2 0x2FC JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x31C JUMPI DUP1 PUSH4 0x35AA2E44 EQ PUSH2 0x32B JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x34F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2130A16F EQ PUSH2 0x2B6 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2E1 JUMPI DUP1 PUSH4 0x25B61D56 EQ PUSH2 0x2F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x480B2BA EQ PUSH2 0x193 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1F3 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x208 JUMPI DUP1 PUSH4 0xF5A11CA EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0x180AEDF3 EQ PUSH2 0x242 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x2AE JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1CB PUSH2 0x1A1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1509 JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x20 DUP5 ADD MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FB PUSH2 0x46D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EA SWAP2 SWAP1 PUSH2 0x1572 JUMP JUMPDEST PUSH2 0x21B PUSH2 0x216 CALLDATASIZE PUSH1 0x4 PUSH2 0x15A8 JUMP JUMPDEST PUSH2 0x4FF JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1EA JUMP JUMPDEST PUSH2 0x234 PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1EA JUMP JUMPDEST PUSH2 0x284 PUSH2 0x250 CALLDATASIZE PUSH1 0x4 PUSH2 0x1509 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x4 SWAP1 SWAP4 ADD SLOAD SWAP2 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 PUSH1 0xFF AND DUP5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP5 DUP6 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND PUSH1 0x20 DUP6 ADD MSTORE SWAP2 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD PUSH2 0x1EA JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x234 JUMP JUMPDEST PUSH2 0x234 PUSH2 0x2C4 CALLDATASIZE PUSH1 0x4 PUSH2 0x1619 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD DUP1 MLOAD PUSH1 0x6 DUP3 MSTORE SWAP3 DUP3 ADD SWAP2 SWAP1 SWAP4 ADD KECCAK256 SWAP2 MSTORE SLOAD DUP2 JUMP JUMPDEST PUSH2 0x21B PUSH2 0x2EF CALLDATASIZE PUSH1 0x4 PUSH2 0x16AE JUMP JUMPDEST PUSH2 0x516 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH2 0x234 JUMP JUMPDEST PUSH2 0x234 PUSH2 0x30A CALLDATASIZE PUSH1 0x4 PUSH2 0x16EA JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1EA JUMP JUMPDEST PUSH2 0x33E PUSH2 0x339 CALLDATASIZE PUSH1 0x4 PUSH2 0x1509 JUMP JUMPDEST PUSH2 0x5C5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EA SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1705 JUMP JUMPDEST PUSH2 0x21B PUSH2 0x35D CALLDATASIZE PUSH1 0x4 PUSH2 0x15A8 JUMP JUMPDEST PUSH2 0x694 JUMP JUMPDEST PUSH2 0x375 PUSH2 0x370 CALLDATASIZE PUSH1 0x4 PUSH2 0x1509 JUMP JUMPDEST PUSH2 0x6D0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x234 PUSH2 0x385 CALLDATASIZE PUSH1 0x4 PUSH2 0x16EA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x375 PUSH2 0x3AE CALLDATASIZE PUSH1 0x4 PUSH2 0x174E JUMP JUMPDEST PUSH2 0x7E9 JUMP JUMPDEST PUSH2 0x375 PUSH2 0x3C1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1509 JUMP JUMPDEST PUSH2 0x9FA JUMP JUMPDEST PUSH2 0x234 PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH2 0x234 PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1FB PUSH2 0xAB7 JUMP JUMPDEST PUSH2 0x21B PUSH2 0x3EE CALLDATASIZE PUSH1 0x4 PUSH2 0x15A8 JUMP JUMPDEST PUSH2 0xAC6 JUMP JUMPDEST PUSH2 0x21B PUSH2 0x401 CALLDATASIZE PUSH1 0x4 PUSH2 0x15A8 JUMP JUMPDEST PUSH2 0xB5F JUMP JUMPDEST PUSH2 0x375 PUSH2 0x414 CALLDATASIZE PUSH1 0x4 PUSH2 0x1619 JUMP JUMPDEST PUSH2 0xB6C JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x234 JUMP JUMPDEST PUSH2 0x234 PUSH2 0x42F CALLDATASIZE PUSH1 0x4 PUSH2 0x1807 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x375 PUSH2 0x468 CALLDATASIZE PUSH1 0x4 PUSH2 0x1509 JUMP JUMPDEST PUSH2 0xC6B JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x47C SWAP1 PUSH2 0x183A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4A8 SWAP1 PUSH2 0x183A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4F5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4CA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4F5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4D8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x50C CALLER DUP5 DUP5 PUSH2 0xED9 JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x523 DUP5 DUP5 DUP5 PUSH2 0xFFD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x5AD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732061 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x6C6C6F77616E6365 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5BA DUP6 CALLER DUP6 DUP5 SUB PUSH2 0xED9 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD DUP1 SLOAD SWAP3 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 PUSH2 0x5F7 SWAP1 PUSH2 0x183A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x623 SWAP1 PUSH2 0x183A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x670 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x645 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x670 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x653 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP PUSH1 0x3 SWAP1 SWAP4 ADD SLOAD SWAP2 SWAP3 POP POP PUSH4 0xFFFFFFFF DUP2 AND SWAP1 PUSH1 0xFF PUSH5 0x100000000 SWAP1 SWAP2 DIV AND DUP6 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x50C SWAP2 DUP6 SWAP1 PUSH2 0x6CB SWAP1 DUP7 SWAP1 PUSH2 0x188A JUMP JUMPDEST PUSH2 0xED9 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x72A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E207A65726F PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5A4 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0x781 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x24B739BAB33334B1B4B2B73A103130B630B731B297 PUSH1 0x59 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5A4 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD DUP1 DUP5 MSTORE PUSH1 0x7 SWAP1 SWAP3 MSTORE DUP3 KECCAK256 PUSH1 0x3 DUP2 ADD DUP1 SLOAD SWAP3 SWAP4 SWAP2 SWAP3 DUP6 SWAP3 SWAP1 PUSH2 0x7BC SWAP1 DUP5 SWAP1 PUSH4 0xFFFFFFFF AND PUSH2 0x189D JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x7E4 CALLER DUP5 PUSH2 0x11CB JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x845 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4361706163697479206D7573742062652067726561746572207468616E207A65 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x393797 PUSH1 0xE9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5A4 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x8A5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4174206C65617374206F6E6520776F726B6572206D7573742062652073706563 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x34B334B2B217 PUSH1 0xD1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5A4 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD DUP1 DUP5 MSTORE PUSH1 0x7 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 PUSH1 0x3 DUP2 ADD SLOAD PUSH5 0x100000000 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x91A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x2B30B634B230BA37B91034B9903737BA1030B1BA34BB3297 PUSH1 0x41 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5A4 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SWAP2 DUP3 SSTORE PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH1 0x2 DUP3 ADD DUP7 SWAP1 SSTORE DUP5 MLOAD PUSH2 0x960 SWAP2 PUSH1 0x3 DUP5 ADD SWAP2 SWAP1 DUP8 ADD SWAP1 PUSH2 0x146E JUMP JUMPDEST POP PUSH1 0xA DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0x971 DUP4 PUSH2 0x18BA JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x9D6 JUMPI PUSH1 0x0 DUP3 PUSH1 0x4 ADD PUSH1 0x0 DUP8 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x99C JUMPI PUSH2 0x99C PUSH2 0x18D3 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x1 ADD PUSH2 0x979 JUMP JUMPDEST POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 SWAP1 SWAP2 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD DUP1 DUP5 MSTORE PUSH1 0x7 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 PUSH1 0x3 DUP2 ADD SLOAD PUSH4 0xFFFFFFFF AND DUP4 GT ISZERO PUSH2 0xA72 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E742065786365656473206C6F636B65642062616C616E63652E0000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5A4 JUMP JUMPDEST PUSH1 0x3 DUP2 ADD DUP1 SLOAD DUP5 SWAP2 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0xA8F SWAP1 DUP5 SWAP1 PUSH4 0xFFFFFFFF AND PUSH2 0x18E9 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x7E4 CALLER DUP5 PUSH2 0x1319 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x47C SWAP1 PUSH2 0x183A JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0xB48 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5A4 JUMP JUMPDEST PUSH2 0xB55 CALLER DUP6 DUP6 DUP5 SUB PUSH2 0xED9 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x50C CALLER DUP5 DUP5 PUSH2 0xFFD JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE PUSH1 0x8 SLOAD DUP1 DUP3 MSTORE CALLER PUSH1 0x20 DUP1 DUP5 ADD SWAP2 DUP3 MSTORE DUP4 DUP6 ADD DUP7 DUP2 MSTORE PUSH1 0x0 PUSH1 0x60 DUP7 ADD DUP2 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x80 DUP8 ADD DUP2 SWAP1 MSTORE SWAP5 DUP2 MSTORE PUSH1 0x7 SWAP1 SWAP3 MSTORE SWAP5 SWAP1 KECCAK256 DUP4 MLOAD DUP2 SSTORE SWAP1 MLOAD SWAP2 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP1 SWAP2 DUP3 SWAP2 PUSH1 0x2 DUP3 ADD SWAP1 PUSH2 0xBE4 SWAP1 DUP3 PUSH2 0x1956 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x3 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x80 SWAP1 SWAP4 ADD MLOAD ISZERO ISZERO PUSH5 0x100000000 MUL PUSH5 0xFFFFFFFFFF NOT SWAP1 SWAP4 AND PUSH4 0xFFFFFFFF SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x8 SLOAD CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP3 SWAP1 SSTORE MLOAD PUSH1 0x6 SWAP1 PUSH2 0xC42 SWAP1 DUP6 SWAP1 PUSH2 0x1A16 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 SSTORE PUSH1 0x8 DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0xC62 DUP4 PUSH2 0x18BA JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD DUP1 DUP5 MSTORE PUSH1 0x7 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 PUSH1 0x3 DUP2 ADD SLOAD PUSH5 0x100000000 SWAP1 DIV PUSH1 0xFF AND PUSH2 0xCE0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x2B30B634B230BA37B91034B9903737BA1030B1BA34BB3297 PUSH1 0x41 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5A4 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP4 EQ PUSH2 0xD49 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4A6F62206372656174696F6E207265717565737420646F6573206E6F74206578 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x34B9BA17 PUSH1 0xE1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5A4 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE PUSH1 0x4 DUP2 ADD SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0xC SLOAD PUSH2 0xD7E DUP3 PUSH2 0x13F8 JUMP JUMPDEST SUB PUSH2 0xED3 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE DUP6 DUP2 MSTORE PUSH1 0x1 DUP4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x2 DUP5 ADD SLOAD DUP3 DUP5 ADD MSTORE PUSH1 0x3 DUP5 ADD DUP1 SLOAD DUP5 MLOAD DUP2 DUP5 MUL DUP2 ADD DUP5 ADD SWAP1 SWAP6 MSTORE DUP1 DUP6 MSTORE PUSH1 0x0 SWAP5 PUSH1 0x60 DUP6 ADD SWAP4 SWAP1 SWAP3 SWAP2 SWAP1 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0xE0A JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xDEC JUMPI JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x0 PUSH1 0x20 SWAP2 DUP3 ADD DUP2 SWAP1 MSTORE DUP8 DUP2 MSTORE PUSH1 0x9 DUP3 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP4 MLOAD DUP2 SSTORE DUP4 DUP4 ADD MLOAD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE SWAP1 DUP4 ADD MLOAD PUSH1 0x2 DUP3 ADD SSTORE PUSH1 0x60 DUP4 ADD MLOAD DUP1 MLOAD SWAP4 SWAP5 POP DUP5 SWAP4 SWAP2 SWAP3 PUSH2 0xE7B SWAP3 PUSH1 0x3 DUP6 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x146E JUMP JUMPDEST POP PUSH1 0x80 SWAP2 SWAP1 SWAP2 ADD MLOAD PUSH1 0x4 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP2 DUP2 SSTORE PUSH1 0x1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE PUSH1 0x2 DUP2 ADD DUP3 SWAP1 SSTORE SWAP1 PUSH2 0xECF PUSH1 0x3 DUP4 ADD DUP3 PUSH2 0x14D3 JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xF3B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5A4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xF9C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5A4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1061 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5A4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x10C3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5A4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x113B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5A4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x1172 SWAP1 DUP5 SWAP1 PUSH2 0x188A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x11BE SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xED3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x122B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5A4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x129F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5A4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP4 DUP4 SUB SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x12CE SWAP1 DUP5 SWAP1 PUSH2 0x1A32 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x136F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5A4 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1381 SWAP2 SWAP1 PUSH2 0x188A JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x13AE SWAP1 DUP5 SWAP1 PUSH2 0x188A JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 JUMPDEST PUSH1 0x3 DUP5 ADD SLOAD DUP2 LT ISZERO PUSH2 0x1467 JUMPI DUP4 PUSH1 0x4 ADD PUSH1 0x0 DUP6 PUSH1 0x3 ADD DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x1424 JUMPI PUSH2 0x1424 PUSH2 0x18D3 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x145F JUMPI DUP2 PUSH2 0x145B DUP2 PUSH2 0x18BA JUMP JUMPDEST SWAP3 POP POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x13FD JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x14C3 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x14C3 JUMPI DUP3 MLOAD DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND OR DUP3 SSTORE PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x148E JUMP JUMPDEST POP PUSH2 0x14CF SWAP3 SWAP2 POP PUSH2 0x14F4 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST POP DUP1 SLOAD PUSH1 0x0 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x14F1 SWAP2 SWAP1 PUSH2 0x14F4 JUMP JUMPDEST POP JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x14CF JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x14F5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x151B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x153D JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1525 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x155E DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x1522 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1585 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1546 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x15A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x15C4 DUP4 PUSH2 0x158C JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1611 JUMPI PUSH2 0x1611 PUSH2 0x15D2 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x162C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1644 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1658 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x166A JUMPI PUSH2 0x166A PUSH2 0x15D2 JUMP JUMPDEST PUSH2 0x167C PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP6 ADD PUSH2 0x15E8 JUMP JUMPDEST SWAP2 POP DUP1 DUP3 MSTORE DUP7 DUP5 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x1692 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP5 DUP5 ADD DUP6 DUP5 ADD CALLDATACOPY PUSH1 0x0 SWAP1 DUP3 ADD SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x16C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x16CC DUP5 PUSH2 0x158C JUMP JUMPDEST SWAP3 POP PUSH2 0x16DA PUSH1 0x20 DUP6 ADD PUSH2 0x158C JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1585 DUP3 PUSH2 0x158C JUMP JUMPDEST DUP6 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x172F SWAP1 DUP4 ADD DUP7 PUSH2 0x1546 JUMP JUMPDEST PUSH4 0xFFFFFFFF SWAP5 SWAP1 SWAP5 AND PUSH1 0x60 DUP4 ADD MSTORE POP SWAP1 ISZERO ISZERO PUSH1 0x80 SWAP1 SWAP2 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1761 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP1 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1781 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1795 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x17A7 JUMPI PUSH2 0x17A7 PUSH2 0x15D2 JUMP JUMPDEST DUP1 PUSH1 0x5 SHL SWAP2 POP PUSH2 0x17B8 DUP5 DUP4 ADD PUSH2 0x15E8 JUMP JUMPDEST DUP2 DUP2 MSTORE SWAP2 DUP4 ADD DUP5 ADD SWAP2 DUP5 DUP2 ADD SWAP1 DUP10 DUP5 GT ISZERO PUSH2 0x17D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 DUP6 ADD SWAP4 JUMPDEST DUP4 DUP6 LT ISZERO PUSH2 0x17F7 JUMPI PUSH2 0x17E8 DUP6 PUSH2 0x158C JUMP JUMPDEST DUP3 MSTORE SWAP4 DUP6 ADD SWAP4 SWAP1 DUP6 ADD SWAP1 PUSH2 0x17D7 JUMP JUMPDEST DUP1 SWAP7 POP POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x181A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1823 DUP4 PUSH2 0x158C JUMP JUMPDEST SWAP2 POP PUSH2 0x1831 PUSH1 0x20 DUP5 ADD PUSH2 0x158C JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x184E JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x186E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x510 JUMPI PUSH2 0x510 PUSH2 0x1874 JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP2 DUP2 AND DUP4 DUP3 AND ADD SWAP1 DUP1 DUP3 GT ISZERO PUSH2 0x1467 JUMPI PUSH2 0x1467 PUSH2 0x1874 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x18CC JUMPI PUSH2 0x18CC PUSH2 0x1874 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0xFFFFFFFF DUP3 DUP2 AND DUP3 DUP3 AND SUB SWAP1 DUP1 DUP3 GT ISZERO PUSH2 0x1467 JUMPI PUSH2 0x1467 PUSH2 0x1874 JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x7E4 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x192F JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x194E JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x193B JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1970 JUMPI PUSH2 0x1970 PUSH2 0x15D2 JUMP JUMPDEST PUSH2 0x1984 DUP2 PUSH2 0x197E DUP5 SLOAD PUSH2 0x183A JUMP JUMPDEST DUP5 PUSH2 0x1906 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x19B9 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x19A1 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x194E JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x19E8 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x19C9 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x1A06 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x1A28 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x1522 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x510 JUMPI PUSH2 0x510 PUSH2 0x1874 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCE SIGNEXTEND CHAINID 0xFB PUSH18 0xB4E940BE28CF3B79CDED9493AFC546AA6D23 0xDA CALLDATASIZE PUSH16 0x9D0F451F21CA64736F6C634300081900 CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        118,
        5298
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "CALLVALUE",
      "path": "4"
    },
    "6": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "DUP1",
      "path": "4"
    },
    "7": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "8": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "12": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "DUP1",
      "path": "4"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "REVERT",
      "path": "4"
    },
    "16": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "17": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "POP",
      "path": "4"
    },
    "18": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "21": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "LT",
      "path": "4"
    },
    "22": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x18E"
    },
    "25": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "26": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "CALLDATALOAD",
      "path": "4"
    },
    "29": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "SHR",
      "path": "4"
    },
    "32": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "DUP1",
      "path": "4"
    },
    "33": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x6E27D889"
    },
    "38": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "GT",
      "path": "4"
    },
    "39": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xDE"
    },
    "42": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "43": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "DUP1",
      "path": "4"
    },
    "44": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x95D89B41"
    },
    "49": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "GT",
      "path": "4"
    },
    "50": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x97"
    },
    "53": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "54": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "DUP1",
      "path": "4"
    },
    "55": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xCF6ACD47"
    },
    "60": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "GT",
      "path": "4"
    },
    "61": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x71"
    },
    "64": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "65": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "DUP1",
      "path": "4"
    },
    "66": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xCF6ACD47"
    },
    "71": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "EQ",
      "path": "4"
    },
    "72": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x406"
    },
    "75": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "76": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "DUP1",
      "path": "4"
    },
    "77": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xD56C907D"
    },
    "82": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "EQ",
      "path": "4"
    },
    "83": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x419"
    },
    "86": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "87": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "DUP1",
      "path": "4"
    },
    "88": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xDD62ED3E"
    },
    "93": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "EQ",
      "path": "4"
    },
    "94": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x421"
    },
    "97": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "98": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "DUP1",
      "path": "4"
    },
    "99": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xE061FE02"
    },
    "104": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "EQ",
      "path": "4"
    },
    "105": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x45A"
    },
    "108": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "109": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "111": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "DUP1",
      "path": "4"
    },
    "112": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "REVERT",
      "path": "4"
    },
    "113": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "114": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "DUP1",
      "path": "4"
    },
    "115": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x95D89B41"
    },
    "120": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "EQ",
      "path": "4"
    },
    "121": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x3D8"
    },
    "124": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "125": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "DUP1",
      "path": "4"
    },
    "126": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xA457C2D7"
    },
    "131": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "EQ",
      "path": "4"
    },
    "132": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x3E0"
    },
    "135": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "136": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "DUP1",
      "path": "4"
    },
    "137": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xA9059CBB"
    },
    "142": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "EQ",
      "path": "4"
    },
    "143": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x3F3"
    },
    "146": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "147": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "149": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "DUP1",
      "path": "4"
    },
    "150": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "REVERT",
      "path": "4"
    },
    "151": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "152": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "DUP1",
      "path": "4"
    },
    "153": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x6E27D889"
    },
    "158": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "EQ",
      "path": "4"
    },
    "159": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x362"
    },
    "162": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "163": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "DUP1",
      "path": "4"
    },
    "164": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x70A08231"
    },
    "169": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "EQ",
      "path": "4"
    },
    "170": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x377"
    },
    "173": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "174": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "DUP1",
      "path": "4"
    },
    "175": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x7369455F"
    },
    "180": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "EQ",
      "path": "4"
    },
    "181": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x3A0"
    },
    "184": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "185": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "DUP1",
      "path": "4"
    },
    "186": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x7C405325"
    },
    "191": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "EQ",
      "path": "4"
    },
    "192": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x3B3"
    },
    "195": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "196": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "DUP1",
      "path": "4"
    },
    "197": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x8D068043"
    },
    "202": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "EQ",
      "path": "4"
    },
    "203": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x3C6"
    },
    "206": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "207": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "DUP1",
      "path": "4"
    },
    "208": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x8F029D5E"
    },
    "213": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "EQ",
      "path": "4"
    },
    "214": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x3CF"
    },
    "217": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "218": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "220": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "DUP1",
      "path": "4"
    },
    "221": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "REVERT",
      "path": "4"
    },
    "222": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "223": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "DUP1",
      "path": "4"
    },
    "224": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x2130A16F"
    },
    "229": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "GT",
      "path": "4"
    },
    "230": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x14B"
    },
    "233": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "234": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "DUP1",
      "path": "4"
    },
    "235": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x27764547"
    },
    "240": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "GT",
      "path": "4"
    },
    "241": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x125"
    },
    "244": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "245": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "DUP1",
      "path": "4"
    },
    "246": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x27764547"
    },
    "251": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "EQ",
      "path": "4"
    },
    "252": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2FC"
    },
    "255": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "256": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "DUP1",
      "path": "4"
    },
    "257": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x313CE567"
    },
    "262": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "EQ",
      "path": "4"
    },
    "263": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x31C"
    },
    "266": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "267": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "DUP1",
      "path": "4"
    },
    "268": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x35AA2E44"
    },
    "273": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "EQ",
      "path": "4"
    },
    "274": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x32B"
    },
    "277": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "278": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "DUP1",
      "path": "4"
    },
    "279": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x39509351"
    },
    "284": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "EQ",
      "path": "4"
    },
    "285": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x34F"
    },
    "288": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "289": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "291": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "DUP1",
      "path": "4"
    },
    "292": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "REVERT",
      "path": "4"
    },
    "293": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "294": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "DUP1",
      "path": "4"
    },
    "295": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x2130A16F"
    },
    "300": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "EQ",
      "path": "4"
    },
    "301": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2B6"
    },
    "304": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "305": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "DUP1",
      "path": "4"
    },
    "306": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x23B872DD"
    },
    "311": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "EQ",
      "path": "4"
    },
    "312": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2E1"
    },
    "315": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "316": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "DUP1",
      "path": "4"
    },
    "317": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x25B61D56"
    },
    "322": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "EQ",
      "path": "4"
    },
    "323": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2F4"
    },
    "326": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "327": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "329": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "DUP1",
      "path": "4"
    },
    "330": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "REVERT",
      "path": "4"
    },
    "331": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "332": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "DUP1",
      "path": "4"
    },
    "333": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x480B2BA"
    },
    "338": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "EQ",
      "path": "4"
    },
    "339": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x193"
    },
    "342": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "343": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "DUP1",
      "path": "4"
    },
    "344": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x6FDDE03"
    },
    "349": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "EQ",
      "path": "4"
    },
    "350": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1F3"
    },
    "353": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "354": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "DUP1",
      "path": "4"
    },
    "355": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x95EA7B3"
    },
    "360": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "EQ",
      "path": "4"
    },
    "361": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x208"
    },
    "364": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "365": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "DUP1",
      "path": "4"
    },
    "366": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xF5A11CA"
    },
    "371": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "EQ",
      "path": "4"
    },
    "372": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x22B"
    },
    "375": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "376": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "DUP1",
      "path": "4"
    },
    "377": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x180AEDF3"
    },
    "382": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "EQ",
      "path": "4"
    },
    "383": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x242"
    },
    "386": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "387": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "DUP1",
      "path": "4"
    },
    "388": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x18160DDD"
    },
    "393": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "EQ",
      "path": "4"
    },
    "394": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2AE"
    },
    "397": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "398": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "399": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "401": {
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "DUP1",
      "path": "4"
    },
    "402": {
      "first_revert": true,
      "fn": null,
      "offset": [
        118,
        5298
      ],
      "op": "REVERT",
      "path": "4"
    },
    "403": {
      "offset": [
        1059,
        1116
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "404": {
      "fn": null,
      "offset": [
        1059,
        1116
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1CB"
    },
    "407": {
      "fn": null,
      "offset": [
        1059,
        1116
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1A1"
    },
    "410": {
      "fn": null,
      "offset": [
        1059,
        1116
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "411": {
      "fn": null,
      "offset": [
        1059,
        1116
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "413": {
      "fn": null,
      "offset": [
        1059,
        1116
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1509"
    },
    "416": {
      "fn": null,
      "jump": "i",
      "offset": [
        1059,
        1116
      ],
      "op": "JUMP",
      "path": "4"
    },
    "417": {
      "fn": null,
      "offset": [
        1059,
        1116
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "418": {
      "fn": null,
      "offset": [
        1059,
        1116
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xB"
    },
    "420": {
      "fn": null,
      "offset": [
        1059,
        1116
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "422": {
      "fn": null,
      "offset": [
        1059,
        1116
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "423": {
      "fn": null,
      "offset": [
        1059,
        1116
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "425": {
      "fn": null,
      "offset": [
        1059,
        1116
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "426": {
      "fn": null,
      "offset": [
        1059,
        1116
      ],
      "op": "DUP2",
      "path": "4"
    },
    "427": {
      "fn": null,
      "offset": [
        1059,
        1116
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "428": {
      "fn": null,
      "offset": [
        1059,
        1116
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "430": {
      "fn": null,
      "offset": [
        1059,
        1116
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "431": {
      "fn": null,
      "offset": [
        1059,
        1116
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "432": {
      "fn": null,
      "offset": [
        1059,
        1116
      ],
      "op": "DUP1",
      "path": "4"
    },
    "433": {
      "fn": null,
      "offset": [
        1059,
        1116
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "434": {
      "fn": null,
      "offset": [
        1059,
        1116
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "436": {
      "fn": null,
      "offset": [
        1059,
        1116
      ],
      "op": "DUP3",
      "path": "4"
    },
    "437": {
      "fn": null,
      "offset": [
        1059,
        1116
      ],
      "op": "ADD",
      "path": "4"
    },
    "438": {
      "fn": null,
      "offset": [
        1059,
        1116
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "439": {
      "fn": null,
      "offset": [
        1059,
        1116
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "441": {
      "fn": null,
      "offset": [
        1059,
        1116
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "442": {
      "fn": null,
      "offset": [
        1059,
        1116
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "443": {
      "fn": null,
      "offset": [
        1059,
        1116
      ],
      "op": "ADD",
      "path": "4"
    },
    "444": {
      "fn": null,
      "offset": [
        1059,
        1116
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "445": {
      "fn": null,
      "offset": [
        1059,
        1116
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "446": {
      "fn": null,
      "offset": [
        1059,
        1116
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "447": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "449": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "451": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "453": {
      "op": "SHL"
    },
    "454": {
      "op": "SUB"
    },
    "455": {
      "offset": [
        1059,
        1116
      ],
      "op": "AND",
      "path": "4"
    },
    "456": {
      "fn": null,
      "offset": [
        1059,
        1116
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "457": {
      "fn": null,
      "offset": [
        1059,
        1116
      ],
      "op": "DUP4",
      "path": "4"
    },
    "458": {
      "fn": null,
      "offset": [
        1059,
        1116
      ],
      "op": "JUMP",
      "path": "4"
    },
    "459": {
      "fn": null,
      "offset": [
        1059,
        1116
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "460": {
      "fn": null,
      "offset": [
        1059,
        1116
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "462": {
      "fn": null,
      "offset": [
        1059,
        1116
      ],
      "op": "DUP1",
      "path": "4"
    },
    "463": {
      "fn": null,
      "offset": [
        1059,
        1116
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "464": {
      "op": "SWAP4"
    },
    "465": {
      "op": "DUP5"
    },
    "466": {
      "op": "MSTORE"
    },
    "467": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "469": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "471": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "473": {
      "op": "SHL"
    },
    "474": {
      "op": "SUB"
    },
    "475": {
      "op": "SWAP1"
    },
    "476": {
      "op": "SWAP3"
    },
    "477": {
      "op": "AND"
    },
    "478": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "480": {
      "op": "DUP5"
    },
    "481": {
      "op": "ADD"
    },
    "482": {
      "op": "MSTORE"
    },
    "483": {
      "op": "SWAP1"
    },
    "484": {
      "op": "DUP3"
    },
    "485": {
      "op": "ADD"
    },
    "486": {
      "op": "MSTORE"
    },
    "487": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "489": {
      "op": "ADD"
    },
    "490": {
      "offset": [
        1059,
        1116
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "491": {
      "fn": null,
      "offset": [
        1059,
        1116
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "493": {
      "fn": null,
      "offset": [
        1059,
        1116
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "494": {
      "fn": null,
      "offset": [
        1059,
        1116
      ],
      "op": "DUP1",
      "path": "4"
    },
    "495": {
      "fn": null,
      "offset": [
        1059,
        1116
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "496": {
      "fn": null,
      "offset": [
        1059,
        1116
      ],
      "op": "SUB",
      "path": "4"
    },
    "497": {
      "fn": null,
      "offset": [
        1059,
        1116
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "498": {
      "fn": null,
      "offset": [
        1059,
        1116
      ],
      "op": "RETURN",
      "path": "4"
    },
    "499": {
      "fn": "ERC20.name",
      "offset": [
        2074,
        2172
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "500": {
      "fn": "ERC20.name",
      "offset": [
        2074,
        2172
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1FB"
    },
    "503": {
      "fn": "ERC20.name",
      "offset": [
        2074,
        2172
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x46D"
    },
    "506": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        2074,
        2172
      ],
      "op": "JUMP",
      "path": "0"
    },
    "507": {
      "fn": "ERC20.name",
      "offset": [
        2074,
        2172
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "508": {
      "fn": "ERC20.name",
      "offset": [
        2074,
        2172
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "510": {
      "fn": "ERC20.name",
      "offset": [
        2074,
        2172
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "511": {
      "fn": "ERC20.name",
      "offset": [
        2074,
        2172
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1EA"
    },
    "514": {
      "fn": "ERC20.name",
      "offset": [
        2074,
        2172
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "515": {
      "fn": "ERC20.name",
      "offset": [
        2074,
        2172
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "516": {
      "fn": "ERC20.name",
      "offset": [
        2074,
        2172
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1572"
    },
    "519": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        2074,
        2172
      ],
      "op": "JUMP",
      "path": "0"
    },
    "520": {
      "fn": "ERC20.approve",
      "offset": [
        4171,
        4337
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "521": {
      "fn": "ERC20.approve",
      "offset": [
        4171,
        4337
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x21B"
    },
    "524": {
      "fn": "ERC20.approve",
      "offset": [
        4171,
        4337
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x216"
    },
    "527": {
      "fn": "ERC20.approve",
      "offset": [
        4171,
        4337
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "528": {
      "fn": "ERC20.approve",
      "offset": [
        4171,
        4337
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "530": {
      "fn": "ERC20.approve",
      "offset": [
        4171,
        4337
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x15A8"
    },
    "533": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4171,
        4337
      ],
      "op": "JUMP",
      "path": "0"
    },
    "534": {
      "fn": "ERC20.approve",
      "offset": [
        4171,
        4337
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "535": {
      "fn": "ERC20.approve",
      "offset": [
        4171,
        4337
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4FF"
    },
    "538": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4171,
        4337
      ],
      "op": "JUMP",
      "path": "0"
    },
    "539": {
      "fn": "ERC20.approve",
      "offset": [
        4171,
        4337
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "540": {
      "fn": "ERC20.approve",
      "offset": [
        4171,
        4337
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "542": {
      "fn": "ERC20.approve",
      "offset": [
        4171,
        4337
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "543": {
      "op": "SWAP1"
    },
    "544": {
      "op": "ISZERO"
    },
    "545": {
      "op": "ISZERO"
    },
    "546": {
      "op": "DUP2"
    },
    "547": {
      "op": "MSTORE"
    },
    "548": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "550": {
      "op": "ADD"
    },
    "551": {
      "fn": "ERC20.approve",
      "offset": [
        4171,
        4337
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1EA"
    },
    "554": {
      "op": "JUMP"
    },
    "555": {
      "offset": [
        1025,
        1052
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "556": {
      "fn": "ERC20.approve",
      "offset": [
        1025,
        1052
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x234"
    },
    "559": {
      "fn": "ERC20.approve",
      "offset": [
        1025,
        1052
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xA"
    },
    "561": {
      "fn": "ERC20.approve",
      "offset": [
        1025,
        1052
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "562": {
      "fn": "ERC20.approve",
      "offset": [
        1025,
        1052
      ],
      "op": "DUP2",
      "path": "4"
    },
    "563": {
      "fn": "ERC20.approve",
      "offset": [
        1025,
        1052
      ],
      "op": "JUMP",
      "path": "4"
    },
    "564": {
      "fn": "ERC20.approve",
      "offset": [
        1025,
        1052
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "565": {
      "fn": "ERC20.approve",
      "offset": [
        1025,
        1052
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "567": {
      "fn": "ERC20.approve",
      "offset": [
        1025,
        1052
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "568": {
      "op": "SWAP1"
    },
    "569": {
      "op": "DUP2"
    },
    "570": {
      "op": "MSTORE"
    },
    "571": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "573": {
      "op": "ADD"
    },
    "574": {
      "offset": [
        1025,
        1052
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1EA"
    },
    "577": {
      "op": "JUMP"
    },
    "578": {
      "offset": [
        984,
        1019
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "579": {
      "fn": "ERC20.approve",
      "offset": [
        984,
        1019
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x284"
    },
    "582": {
      "fn": "ERC20.approve",
      "offset": [
        984,
        1019
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x250"
    },
    "585": {
      "fn": "ERC20.approve",
      "offset": [
        984,
        1019
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "586": {
      "fn": "ERC20.approve",
      "offset": [
        984,
        1019
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "588": {
      "fn": "ERC20.approve",
      "offset": [
        984,
        1019
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1509"
    },
    "591": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        984,
        1019
      ],
      "op": "JUMP",
      "path": "4"
    },
    "592": {
      "fn": "ERC20.approve",
      "offset": [
        984,
        1019
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "593": {
      "fn": "ERC20.approve",
      "offset": [
        984,
        1019
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x9"
    },
    "595": {
      "fn": "ERC20.approve",
      "offset": [
        984,
        1019
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "597": {
      "fn": "ERC20.approve",
      "offset": [
        984,
        1019
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "598": {
      "fn": "ERC20.approve",
      "offset": [
        984,
        1019
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "600": {
      "fn": "ERC20.approve",
      "offset": [
        984,
        1019
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "601": {
      "fn": "ERC20.approve",
      "offset": [
        984,
        1019
      ],
      "op": "DUP2",
      "path": "4"
    },
    "602": {
      "fn": "ERC20.approve",
      "offset": [
        984,
        1019
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "603": {
      "fn": "ERC20.approve",
      "offset": [
        984,
        1019
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "605": {
      "fn": "ERC20.approve",
      "offset": [
        984,
        1019
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "606": {
      "fn": "ERC20.approve",
      "offset": [
        984,
        1019
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "607": {
      "fn": "ERC20.approve",
      "offset": [
        984,
        1019
      ],
      "op": "DUP1",
      "path": "4"
    },
    "608": {
      "fn": "ERC20.approve",
      "offset": [
        984,
        1019
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "609": {
      "fn": "ERC20.approve",
      "offset": [
        984,
        1019
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "611": {
      "fn": "ERC20.approve",
      "offset": [
        984,
        1019
      ],
      "op": "DUP3",
      "path": "4"
    },
    "612": {
      "fn": "ERC20.approve",
      "offset": [
        984,
        1019
      ],
      "op": "ADD",
      "path": "4"
    },
    "613": {
      "fn": "ERC20.approve",
      "offset": [
        984,
        1019
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "614": {
      "fn": "ERC20.approve",
      "offset": [
        984,
        1019
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "616": {
      "fn": "ERC20.approve",
      "offset": [
        984,
        1019
      ],
      "op": "DUP4",
      "path": "4"
    },
    "617": {
      "fn": "ERC20.approve",
      "offset": [
        984,
        1019
      ],
      "op": "ADD",
      "path": "4"
    },
    "618": {
      "fn": "ERC20.approve",
      "offset": [
        984,
        1019
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "619": {
      "fn": "ERC20.approve",
      "offset": [
        984,
        1019
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "621": {
      "fn": "ERC20.approve",
      "offset": [
        984,
        1019
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "622": {
      "fn": "ERC20.approve",
      "offset": [
        984,
        1019
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "623": {
      "fn": "ERC20.approve",
      "offset": [
        984,
        1019
      ],
      "op": "ADD",
      "path": "4"
    },
    "624": {
      "fn": "ERC20.approve",
      "offset": [
        984,
        1019
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "625": {
      "fn": "ERC20.approve",
      "offset": [
        984,
        1019
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "626": {
      "fn": "ERC20.approve",
      "offset": [
        984,
        1019
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "627": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "629": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "631": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "633": {
      "op": "SHL"
    },
    "634": {
      "op": "SUB"
    },
    "635": {
      "offset": [
        984,
        1019
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "636": {
      "fn": "ERC20.approve",
      "offset": [
        984,
        1019
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "637": {
      "fn": "ERC20.approve",
      "offset": [
        984,
        1019
      ],
      "op": "AND",
      "path": "4"
    },
    "638": {
      "fn": "ERC20.approve",
      "offset": [
        984,
        1019
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "639": {
      "fn": "ERC20.approve",
      "offset": [
        984,
        1019
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xFF"
    },
    "641": {
      "fn": "ERC20.approve",
      "offset": [
        984,
        1019
      ],
      "op": "AND",
      "path": "4"
    },
    "642": {
      "fn": "ERC20.approve",
      "offset": [
        984,
        1019
      ],
      "op": "DUP5",
      "path": "4"
    },
    "643": {
      "fn": "ERC20.approve",
      "offset": [
        984,
        1019
      ],
      "op": "JUMP",
      "path": "4"
    },
    "644": {
      "fn": "ERC20.approve",
      "offset": [
        984,
        1019
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "645": {
      "fn": "ERC20.approve",
      "offset": [
        984,
        1019
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "647": {
      "fn": "ERC20.approve",
      "offset": [
        984,
        1019
      ],
      "op": "DUP1",
      "path": "4"
    },
    "648": {
      "fn": "ERC20.approve",
      "offset": [
        984,
        1019
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "649": {
      "op": "SWAP5"
    },
    "650": {
      "op": "DUP6"
    },
    "651": {
      "op": "MSTORE"
    },
    "652": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "654": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "656": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "658": {
      "op": "SHL"
    },
    "659": {
      "op": "SUB"
    },
    "660": {
      "op": "SWAP1"
    },
    "661": {
      "op": "SWAP4"
    },
    "662": {
      "op": "AND"
    },
    "663": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "665": {
      "op": "DUP6"
    },
    "666": {
      "op": "ADD"
    },
    "667": {
      "op": "MSTORE"
    },
    "668": {
      "op": "SWAP2"
    },
    "669": {
      "op": "DUP4"
    },
    "670": {
      "op": "ADD"
    },
    "671": {
      "op": "MSTORE"
    },
    "672": {
      "op": "ISZERO"
    },
    "673": {
      "op": "ISZERO"
    },
    "674": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "676": {
      "op": "DUP3"
    },
    "677": {
      "op": "ADD"
    },
    "678": {
      "op": "MSTORE"
    },
    "679": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "681": {
      "op": "ADD"
    },
    "682": {
      "offset": [
        984,
        1019
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1EA"
    },
    "685": {
      "op": "JUMP"
    },
    "686": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3162,
        3268
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "687": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3249,
        3261
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 0,
      "value": "0x2"
    },
    "689": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3249,
        3261
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "690": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3162,
        3268
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x234"
    },
    "693": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3162,
        3268
      ],
      "op": "JUMP",
      "path": "0"
    },
    "694": {
      "offset": [
        834,
        885
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "695": {
      "fn": "ERC20.totalSupply",
      "offset": [
        834,
        885
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x234"
    },
    "698": {
      "fn": "ERC20.totalSupply",
      "offset": [
        834,
        885
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2C4"
    },
    "701": {
      "fn": "ERC20.totalSupply",
      "offset": [
        834,
        885
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "702": {
      "fn": "ERC20.totalSupply",
      "offset": [
        834,
        885
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "704": {
      "fn": "ERC20.totalSupply",
      "offset": [
        834,
        885
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1619"
    },
    "707": {
      "fn": "ERC20.totalSupply",
      "jump": "i",
      "offset": [
        834,
        885
      ],
      "op": "JUMP",
      "path": "4"
    },
    "708": {
      "fn": "ERC20.totalSupply",
      "offset": [
        834,
        885
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "709": {
      "fn": "ERC20.totalSupply",
      "offset": [
        834,
        885
      ],
      "op": "DUP1",
      "path": "4"
    },
    "710": {
      "fn": "ERC20.totalSupply",
      "offset": [
        834,
        885
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "711": {
      "fn": "ERC20.totalSupply",
      "offset": [
        834,
        885
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "713": {
      "fn": "ERC20.totalSupply",
      "offset": [
        834,
        885
      ],
      "op": "DUP2",
      "path": "4"
    },
    "714": {
      "fn": "ERC20.totalSupply",
      "offset": [
        834,
        885
      ],
      "op": "DUP4",
      "path": "4"
    },
    "715": {
      "fn": "ERC20.totalSupply",
      "offset": [
        834,
        885
      ],
      "op": "ADD",
      "path": "4"
    },
    "716": {
      "fn": "ERC20.totalSupply",
      "offset": [
        834,
        885
      ],
      "op": "DUP2",
      "path": "4"
    },
    "717": {
      "fn": "ERC20.totalSupply",
      "offset": [
        834,
        885
      ],
      "op": "ADD",
      "path": "4"
    },
    "718": {
      "fn": "ERC20.totalSupply",
      "offset": [
        834,
        885
      ],
      "op": "DUP1",
      "path": "4"
    },
    "719": {
      "fn": "ERC20.totalSupply",
      "offset": [
        834,
        885
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "720": {
      "fn": "ERC20.totalSupply",
      "offset": [
        834,
        885
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x6"
    },
    "722": {
      "fn": "ERC20.totalSupply",
      "offset": [
        834,
        885
      ],
      "op": "DUP3",
      "path": "4"
    },
    "723": {
      "fn": "ERC20.totalSupply",
      "offset": [
        834,
        885
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "724": {
      "fn": "ERC20.totalSupply",
      "offset": [
        834,
        885
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "725": {
      "fn": "ERC20.totalSupply",
      "offset": [
        834,
        885
      ],
      "op": "DUP3",
      "path": "4"
    },
    "726": {
      "fn": "ERC20.totalSupply",
      "offset": [
        834,
        885
      ],
      "op": "ADD",
      "path": "4"
    },
    "727": {
      "fn": "ERC20.totalSupply",
      "offset": [
        834,
        885
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "728": {
      "fn": "ERC20.totalSupply",
      "offset": [
        834,
        885
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "729": {
      "fn": "ERC20.totalSupply",
      "offset": [
        834,
        885
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "730": {
      "fn": "ERC20.totalSupply",
      "offset": [
        834,
        885
      ],
      "op": "ADD",
      "path": "4"
    },
    "731": {
      "fn": "ERC20.totalSupply",
      "offset": [
        834,
        885
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "732": {
      "fn": "ERC20.totalSupply",
      "offset": [
        834,
        885
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "733": {
      "fn": "ERC20.totalSupply",
      "offset": [
        834,
        885
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "734": {
      "fn": "ERC20.totalSupply",
      "offset": [
        834,
        885
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "735": {
      "fn": "ERC20.totalSupply",
      "offset": [
        834,
        885
      ],
      "op": "DUP2",
      "path": "4"
    },
    "736": {
      "fn": "ERC20.totalSupply",
      "offset": [
        834,
        885
      ],
      "op": "JUMP",
      "path": "4"
    },
    "737": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4804,
        5282
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "738": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4804,
        5282
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x21B"
    },
    "741": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4804,
        5282
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2EF"
    },
    "744": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4804,
        5282
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "745": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4804,
        5282
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "747": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4804,
        5282
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x16AE"
    },
    "750": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        4804,
        5282
      ],
      "op": "JUMP",
      "path": "0"
    },
    "751": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4804,
        5282
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "752": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4804,
        5282
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x516"
    },
    "755": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        4804,
        5282
      ],
      "op": "JUMP",
      "path": "0"
    },
    "756": {
      "fn": "SmartNodes.getJobIdCounter",
      "offset": [
        1362,
        1457
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "757": {
      "fn": "SmartNodes.getJobIdCounter",
      "offset": [
        1438,
        1450
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 1,
      "value": "0xA"
    },
    "759": {
      "fn": "SmartNodes.getJobIdCounter",
      "offset": [
        1438,
        1450
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "760": {
      "fn": "SmartNodes.getJobIdCounter",
      "offset": [
        1362,
        1457
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x234"
    },
    "763": {
      "fn": "SmartNodes.getJobIdCounter",
      "offset": [
        1362,
        1457
      ],
      "op": "JUMP",
      "path": "4"
    },
    "764": {
      "offset": [
        773,
        828
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "765": {
      "fn": "SmartNodes.getJobIdCounter",
      "offset": [
        773,
        828
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x234"
    },
    "768": {
      "fn": "SmartNodes.getJobIdCounter",
      "offset": [
        773,
        828
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x30A"
    },
    "771": {
      "fn": "SmartNodes.getJobIdCounter",
      "offset": [
        773,
        828
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "772": {
      "fn": "SmartNodes.getJobIdCounter",
      "offset": [
        773,
        828
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "774": {
      "fn": "SmartNodes.getJobIdCounter",
      "offset": [
        773,
        828
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x16EA"
    },
    "777": {
      "fn": "SmartNodes.getJobIdCounter",
      "jump": "i",
      "offset": [
        773,
        828
      ],
      "op": "JUMP",
      "path": "4"
    },
    "778": {
      "fn": "SmartNodes.getJobIdCounter",
      "offset": [
        773,
        828
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "779": {
      "fn": "SmartNodes.getJobIdCounter",
      "offset": [
        773,
        828
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x5"
    },
    "781": {
      "fn": "SmartNodes.getJobIdCounter",
      "offset": [
        773,
        828
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "783": {
      "fn": "SmartNodes.getJobIdCounter",
      "offset": [
        773,
        828
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "784": {
      "fn": "SmartNodes.getJobIdCounter",
      "offset": [
        773,
        828
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "786": {
      "fn": "SmartNodes.getJobIdCounter",
      "offset": [
        773,
        828
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "787": {
      "fn": "SmartNodes.getJobIdCounter",
      "offset": [
        773,
        828
      ],
      "op": "DUP2",
      "path": "4"
    },
    "788": {
      "fn": "SmartNodes.getJobIdCounter",
      "offset": [
        773,
        828
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "789": {
      "fn": "SmartNodes.getJobIdCounter",
      "offset": [
        773,
        828
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "791": {
      "fn": "SmartNodes.getJobIdCounter",
      "offset": [
        773,
        828
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "792": {
      "fn": "SmartNodes.getJobIdCounter",
      "offset": [
        773,
        828
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "793": {
      "fn": "SmartNodes.getJobIdCounter",
      "offset": [
        773,
        828
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "794": {
      "fn": "SmartNodes.getJobIdCounter",
      "offset": [
        773,
        828
      ],
      "op": "DUP2",
      "path": "4"
    },
    "795": {
      "fn": "SmartNodes.getJobIdCounter",
      "offset": [
        773,
        828
      ],
      "op": "JUMP",
      "path": "4"
    },
    "796": {
      "fn": "ERC20.decimals",
      "offset": [
        3011,
        3102
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "797": {
      "fn": "ERC20.decimals",
      "offset": [
        3011,
        3102
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "799": {
      "fn": "ERC20.decimals",
      "offset": [
        3011,
        3102
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "800": {
      "fn": "ERC20.decimals",
      "offset": [
        3093,
        3095
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 2,
      "value": "0x12"
    },
    "802": {
      "op": "DUP2"
    },
    "803": {
      "op": "MSTORE"
    },
    "804": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "806": {
      "op": "ADD"
    },
    "807": {
      "fn": "ERC20.decimals",
      "offset": [
        3011,
        3102
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1EA"
    },
    "810": {
      "op": "JUMP"
    },
    "811": {
      "offset": [
        891,
        938
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "812": {
      "fn": "ERC20.decimals",
      "offset": [
        891,
        938
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x33E"
    },
    "815": {
      "fn": "ERC20.decimals",
      "offset": [
        891,
        938
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x339"
    },
    "818": {
      "fn": "ERC20.decimals",
      "offset": [
        891,
        938
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "819": {
      "fn": "ERC20.decimals",
      "offset": [
        891,
        938
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "821": {
      "fn": "ERC20.decimals",
      "offset": [
        891,
        938
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1509"
    },
    "824": {
      "fn": "ERC20.decimals",
      "jump": "i",
      "offset": [
        891,
        938
      ],
      "op": "JUMP",
      "path": "4"
    },
    "825": {
      "fn": "ERC20.decimals",
      "offset": [
        891,
        938
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "826": {
      "fn": "ERC20.decimals",
      "offset": [
        891,
        938
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x5C5"
    },
    "829": {
      "fn": "ERC20.decimals",
      "jump": "i",
      "offset": [
        891,
        938
      ],
      "op": "JUMP",
      "path": "4"
    },
    "830": {
      "fn": "ERC20.decimals",
      "offset": [
        891,
        938
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "831": {
      "fn": "ERC20.decimals",
      "offset": [
        891,
        938
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "833": {
      "fn": "ERC20.decimals",
      "offset": [
        891,
        938
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "834": {
      "fn": "ERC20.decimals",
      "offset": [
        891,
        938
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1EA"
    },
    "837": {
      "fn": "ERC20.decimals",
      "offset": [
        891,
        938
      ],
      "op": "SWAP6",
      "path": "4"
    },
    "838": {
      "fn": "ERC20.decimals",
      "offset": [
        891,
        938
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "839": {
      "fn": "ERC20.decimals",
      "offset": [
        891,
        938
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "840": {
      "fn": "ERC20.decimals",
      "offset": [
        891,
        938
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "841": {
      "fn": "ERC20.decimals",
      "offset": [
        891,
        938
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "842": {
      "fn": "ERC20.decimals",
      "offset": [
        891,
        938
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "843": {
      "fn": "ERC20.decimals",
      "offset": [
        891,
        938
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1705"
    },
    "846": {
      "fn": "ERC20.decimals",
      "jump": "i",
      "offset": [
        891,
        938
      ],
      "op": "JUMP",
      "path": "4"
    },
    "847": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5677,
        5889
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "848": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5677,
        5889
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x21B"
    },
    "851": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5677,
        5889
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x35D"
    },
    "854": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5677,
        5889
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "855": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5677,
        5889
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "857": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5677,
        5889
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x15A8"
    },
    "860": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5677,
        5889
      ],
      "op": "JUMP",
      "path": "0"
    },
    "861": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5677,
        5889
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "862": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5677,
        5889
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x694"
    },
    "865": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5677,
        5889
      ],
      "op": "JUMP",
      "path": "0"
    },
    "866": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        2092,
        2493
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "867": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        2092,
        2493
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x375"
    },
    "870": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        2092,
        2493
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x370"
    },
    "873": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        2092,
        2493
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "874": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        2092,
        2493
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "876": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        2092,
        2493
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1509"
    },
    "879": {
      "fn": "SmartNodes.lockTokens",
      "jump": "i",
      "offset": [
        2092,
        2493
      ],
      "op": "JUMP",
      "path": "4"
    },
    "880": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        2092,
        2493
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "881": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        2092,
        2493
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x6D0"
    },
    "884": {
      "fn": "SmartNodes.lockTokens",
      "jump": "i",
      "offset": [
        2092,
        2493
      ],
      "op": "JUMP",
      "path": "4"
    },
    "885": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        2092,
        2493
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "886": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        2092,
        2493
      ],
      "op": "STOP",
      "path": "4"
    },
    "887": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3326,
        3451
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "888": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3326,
        3451
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x234"
    },
    "891": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3326,
        3451
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x385"
    },
    "894": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3326,
        3451
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "895": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3326,
        3451
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "897": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3326,
        3451
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x16EA"
    },
    "900": {
      "fn": "ERC20.balanceOf",
      "jump": "i",
      "offset": [
        3326,
        3451
      ],
      "op": "JUMP",
      "path": "0"
    },
    "901": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3326,
        3451
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "902": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "904": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "906": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "908": {
      "op": "SHL"
    },
    "909": {
      "op": "SUB"
    },
    "910": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3426,
        3444
      ],
      "op": "AND",
      "path": "0",
      "statement": 3
    },
    "911": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3400,
        3407
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "913": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3426,
        3444
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "914": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3426,
        3444
      ],
      "op": "DUP2",
      "path": "0"
    },
    "915": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3426,
        3444
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "916": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3426,
        3444
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "918": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3426,
        3444
      ],
      "op": "DUP2",
      "path": "0"
    },
    "919": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3426,
        3444
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "920": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3426,
        3444
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "921": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3426,
        3444
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "923": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3426,
        3444
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "924": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3426,
        3444
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "925": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3426,
        3444
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "926": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3426,
        3444
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "927": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3326,
        3451
      ],
      "op": "JUMP",
      "path": "0"
    },
    "928": {
      "fn": "SmartNodes.createJob",
      "offset": [
        2846,
        4034
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "929": {
      "fn": "SmartNodes.createJob",
      "offset": [
        2846,
        4034
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x375"
    },
    "932": {
      "fn": "SmartNodes.createJob",
      "offset": [
        2846,
        4034
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x3AE"
    },
    "935": {
      "fn": "SmartNodes.createJob",
      "offset": [
        2846,
        4034
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "936": {
      "fn": "SmartNodes.createJob",
      "offset": [
        2846,
        4034
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "938": {
      "fn": "SmartNodes.createJob",
      "offset": [
        2846,
        4034
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x174E"
    },
    "941": {
      "fn": "SmartNodes.createJob",
      "jump": "i",
      "offset": [
        2846,
        4034
      ],
      "op": "JUMP",
      "path": "4"
    },
    "942": {
      "fn": "SmartNodes.createJob",
      "offset": [
        2846,
        4034
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "943": {
      "fn": "SmartNodes.createJob",
      "offset": [
        2846,
        4034
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x7E9"
    },
    "946": {
      "fn": "SmartNodes.createJob",
      "jump": "i",
      "offset": [
        2846,
        4034
      ],
      "op": "JUMP",
      "path": "4"
    },
    "947": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        2499,
        2840
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "948": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        2499,
        2840
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x375"
    },
    "951": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        2499,
        2840
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x3C1"
    },
    "954": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        2499,
        2840
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "955": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        2499,
        2840
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "957": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        2499,
        2840
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1509"
    },
    "960": {
      "fn": "SmartNodes.unlockTokens",
      "jump": "i",
      "offset": [
        2499,
        2840
      ],
      "op": "JUMP",
      "path": "4"
    },
    "961": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        2499,
        2840
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "962": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        2499,
        2840
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x9FA"
    },
    "965": {
      "fn": "SmartNodes.unlockTokens",
      "jump": "i",
      "offset": [
        2499,
        2840
      ],
      "op": "JUMP",
      "path": "4"
    },
    "966": {
      "offset": [
        1122,
        1159
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "967": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        1122,
        1159
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x234"
    },
    "970": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        1122,
        1159
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xC"
    },
    "972": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        1122,
        1159
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "973": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        1122,
        1159
      ],
      "op": "DUP2",
      "path": "4"
    },
    "974": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        1122,
        1159
      ],
      "op": "JUMP",
      "path": "4"
    },
    "975": {
      "offset": [
        944,
        977
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "976": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        944,
        977
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x234"
    },
    "979": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        944,
        977
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x8"
    },
    "981": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        944,
        977
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "982": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        944,
        977
      ],
      "op": "DUP2",
      "path": "4"
    },
    "983": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        944,
        977
      ],
      "op": "JUMP",
      "path": "4"
    },
    "984": {
      "fn": "ERC20.symbol",
      "offset": [
        2285,
        2387
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "985": {
      "fn": "ERC20.symbol",
      "offset": [
        2285,
        2387
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1FB"
    },
    "988": {
      "fn": "ERC20.symbol",
      "offset": [
        2285,
        2387
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAB7"
    },
    "991": {
      "fn": "ERC20.symbol",
      "jump": "i",
      "offset": [
        2285,
        2387
      ],
      "op": "JUMP",
      "path": "0"
    },
    "992": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6376,
        6781
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "993": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6376,
        6781
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x21B"
    },
    "996": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6376,
        6781
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3EE"
    },
    "999": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6376,
        6781
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1000": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6376,
        6781
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1002": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6376,
        6781
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x15A8"
    },
    "1005": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6376,
        6781
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1006": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6376,
        6781
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1007": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6376,
        6781
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAC6"
    },
    "1010": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6376,
        6781
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1011": {
      "fn": "ERC20.transfer",
      "offset": [
        3654,
        3826
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1012": {
      "fn": "ERC20.transfer",
      "offset": [
        3654,
        3826
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x21B"
    },
    "1015": {
      "fn": "ERC20.transfer",
      "offset": [
        3654,
        3826
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x401"
    },
    "1018": {
      "fn": "ERC20.transfer",
      "offset": [
        3654,
        3826
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1019": {
      "fn": "ERC20.transfer",
      "offset": [
        3654,
        3826
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1021": {
      "fn": "ERC20.transfer",
      "offset": [
        3654,
        3826
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x15A8"
    },
    "1024": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        3654,
        3826
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1025": {
      "fn": "ERC20.transfer",
      "offset": [
        3654,
        3826
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1026": {
      "fn": "ERC20.transfer",
      "offset": [
        3654,
        3826
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB5F"
    },
    "1029": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        3654,
        3826
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1030": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1576,
        2086
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1031": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1576,
        2086
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x375"
    },
    "1034": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1576,
        2086
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x414"
    },
    "1037": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1576,
        2086
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "1038": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1576,
        2086
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "1040": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1576,
        2086
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1619"
    },
    "1043": {
      "fn": "SmartNodes.createValidator",
      "jump": "i",
      "offset": [
        1576,
        2086
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1044": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1576,
        2086
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1045": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1576,
        2086
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xB6C"
    },
    "1048": {
      "fn": "SmartNodes.createValidator",
      "jump": "i",
      "offset": [
        1576,
        2086
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1049": {
      "fn": "SmartNodes.getValidatorIdCounter",
      "offset": [
        1463,
        1570
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1050": {
      "fn": "SmartNodes.getValidatorIdCounter",
      "offset": [
        1545,
        1563
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 4,
      "value": "0x8"
    },
    "1052": {
      "fn": "SmartNodes.getValidatorIdCounter",
      "offset": [
        1545,
        1563
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1053": {
      "fn": "SmartNodes.getValidatorIdCounter",
      "offset": [
        1463,
        1570
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x234"
    },
    "1056": {
      "fn": "SmartNodes.getValidatorIdCounter",
      "offset": [
        1463,
        1570
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1057": {
      "fn": "ERC20.allowance",
      "offset": [
        3884,
        4033
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1058": {
      "fn": "ERC20.allowance",
      "offset": [
        3884,
        4033
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x234"
    },
    "1061": {
      "fn": "ERC20.allowance",
      "offset": [
        3884,
        4033
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x42F"
    },
    "1064": {
      "fn": "ERC20.allowance",
      "offset": [
        3884,
        4033
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1065": {
      "fn": "ERC20.allowance",
      "offset": [
        3884,
        4033
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1067": {
      "fn": "ERC20.allowance",
      "offset": [
        3884,
        4033
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1807"
    },
    "1070": {
      "fn": "ERC20.allowance",
      "jump": "i",
      "offset": [
        3884,
        4033
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1071": {
      "fn": "ERC20.allowance",
      "offset": [
        3884,
        4033
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1072": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1074": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1076": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1078": {
      "op": "SHL"
    },
    "1079": {
      "op": "SUB"
    },
    "1080": {
      "fn": "ERC20.allowance",
      "offset": [
        3999,
        4017
      ],
      "op": "SWAP2",
      "path": "0",
      "statement": 5
    },
    "1081": {
      "fn": "ERC20.allowance",
      "offset": [
        3999,
        4017
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1082": {
      "fn": "ERC20.allowance",
      "offset": [
        3999,
        4017
      ],
      "op": "AND",
      "path": "0"
    },
    "1083": {
      "fn": "ERC20.allowance",
      "offset": [
        3973,
        3980
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1085": {
      "fn": "ERC20.allowance",
      "offset": [
        3999,
        4017
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1086": {
      "fn": "ERC20.allowance",
      "offset": [
        3999,
        4017
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1087": {
      "fn": "ERC20.allowance",
      "offset": [
        3999,
        4017
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1088": {
      "fn": "ERC20.allowance",
      "offset": [
        3999,
        4010
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1090": {
      "fn": "ERC20.allowance",
      "offset": [
        3999,
        4017
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1092": {
      "fn": "ERC20.allowance",
      "offset": [
        3999,
        4017
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1093": {
      "fn": "ERC20.allowance",
      "offset": [
        3999,
        4017
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1094": {
      "fn": "ERC20.allowance",
      "offset": [
        3999,
        4017
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1095": {
      "fn": "ERC20.allowance",
      "offset": [
        3999,
        4017
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1097": {
      "fn": "ERC20.allowance",
      "offset": [
        3999,
        4017
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1098": {
      "fn": "ERC20.allowance",
      "offset": [
        3999,
        4017
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1099": {
      "fn": "ERC20.allowance",
      "offset": [
        3999,
        4017
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1100": {
      "fn": "ERC20.allowance",
      "offset": [
        3999,
        4026
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1101": {
      "fn": "ERC20.allowance",
      "offset": [
        3999,
        4026
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1102": {
      "fn": "ERC20.allowance",
      "offset": [
        3999,
        4026
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "1103": {
      "fn": "ERC20.allowance",
      "offset": [
        3999,
        4026
      ],
      "op": "AND",
      "path": "0"
    },
    "1104": {
      "fn": "ERC20.allowance",
      "offset": [
        3999,
        4026
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1105": {
      "fn": "ERC20.allowance",
      "offset": [
        3999,
        4026
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1106": {
      "fn": "ERC20.allowance",
      "offset": [
        3999,
        4026
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1107": {
      "fn": "ERC20.allowance",
      "offset": [
        3999,
        4026
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1108": {
      "fn": "ERC20.allowance",
      "offset": [
        3999,
        4026
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1109": {
      "fn": "ERC20.allowance",
      "offset": [
        3999,
        4026
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1110": {
      "fn": "ERC20.allowance",
      "offset": [
        3999,
        4026
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1111": {
      "fn": "ERC20.allowance",
      "offset": [
        3999,
        4026
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1112": {
      "fn": "ERC20.allowance",
      "offset": [
        3999,
        4026
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1113": {
      "fn": "ERC20.allowance",
      "offset": [
        3884,
        4033
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1114": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4040,
        4926
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1115": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4040,
        4926
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x375"
    },
    "1118": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4040,
        4926
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x468"
    },
    "1121": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4040,
        4926
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "1122": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4040,
        4926
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "1124": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4040,
        4926
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1509"
    },
    "1127": {
      "fn": "SmartNodes.approveJobCreation",
      "jump": "i",
      "offset": [
        4040,
        4926
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1128": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4040,
        4926
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1129": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4040,
        4926
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xC6B"
    },
    "1132": {
      "fn": "SmartNodes.approveJobCreation",
      "jump": "i",
      "offset": [
        4040,
        4926
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1133": {
      "fn": "ERC20.name",
      "offset": [
        2074,
        2172
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1134": {
      "fn": "ERC20.name",
      "offset": [
        2128,
        2141
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "1136": {
      "fn": "ERC20.name",
      "offset": [
        2160,
        2165
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 6,
      "value": "0x3"
    },
    "1138": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1139": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1140": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x47C"
    },
    "1143": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1144": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x183A"
    },
    "1147": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        2153,
        2165
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1148": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1149": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1150": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1152": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "ADD",
      "path": "0"
    },
    "1153": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1155": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1156": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1157": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "DIV",
      "path": "0"
    },
    "1158": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "MUL",
      "path": "0"
    },
    "1159": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1161": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "ADD",
      "path": "0"
    },
    "1162": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1164": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1165": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1166": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1167": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "ADD",
      "path": "0"
    },
    "1168": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1170": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1171": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1172": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1173": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1174": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1175": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1176": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1177": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1178": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1180": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "ADD",
      "path": "0"
    },
    "1181": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1182": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1183": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1184": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4A8"
    },
    "1187": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1188": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x183A"
    },
    "1191": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        2153,
        2165
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1192": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1193": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1194": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1195": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4F5"
    },
    "1198": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1199": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1200": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1202": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "LT",
      "path": "0"
    },
    "1203": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4CA"
    },
    "1206": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1207": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "1210": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1211": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1212": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1213": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "DIV",
      "path": "0"
    },
    "1214": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "MUL",
      "path": "0"
    },
    "1215": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1216": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1217": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1218": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1220": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "ADD",
      "path": "0"
    },
    "1221": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1222": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4F5"
    },
    "1225": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1226": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1227": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1228": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "ADD",
      "path": "0"
    },
    "1229": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1230": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1231": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1233": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1234": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1236": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1238": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1239": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1240": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1241": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1242": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1243": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1244": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1245": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1246": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1248": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "ADD",
      "path": "0"
    },
    "1249": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1250": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1252": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "ADD",
      "path": "0"
    },
    "1253": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1254": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1255": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "GT",
      "path": "0"
    },
    "1256": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4D8"
    },
    "1259": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1260": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1261": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1262": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "SUB",
      "path": "0"
    },
    "1263": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1265": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "AND",
      "path": "0"
    },
    "1266": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1267": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "ADD",
      "path": "0"
    },
    "1268": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1269": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1270": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "POP",
      "path": "0"
    },
    "1271": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "POP",
      "path": "0"
    },
    "1272": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "POP",
      "path": "0"
    },
    "1273": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "POP",
      "path": "0"
    },
    "1274": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "POP",
      "path": "0"
    },
    "1275": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1276": {
      "fn": "ERC20.name",
      "offset": [
        2153,
        2165
      ],
      "op": "POP",
      "path": "0"
    },
    "1277": {
      "fn": "ERC20.name",
      "offset": [
        2074,
        2172
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1278": {
      "fn": "ERC20.name",
      "jump": "o",
      "offset": [
        2074,
        2172
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1279": {
      "fn": "ERC20.approve",
      "offset": [
        4171,
        4337
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1280": {
      "fn": "ERC20.approve",
      "offset": [
        4254,
        4258
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1282": {
      "fn": "ERC20.approve",
      "offset": [
        4270,
        4309
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 7,
      "value": "0x50C"
    },
    "1285": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "3",
      "statement": 8
    },
    "1286": {
      "fn": "ERC20.approve",
      "offset": [
        4293,
        4300
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1287": {
      "fn": "ERC20.approve",
      "offset": [
        4302,
        4308
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1288": {
      "fn": "ERC20.approve",
      "offset": [
        4270,
        4278
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xED9"
    },
    "1291": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4270,
        4309
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1292": {
      "fn": "ERC20.approve",
      "offset": [
        4270,
        4309
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1293": {
      "op": "POP"
    },
    "1294": {
      "fn": "ERC20.approve",
      "offset": [
        4326,
        4330
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 9,
      "value": "0x1"
    },
    "1296": {
      "fn": "ERC20.approve",
      "offset": [
        4171,
        4337
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1297": {
      "fn": "ERC20.approve",
      "offset": [
        4171,
        4337
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1298": {
      "fn": "ERC20.approve",
      "offset": [
        4171,
        4337
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1299": {
      "fn": "ERC20.approve",
      "offset": [
        4171,
        4337
      ],
      "op": "POP",
      "path": "0"
    },
    "1300": {
      "fn": "ERC20.approve",
      "offset": [
        4171,
        4337
      ],
      "op": "POP",
      "path": "0"
    },
    "1301": {
      "fn": "ERC20.approve",
      "jump": "o",
      "offset": [
        4171,
        4337
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1302": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4804,
        5282
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1303": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4940,
        4944
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1305": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4956,
        4992
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 10,
      "value": "0x523"
    },
    "1308": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4966,
        4972
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1309": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4974,
        4983
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1310": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4985,
        4991
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1311": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4956,
        4965
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFFD"
    },
    "1314": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        4956,
        4992
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1315": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4956,
        4992
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1316": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1318": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1320": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1322": {
      "op": "SHL"
    },
    "1323": {
      "op": "SUB"
    },
    "1324": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5030,
        5049
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1325": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5030,
        5049
      ],
      "op": "AND",
      "path": "0"
    },
    "1326": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5003,
        5027
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1328": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5030,
        5049
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1329": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5030,
        5049
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1330": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5030,
        5049
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1331": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5030,
        5041
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1333": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5030,
        5049
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1335": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5030,
        5049
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1336": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5030,
        5049
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1337": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5030,
        5049
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1338": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5030,
        5049
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1340": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5030,
        5049
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1341": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5030,
        5049
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1342": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5030,
        5049
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1343": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "3"
    },
    "1344": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5030,
        5063
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1345": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5030,
        5063
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1346": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5030,
        5063
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1347": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5030,
        5063
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1348": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5030,
        5063
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1349": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5030,
        5063
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1350": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5030,
        5063
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1351": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5030,
        5063
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1352": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5081,
        5107
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 11
    },
    "1353": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5081,
        5107
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1354": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5081,
        5107
      ],
      "op": "LT",
      "path": "0"
    },
    "1355": {
      "branch": 80,
      "fn": "ERC20.transferFrom",
      "offset": [
        5081,
        5107
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1356": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5073,
        5152
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5AD"
    },
    "1359": {
      "branch": 80,
      "fn": "ERC20.transferFrom",
      "offset": [
        5073,
        5152
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1360": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5073,
        5152
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1362": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5073,
        5152
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1363": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1367": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1369": {
      "op": "SHL"
    },
    "1370": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5073,
        5152
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1371": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5073,
        5152
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1372": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1374": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5073,
        5152
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1376": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5073,
        5152
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1377": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5073,
        5152
      ],
      "op": "ADD",
      "path": "0"
    },
    "1378": {
      "op": "MSTORE"
    },
    "1379": {
      "op": "PUSH1",
      "value": "0x28"
    },
    "1381": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1383": {
      "op": "DUP3"
    },
    "1384": {
      "op": "ADD"
    },
    "1385": {
      "op": "MSTORE"
    },
    "1386": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E7366657220616D6F756E7420657863656564732061"
    },
    "1419": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1421": {
      "op": "DUP3"
    },
    "1422": {
      "op": "ADD"
    },
    "1423": {
      "op": "MSTORE"
    },
    "1424": {
      "op": "PUSH8",
      "value": "0x6C6C6F77616E6365"
    },
    "1433": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "1435": {
      "op": "SHL"
    },
    "1436": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1438": {
      "op": "DUP3"
    },
    "1439": {
      "op": "ADD"
    },
    "1440": {
      "op": "MSTORE"
    },
    "1441": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1443": {
      "op": "ADD"
    },
    "1444": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5073,
        5152
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1445": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5073,
        5152
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1447": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5073,
        5152
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1448": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5073,
        5152
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1449": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5073,
        5152
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1450": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5073,
        5152
      ],
      "op": "SUB",
      "path": "0"
    },
    "1451": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5073,
        5152
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1452": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5073,
        5152
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "0"
    },
    "1453": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5073,
        5152
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1454": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5186,
        5243
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 12,
      "value": "0x5BA"
    },
    "1457": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5195,
        5201
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1458": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "3"
    },
    "1459": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5236,
        5242
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1460": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5217,
        5233
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1461": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5217,
        5242
      ],
      "op": "SUB",
      "path": "0"
    },
    "1462": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5186,
        5194
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xED9"
    },
    "1465": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        5186,
        5243
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1466": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5186,
        5243
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1467": {
      "op": "POP"
    },
    "1468": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5271,
        5275
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 13,
      "value": "0x1"
    },
    "1470": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5271,
        5275
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "1471": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4804,
        5282
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1472": {
      "op": "POP"
    },
    "1473": {
      "op": "POP"
    },
    "1474": {
      "op": "POP"
    },
    "1475": {
      "op": "POP"
    },
    "1476": {
      "fn": "ERC20.transferFrom",
      "jump": "o",
      "offset": [
        4804,
        5282
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1477": {
      "offset": [
        891,
        938
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1478": {
      "fn": "ERC20.transferFrom",
      "offset": [
        891,
        938
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x7"
    },
    "1480": {
      "fn": "ERC20.transferFrom",
      "offset": [
        891,
        938
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1482": {
      "fn": "ERC20.transferFrom",
      "offset": [
        891,
        938
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1483": {
      "fn": "ERC20.transferFrom",
      "offset": [
        891,
        938
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1485": {
      "fn": "ERC20.transferFrom",
      "offset": [
        891,
        938
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1486": {
      "fn": "ERC20.transferFrom",
      "offset": [
        891,
        938
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1487": {
      "fn": "ERC20.transferFrom",
      "offset": [
        891,
        938
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1488": {
      "fn": "ERC20.transferFrom",
      "offset": [
        891,
        938
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1490": {
      "fn": "ERC20.transferFrom",
      "offset": [
        891,
        938
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1491": {
      "fn": "ERC20.transferFrom",
      "offset": [
        891,
        938
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1492": {
      "fn": "ERC20.transferFrom",
      "offset": [
        891,
        938
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1493": {
      "fn": "ERC20.transferFrom",
      "offset": [
        891,
        938
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1494": {
      "fn": "ERC20.transferFrom",
      "offset": [
        891,
        938
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "1496": {
      "fn": "ERC20.transferFrom",
      "offset": [
        891,
        938
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1497": {
      "fn": "ERC20.transferFrom",
      "offset": [
        891,
        938
      ],
      "op": "ADD",
      "path": "4"
    },
    "1498": {
      "fn": "ERC20.transferFrom",
      "offset": [
        891,
        938
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1499": {
      "fn": "ERC20.transferFrom",
      "offset": [
        891,
        938
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "1501": {
      "fn": "ERC20.transferFrom",
      "offset": [
        891,
        938
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1502": {
      "fn": "ERC20.transferFrom",
      "offset": [
        891,
        938
      ],
      "op": "ADD",
      "path": "4"
    },
    "1503": {
      "fn": "ERC20.transferFrom",
      "offset": [
        891,
        938
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1504": {
      "fn": "ERC20.transferFrom",
      "offset": [
        891,
        938
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1505": {
      "fn": "ERC20.transferFrom",
      "offset": [
        891,
        938
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1506": {
      "fn": "ERC20.transferFrom",
      "offset": [
        891,
        938
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "1507": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1509": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1511": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1513": {
      "op": "SHL"
    },
    "1514": {
      "op": "SUB"
    },
    "1515": {
      "offset": [
        891,
        938
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1516": {
      "fn": "ERC20.transferFrom",
      "offset": [
        891,
        938
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1517": {
      "fn": "ERC20.transferFrom",
      "offset": [
        891,
        938
      ],
      "op": "AND",
      "path": "4"
    },
    "1518": {
      "fn": "ERC20.transferFrom",
      "offset": [
        891,
        938
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1519": {
      "fn": "ERC20.transferFrom",
      "offset": [
        891,
        938
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x5F7"
    },
    "1522": {
      "fn": "ERC20.transferFrom",
      "offset": [
        891,
        938
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1523": {
      "fn": "ERC20.transferFrom",
      "offset": [
        891,
        938
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x183A"
    },
    "1526": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        891,
        938
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1527": {
      "fn": "ERC20.transferFrom",
      "offset": [
        891,
        938
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1528": {
      "fn": "ERC20.transferFrom",
      "offset": [
        891,
        938
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1529": {
      "fn": "ERC20.transferFrom",
      "offset": [
        891,
        938
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "1531": {
      "fn": "ERC20.transferFrom",
      "offset": [
        891,
        938
      ],
      "op": "ADD",
      "path": "4"
    },
    "1532": {
      "fn": "ERC20.transferFrom",
      "offset": [
        891,
        938
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1534": {
      "fn": "ERC20.transferFrom",
      "offset": [
        891,
        938
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1535": {
      "fn": "ERC20.transferFrom",
      "offset": [
        891,
        938
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1536": {
      "fn": "ERC20.transferFrom",
      "offset": [
        891,
        938
      ],
      "op": "DIV",
      "path": "4"
    },
    "1537": {
      "fn": "ERC20.transferFrom",
      "offset": [
        891,
        938
      ],
      "op": "MUL",
      "path": "4"
    },
    "1538": {
      "fn": "ERC20.transferFrom",
      "offset": [
        891,
        938
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1540": {
      "fn": "ERC20.transferFrom",
      "offset": [
        891,
        938
      ],
      "op": "ADD",
      "path": "4"
    },
    "1541": {
      "fn": "ERC20.transferFrom",
      "offset": [
        891,
        938
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1543": {
      "fn": "ERC20.transferFrom",
      "offset": [
        891,
        938
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1544": {
      "fn": "ERC20.transferFrom",
      "offset": [
        891,
        938
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1545": {
      "fn": "ERC20.transferFrom",
      "offset": [
        891,
        938
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1546": {
      "fn": "ERC20.transferFrom",
      "offset": [
        891,
        938
      ],
      "op": "ADD",
      "path": "4"
    },
    "1547": {
      "fn": "ERC20.transferFrom",
      "offset": [
        891,
        938
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1549": {
      "fn": "ERC20.transferFrom",
      "offset": [
        891,
        938
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1550": {
      "fn": "ERC20.transferFrom",
      "offset": [
        891,
        938
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1551": {
      "fn": "ERC20.transferFrom",
      "offset": [
        891,
        938
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1552": {
      "fn": "ERC20.transferFrom",
      "offset": [
        891,
        938
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1553": {
      "fn": "ERC20.transferFrom",
      "offset": [
        891,
        938
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1554": {
      "fn": "ERC20.transferFrom",
      "offset": [
        891,
        938
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1555": {
      "fn": "ERC20.transferFrom",
      "offset": [
        891,
        938
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1556": {
      "fn": "ERC20.transferFrom",
      "offset": [
        891,
        938
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1557": {
      "fn": "ERC20.transferFrom",
      "offset": [
        891,
        938
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1559": {
      "fn": "ERC20.transferFrom",
      "offset": [
        891,
        938
      ],
      "op": "ADD",
      "path": "4"
    },
    "1560": {
      "fn": "ERC20.transferFrom",
      "offset": [
        891,
        938
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1561": {
      "fn": "ERC20.transferFrom",
      "offset": [
        891,
        938
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1562": {
      "fn": "ERC20.transferFrom",
      "offset": [
        891,
        938
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1563": {
      "fn": "ERC20.transferFrom",
      "offset": [
        891,
        938
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x623"
    },
    "1566": {
      "fn": "ERC20.transferFrom",
      "offset": [
        891,
        938
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1567": {
      "fn": "ERC20.transferFrom",
      "offset": [
        891,
        938
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x183A"
    },
    "1570": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        891,
        938
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1571": {
      "fn": "ERC20.transferFrom",
      "offset": [
        891,
        938
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1572": {
      "fn": "ERC20.transferFrom",
      "offset": [
        891,
        938
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1573": {
      "fn": "ERC20.transferFrom",
      "offset": [
        891,
        938
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "1574": {
      "fn": "ERC20.transferFrom",
      "offset": [
        891,
        938
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x670"
    },
    "1577": {
      "fn": "ERC20.transferFrom",
      "offset": [
        891,
        938
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1578": {
      "fn": "ERC20.transferFrom",
      "offset": [
        891,
        938
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1579": {
      "fn": "ERC20.transferFrom",
      "offset": [
        891,
        938
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "1581": {
      "fn": "ERC20.transferFrom",
      "offset": [
        891,
        938
      ],
      "op": "LT",
      "path": "4"
    },
    "1582": {
      "fn": "ERC20.transferFrom",
      "offset": [
        891,
        938
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x645"
    },
    "1585": {
      "fn": "ERC20.transferFrom",
      "offset": [
        891,
        938
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1586": {
      "fn": "ERC20.transferFrom",
      "offset": [
        891,
        938
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x100"
    },
    "1589": {
      "fn": "ERC20.transferFrom",
      "offset": [
        891,
        938
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1590": {
      "fn": "ERC20.transferFrom",
      "offset": [
        891,
        938
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1591": {
      "fn": "ERC20.transferFrom",
      "offset": [
        891,
        938
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1592": {
      "fn": "ERC20.transferFrom",
      "offset": [
        891,
        938
      ],
      "op": "DIV",
      "path": "4"
    },
    "1593": {
      "fn": "ERC20.transferFrom",
      "offset": [
        891,
        938
      ],
      "op": "MUL",
      "path": "4"
    },
    "1594": {
      "fn": "ERC20.transferFrom",
      "offset": [
        891,
        938
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1595": {
      "fn": "ERC20.transferFrom",
      "offset": [
        891,
        938
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1596": {
      "fn": "ERC20.transferFrom",
      "offset": [
        891,
        938
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1597": {
      "fn": "ERC20.transferFrom",
      "offset": [
        891,
        938
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1599": {
      "fn": "ERC20.transferFrom",
      "offset": [
        891,
        938
      ],
      "op": "ADD",
      "path": "4"
    },
    "1600": {
      "fn": "ERC20.transferFrom",
      "offset": [
        891,
        938
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1601": {
      "fn": "ERC20.transferFrom",
      "offset": [
        891,
        938
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x670"
    },
    "1604": {
      "fn": "ERC20.transferFrom",
      "offset": [
        891,
        938
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1605": {
      "fn": "ERC20.transferFrom",
      "offset": [
        891,
        938
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1606": {
      "fn": "ERC20.transferFrom",
      "offset": [
        891,
        938
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1607": {
      "fn": "ERC20.transferFrom",
      "offset": [
        891,
        938
      ],
      "op": "ADD",
      "path": "4"
    },
    "1608": {
      "fn": "ERC20.transferFrom",
      "offset": [
        891,
        938
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1609": {
      "fn": "ERC20.transferFrom",
      "offset": [
        891,
        938
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1610": {
      "fn": "ERC20.transferFrom",
      "offset": [
        891,
        938
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1612": {
      "fn": "ERC20.transferFrom",
      "offset": [
        891,
        938
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1613": {
      "fn": "ERC20.transferFrom",
      "offset": [
        891,
        938
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1615": {
      "fn": "ERC20.transferFrom",
      "offset": [
        891,
        938
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1617": {
      "fn": "ERC20.transferFrom",
      "offset": [
        891,
        938
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1618": {
      "fn": "ERC20.transferFrom",
      "offset": [
        891,
        938
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1619": {
      "fn": "ERC20.transferFrom",
      "offset": [
        891,
        938
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1620": {
      "fn": "ERC20.transferFrom",
      "offset": [
        891,
        938
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1621": {
      "fn": "ERC20.transferFrom",
      "offset": [
        891,
        938
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1622": {
      "fn": "ERC20.transferFrom",
      "offset": [
        891,
        938
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1623": {
      "fn": "ERC20.transferFrom",
      "offset": [
        891,
        938
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1624": {
      "fn": "ERC20.transferFrom",
      "offset": [
        891,
        938
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1625": {
      "fn": "ERC20.transferFrom",
      "offset": [
        891,
        938
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "1627": {
      "fn": "ERC20.transferFrom",
      "offset": [
        891,
        938
      ],
      "op": "ADD",
      "path": "4"
    },
    "1628": {
      "fn": "ERC20.transferFrom",
      "offset": [
        891,
        938
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1629": {
      "fn": "ERC20.transferFrom",
      "offset": [
        891,
        938
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1631": {
      "fn": "ERC20.transferFrom",
      "offset": [
        891,
        938
      ],
      "op": "ADD",
      "path": "4"
    },
    "1632": {
      "fn": "ERC20.transferFrom",
      "offset": [
        891,
        938
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1633": {
      "fn": "ERC20.transferFrom",
      "offset": [
        891,
        938
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1634": {
      "fn": "ERC20.transferFrom",
      "offset": [
        891,
        938
      ],
      "op": "GT",
      "path": "4"
    },
    "1635": {
      "fn": "ERC20.transferFrom",
      "offset": [
        891,
        938
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x653"
    },
    "1638": {
      "fn": "ERC20.transferFrom",
      "offset": [
        891,
        938
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1639": {
      "fn": "ERC20.transferFrom",
      "offset": [
        891,
        938
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1640": {
      "fn": "ERC20.transferFrom",
      "offset": [
        891,
        938
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1641": {
      "fn": "ERC20.transferFrom",
      "offset": [
        891,
        938
      ],
      "op": "SUB",
      "path": "4"
    },
    "1642": {
      "fn": "ERC20.transferFrom",
      "offset": [
        891,
        938
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "1644": {
      "fn": "ERC20.transferFrom",
      "offset": [
        891,
        938
      ],
      "op": "AND",
      "path": "4"
    },
    "1645": {
      "fn": "ERC20.transferFrom",
      "offset": [
        891,
        938
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1646": {
      "fn": "ERC20.transferFrom",
      "offset": [
        891,
        938
      ],
      "op": "ADD",
      "path": "4"
    },
    "1647": {
      "fn": "ERC20.transferFrom",
      "offset": [
        891,
        938
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1648": {
      "fn": "ERC20.transferFrom",
      "offset": [
        891,
        938
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1649": {
      "op": "POP"
    },
    "1650": {
      "op": "POP"
    },
    "1651": {
      "op": "POP"
    },
    "1652": {
      "offset": [
        891,
        938
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x3"
    },
    "1654": {
      "fn": "ERC20.transferFrom",
      "offset": [
        891,
        938
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1655": {
      "fn": "ERC20.transferFrom",
      "offset": [
        891,
        938
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "1656": {
      "fn": "ERC20.transferFrom",
      "offset": [
        891,
        938
      ],
      "op": "ADD",
      "path": "4"
    },
    "1657": {
      "fn": "ERC20.transferFrom",
      "offset": [
        891,
        938
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1658": {
      "fn": "ERC20.transferFrom",
      "offset": [
        891,
        938
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1659": {
      "fn": "ERC20.transferFrom",
      "offset": [
        891,
        938
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1660": {
      "op": "POP"
    },
    "1661": {
      "op": "POP"
    },
    "1662": {
      "offset": [
        891,
        938
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xFFFFFFFF"
    },
    "1667": {
      "fn": "ERC20.transferFrom",
      "offset": [
        891,
        938
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1668": {
      "fn": "ERC20.transferFrom",
      "offset": [
        891,
        938
      ],
      "op": "AND",
      "path": "4"
    },
    "1669": {
      "fn": "ERC20.transferFrom",
      "offset": [
        891,
        938
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1670": {
      "fn": "ERC20.transferFrom",
      "offset": [
        891,
        938
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xFF"
    },
    "1672": {
      "fn": "ERC20.transferFrom",
      "offset": [
        891,
        938
      ],
      "op": "PUSH5",
      "path": "4",
      "value": "0x100000000"
    },
    "1678": {
      "fn": "ERC20.transferFrom",
      "offset": [
        891,
        938
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1679": {
      "fn": "ERC20.transferFrom",
      "offset": [
        891,
        938
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1680": {
      "fn": "ERC20.transferFrom",
      "offset": [
        891,
        938
      ],
      "op": "DIV",
      "path": "4"
    },
    "1681": {
      "fn": "ERC20.transferFrom",
      "offset": [
        891,
        938
      ],
      "op": "AND",
      "path": "4"
    },
    "1682": {
      "fn": "ERC20.transferFrom",
      "offset": [
        891,
        938
      ],
      "op": "DUP6",
      "path": "4"
    },
    "1683": {
      "fn": "ERC20.transferFrom",
      "jump": "o",
      "offset": [
        891,
        938
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1684": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5677,
        5889
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1685": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "3"
    },
    "1686": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5765,
        5769
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1688": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5838
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 14
    },
    "1689": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5838
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1690": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5838
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1691": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5824
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1693": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5838
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1695": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5838
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1696": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5838
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1697": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5838
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1698": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5838
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1700": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5838
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1701": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5838
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1702": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5838
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1703": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1705": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1707": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1709": {
      "op": "SHL"
    },
    "1710": {
      "op": "SUB"
    },
    "1711": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5847
      ],
      "op": "DUP8",
      "path": "0"
    },
    "1712": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5847
      ],
      "op": "AND",
      "path": "0"
    },
    "1713": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5847
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1714": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5847
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1715": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5847
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1716": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5847
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1717": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5847
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1718": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5847
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1719": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5847
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1720": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5847
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1721": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5765,
        5769
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1722": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5765,
        5769
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1723": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5781,
        5861
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x50C"
    },
    "1726": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5781,
        5861
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1727": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5804,
        5811
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1728": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5804,
        5811
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1729": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5860
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6CB"
    },
    "1732": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5860
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1733": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5850,
        5860
      ],
      "op": "DUP7",
      "path": "0"
    },
    "1734": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5850,
        5860
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1735": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5860
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x188A"
    },
    "1738": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5813,
        5860
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1739": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5860
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1740": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5781,
        5789
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xED9"
    },
    "1743": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5781,
        5861
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1744": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        2092,
        2493
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1745": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        2164,
        2165
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 15,
      "value": "0x0"
    },
    "1747": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        2155,
        2161
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1748": {
      "branch": 70,
      "fn": "SmartNodes.lockTokens",
      "offset": [
        2155,
        2165
      ],
      "op": "GT",
      "path": "4"
    },
    "1749": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        2147,
        2203
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x72A"
    },
    "1752": {
      "branch": 70,
      "fn": "SmartNodes.lockTokens",
      "offset": [
        2147,
        2203
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1753": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        2147,
        2203
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1755": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        2147,
        2203
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1756": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1760": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1762": {
      "op": "SHL"
    },
    "1763": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        2147,
        2203
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1764": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        2147,
        2203
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1765": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1767": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        2147,
        2203
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "1769": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        2147,
        2203
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1770": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        2147,
        2203
      ],
      "op": "ADD",
      "path": "4"
    },
    "1771": {
      "op": "MSTORE"
    },
    "1772": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "1774": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1776": {
      "op": "DUP3"
    },
    "1777": {
      "op": "ADD"
    },
    "1778": {
      "op": "MSTORE"
    },
    "1779": {
      "op": "PUSH32",
      "value": "0x416D6F756E74206D7573742062652067726561746572207468616E207A65726F"
    },
    "1812": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1814": {
      "op": "DUP3"
    },
    "1815": {
      "op": "ADD"
    },
    "1816": {
      "op": "MSTORE"
    },
    "1817": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "1819": {
      "op": "PUSH1",
      "value": "0xF9"
    },
    "1821": {
      "op": "SHL"
    },
    "1822": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1824": {
      "op": "DUP3"
    },
    "1825": {
      "op": "ADD"
    },
    "1826": {
      "op": "MSTORE"
    },
    "1827": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1829": {
      "op": "ADD"
    },
    "1830": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        2147,
        2203
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x5A4"
    },
    "1833": {
      "op": "JUMP"
    },
    "1834": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        2147,
        2203
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1835": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        2231,
        2241
      ],
      "op": "CALLER",
      "path": "4",
      "statement": 16
    },
    "1836": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3400,
        3407
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1838": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3426,
        3444
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1839": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3426,
        3444
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1840": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3426,
        3444
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1841": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3426,
        3444
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1843": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3426,
        3444
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1844": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3426,
        3444
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1845": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3426,
        3444
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1846": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3426,
        3444
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1848": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3426,
        3444
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1849": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3426,
        3444
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1850": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3426,
        3444
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1851": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        2246,
        2252
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1852": {
      "op": "GT"
    },
    "1853": {
      "branch": 71,
      "fn": "SmartNodes.lockTokens",
      "offset": [
        2221,
        2252
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "1854": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        2213,
        2278
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x781"
    },
    "1857": {
      "branch": 71,
      "fn": "SmartNodes.lockTokens",
      "offset": [
        2213,
        2278
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1858": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        2213,
        2278
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1860": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        2213,
        2278
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1861": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1865": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1867": {
      "op": "SHL"
    },
    "1868": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        2213,
        2278
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1869": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        2213,
        2278
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1870": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1872": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        2213,
        2278
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "1874": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        2213,
        2278
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1875": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        2213,
        2278
      ],
      "op": "ADD",
      "path": "4"
    },
    "1876": {
      "op": "MSTORE"
    },
    "1877": {
      "op": "PUSH1",
      "value": "0x15"
    },
    "1879": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1881": {
      "op": "DUP3"
    },
    "1882": {
      "op": "ADD"
    },
    "1883": {
      "op": "MSTORE"
    },
    "1884": {
      "op": "PUSH21",
      "value": "0x24B739BAB33334B1B4B2B73A103130B630B731B297"
    },
    "1906": {
      "op": "PUSH1",
      "value": "0x59"
    },
    "1908": {
      "op": "SHL"
    },
    "1909": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1911": {
      "op": "DUP3"
    },
    "1912": {
      "op": "ADD"
    },
    "1913": {
      "op": "MSTORE"
    },
    "1914": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1916": {
      "op": "ADD"
    },
    "1917": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        2213,
        2278
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x5A4"
    },
    "1920": {
      "op": "JUMP"
    },
    "1921": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        2213,
        2278
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1922": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        2332,
        2342
      ],
      "op": "CALLER",
      "path": "4"
    },
    "1923": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        2289,
        2308
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1925": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        2311,
        2343
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1926": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        2311,
        2343
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1927": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        2311,
        2343
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1928": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        2311,
        2331
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x5"
    },
    "1930": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        2311,
        2343
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1932": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        2311,
        2343
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1933": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        2311,
        2343
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1934": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        2311,
        2343
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1935": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        2311,
        2343
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1937": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        2311,
        2343
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1938": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        2311,
        2343
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1939": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        2311,
        2343
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1940": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        2311,
        2343
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1941": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        2383,
        2406
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1942": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        2383,
        2406
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1943": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        2383,
        2406
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1944": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        2383,
        2393
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x7"
    },
    "1946": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        2383,
        2406
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1947": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        2383,
        2406
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1948": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        2383,
        2406
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1949": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        2383,
        2406
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1950": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        2383,
        2406
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1951": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        2417,
        2433
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 17,
      "value": "0x3"
    },
    "1953": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        2417,
        2433
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1954": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        2417,
        2433
      ],
      "op": "ADD",
      "path": "4"
    },
    "1955": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        2417,
        2451
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1956": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        2417,
        2451
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1957": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        2311,
        2343
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1958": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        2311,
        2343
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "1959": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        2383,
        2406
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1960": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        2383,
        2406
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1961": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        2444,
        2450
      ],
      "op": "DUP6",
      "path": "4"
    },
    "1962": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        2444,
        2450
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1963": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        2289,
        2308
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1964": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        2417,
        2451
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x7BC"
    },
    "1967": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        2417,
        2451
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1968": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        2444,
        2450
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1969": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        2444,
        2450
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1970": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        2417,
        2451
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xFFFFFFFF"
    },
    "1975": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        2417,
        2451
      ],
      "op": "AND",
      "path": "4"
    },
    "1976": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        2417,
        2451
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x189D"
    },
    "1979": {
      "fn": "SmartNodes.lockTokens",
      "jump": "i",
      "offset": [
        2417,
        2451
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1980": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        2417,
        2451
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1981": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        2417,
        2451
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1982": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        2417,
        2451
      ],
      "op": "POP",
      "path": "4"
    },
    "1983": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        2417,
        2451
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x100"
    },
    "1986": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        2417,
        2451
      ],
      "op": "EXP",
      "path": "4"
    },
    "1987": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        2417,
        2451
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1988": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        2417,
        2451
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1989": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        2417,
        2451
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1990": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        2417,
        2451
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xFFFFFFFF"
    },
    "1995": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        2417,
        2451
      ],
      "op": "MUL",
      "path": "4"
    },
    "1996": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        2417,
        2451
      ],
      "op": "NOT",
      "path": "4"
    },
    "1997": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        2417,
        2451
      ],
      "op": "AND",
      "path": "4"
    },
    "1998": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        2417,
        2451
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1999": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        2417,
        2451
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2000": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        2417,
        2451
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xFFFFFFFF"
    },
    "2005": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        2417,
        2451
      ],
      "op": "AND",
      "path": "4"
    },
    "2006": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        2417,
        2451
      ],
      "op": "MUL",
      "path": "4"
    },
    "2007": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        2417,
        2451
      ],
      "op": "OR",
      "path": "4"
    },
    "2008": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        2417,
        2451
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2009": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        2417,
        2451
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "2010": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        2417,
        2451
      ],
      "op": "POP",
      "path": "4"
    },
    "2011": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        2461,
        2486
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 18,
      "value": "0x7E4"
    },
    "2014": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        2467,
        2477
      ],
      "op": "CALLER",
      "path": "4"
    },
    "2015": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        2479,
        2485
      ],
      "op": "DUP5",
      "path": "4"
    },
    "2016": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        2461,
        2466
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x11CB"
    },
    "2019": {
      "fn": "SmartNodes.lockTokens",
      "jump": "i",
      "offset": [
        2461,
        2486
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2020": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        2461,
        2486
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2021": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        2137,
        2493
      ],
      "op": "POP",
      "path": "4"
    },
    "2022": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        2137,
        2493
      ],
      "op": "POP",
      "path": "4"
    },
    "2023": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        2092,
        2493
      ],
      "op": "POP",
      "path": "4"
    },
    "2024": {
      "fn": "SmartNodes.lockTokens",
      "jump": "o",
      "offset": [
        2092,
        2493
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2025": {
      "fn": "SmartNodes.createJob",
      "offset": [
        2846,
        4034
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2026": {
      "fn": "SmartNodes.createJob",
      "offset": [
        2967,
        2968
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 19,
      "value": "0x0"
    },
    "2028": {
      "fn": "SmartNodes.createJob",
      "offset": [
        2956,
        2964
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2029": {
      "branch": 72,
      "fn": "SmartNodes.createJob",
      "offset": [
        2956,
        2968
      ],
      "op": "GT",
      "path": "4"
    },
    "2030": {
      "fn": "SmartNodes.createJob",
      "offset": [
        2948,
        3008
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x845"
    },
    "2033": {
      "branch": 72,
      "fn": "SmartNodes.createJob",
      "offset": [
        2948,
        3008
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2034": {
      "fn": "SmartNodes.createJob",
      "offset": [
        2948,
        3008
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2036": {
      "fn": "SmartNodes.createJob",
      "offset": [
        2948,
        3008
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2037": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2041": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2043": {
      "op": "SHL"
    },
    "2044": {
      "fn": "SmartNodes.createJob",
      "offset": [
        2948,
        3008
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2045": {
      "fn": "SmartNodes.createJob",
      "offset": [
        2948,
        3008
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2046": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2048": {
      "fn": "SmartNodes.createJob",
      "offset": [
        2948,
        3008
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "2050": {
      "fn": "SmartNodes.createJob",
      "offset": [
        2948,
        3008
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2051": {
      "fn": "SmartNodes.createJob",
      "offset": [
        2948,
        3008
      ],
      "op": "ADD",
      "path": "4"
    },
    "2052": {
      "op": "MSTORE"
    },
    "2053": {
      "op": "PUSH1",
      "value": "0x23"
    },
    "2055": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2057": {
      "op": "DUP3"
    },
    "2058": {
      "op": "ADD"
    },
    "2059": {
      "op": "MSTORE"
    },
    "2060": {
      "op": "PUSH32",
      "value": "0x4361706163697479206D7573742062652067726561746572207468616E207A65"
    },
    "2093": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2095": {
      "op": "DUP3"
    },
    "2096": {
      "op": "ADD"
    },
    "2097": {
      "op": "MSTORE"
    },
    "2098": {
      "op": "PUSH3",
      "value": "0x393797"
    },
    "2102": {
      "op": "PUSH1",
      "value": "0xE9"
    },
    "2104": {
      "op": "SHL"
    },
    "2105": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2107": {
      "op": "DUP3"
    },
    "2108": {
      "op": "ADD"
    },
    "2109": {
      "op": "MSTORE"
    },
    "2110": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2112": {
      "op": "ADD"
    },
    "2113": {
      "fn": "SmartNodes.createJob",
      "offset": [
        2948,
        3008
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x5A4"
    },
    "2116": {
      "op": "JUMP"
    },
    "2117": {
      "fn": "SmartNodes.createJob",
      "offset": [
        2948,
        3008
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2118": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3064,
        3065
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 20,
      "value": "0x0"
    },
    "2120": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3039,
        3054
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2121": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3039,
        3061
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2122": {
      "branch": 73,
      "fn": "SmartNodes.createJob",
      "offset": [
        3039,
        3065
      ],
      "op": "GT",
      "path": "4"
    },
    "2123": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3018,
        3129
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x8A5"
    },
    "2126": {
      "branch": 73,
      "fn": "SmartNodes.createJob",
      "offset": [
        3018,
        3129
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2127": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3018,
        3129
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2129": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3018,
        3129
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2130": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2134": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2136": {
      "op": "SHL"
    },
    "2137": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3018,
        3129
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2138": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3018,
        3129
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2139": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2141": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3018,
        3129
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "2143": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3018,
        3129
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2144": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3018,
        3129
      ],
      "op": "ADD",
      "path": "4"
    },
    "2145": {
      "op": "MSTORE"
    },
    "2146": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "2148": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2150": {
      "op": "DUP3"
    },
    "2151": {
      "op": "ADD"
    },
    "2152": {
      "op": "MSTORE"
    },
    "2153": {
      "op": "PUSH32",
      "value": "0x4174206C65617374206F6E6520776F726B6572206D7573742062652073706563"
    },
    "2186": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2188": {
      "op": "DUP3"
    },
    "2189": {
      "op": "ADD"
    },
    "2190": {
      "op": "MSTORE"
    },
    "2191": {
      "op": "PUSH6",
      "value": "0x34B334B2B217"
    },
    "2198": {
      "op": "PUSH1",
      "value": "0xD1"
    },
    "2200": {
      "op": "SHL"
    },
    "2201": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2203": {
      "op": "DUP3"
    },
    "2204": {
      "op": "ADD"
    },
    "2205": {
      "op": "MSTORE"
    },
    "2206": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2208": {
      "op": "ADD"
    },
    "2209": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3018,
        3129
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x5A4"
    },
    "2212": {
      "op": "JUMP"
    },
    "2213": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3018,
        3129
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2214": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3183,
        3193
      ],
      "op": "CALLER",
      "path": "4"
    },
    "2215": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3140,
        3159
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2217": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3162,
        3194
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2218": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3162,
        3194
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2219": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3162,
        3194
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2220": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3162,
        3182
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x5"
    },
    "2222": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3162,
        3194
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2224": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3162,
        3194
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2225": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3162,
        3194
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2226": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3162,
        3194
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2227": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3162,
        3194
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2229": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3162,
        3194
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2230": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3162,
        3194
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2231": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3162,
        3194
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "2232": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3162,
        3194
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2233": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3234,
        3257
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2234": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3234,
        3257
      ],
      "op": "DUP5",
      "path": "4"
    },
    "2235": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3234,
        3257
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2236": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3234,
        3244
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x7"
    },
    "2238": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3234,
        3257
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2239": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3234,
        3257
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "2240": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3234,
        3257
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2241": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3234,
        3257
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2242": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3234,
        3257
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2243": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3234,
        3257
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "2244": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3275,
        3293
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 21,
      "value": "0x3"
    },
    "2246": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3275,
        3293
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2247": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3275,
        3293
      ],
      "op": "ADD",
      "path": "4"
    },
    "2248": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3275,
        3293
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2249": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3275,
        3293
      ],
      "op": "PUSH5",
      "path": "4",
      "value": "0x100000000"
    },
    "2255": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3275,
        3293
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2256": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3275,
        3293
      ],
      "op": "DIV",
      "path": "4"
    },
    "2257": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3275,
        3293
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xFF"
    },
    "2259": {
      "branch": 74,
      "fn": "SmartNodes.createJob",
      "offset": [
        3275,
        3293
      ],
      "op": "AND",
      "path": "4"
    },
    "2260": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3267,
        3322
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x91A"
    },
    "2263": {
      "branch": 74,
      "fn": "SmartNodes.createJob",
      "offset": [
        3267,
        3322
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2264": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3267,
        3322
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2266": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3267,
        3322
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2267": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2271": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2273": {
      "op": "SHL"
    },
    "2274": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3267,
        3322
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2275": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3267,
        3322
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2276": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2278": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3267,
        3322
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "2280": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3267,
        3322
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2281": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3267,
        3322
      ],
      "op": "ADD",
      "path": "4"
    },
    "2282": {
      "op": "MSTORE"
    },
    "2283": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "2285": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2287": {
      "op": "DUP3"
    },
    "2288": {
      "op": "ADD"
    },
    "2289": {
      "op": "MSTORE"
    },
    "2290": {
      "op": "PUSH24",
      "value": "0x2B30B634B230BA37B91034B9903737BA1030B1BA34BB3297"
    },
    "2315": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "2317": {
      "op": "SHL"
    },
    "2318": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2320": {
      "op": "DUP3"
    },
    "2321": {
      "op": "ADD"
    },
    "2322": {
      "op": "MSTORE"
    },
    "2323": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2325": {
      "op": "ADD"
    },
    "2326": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3267,
        3322
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x5A4"
    },
    "2329": {
      "op": "JUMP"
    },
    "2330": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3267,
        3322
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2331": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3477,
        3489
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xA"
    },
    "2333": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3477,
        3489
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2334": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3425,
        3462
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2336": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3465,
        3490
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2337": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3465,
        3490
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2338": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3465,
        3490
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2339": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3465,
        3476
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xB"
    },
    "2341": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3465,
        3490
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2343": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3465,
        3490
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2344": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3465,
        3490
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2345": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3465,
        3490
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2346": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3465,
        3490
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2348": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3465,
        3490
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2349": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3465,
        3490
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2350": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3465,
        3490
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "2351": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3500,
        3528
      ],
      "op": "SWAP2",
      "path": "4",
      "statement": 22
    },
    "2352": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3500,
        3528
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2353": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3500,
        3528
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "2354": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3538,
        3556
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 23,
      "value": "0x1"
    },
    "2356": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3538,
        3556
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2357": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3538,
        3556
      ],
      "op": "ADD",
      "path": "4"
    },
    "2358": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3538,
        3569
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2359": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3538,
        3569
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2360": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2362": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2364": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2366": {
      "op": "SHL"
    },
    "2367": {
      "op": "SUB"
    },
    "2368": {
      "op": "NOT"
    },
    "2369": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3538,
        3569
      ],
      "op": "AND",
      "path": "4"
    },
    "2370": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3559,
        3569
      ],
      "op": "CALLER",
      "path": "4"
    },
    "2371": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3538,
        3569
      ],
      "op": "OR",
      "path": "4"
    },
    "2372": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3538,
        3569
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2373": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3538,
        3569
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "2374": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3579,
        3598
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 24,
      "value": "0x2"
    },
    "2376": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3579,
        3598
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2377": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3579,
        3598
      ],
      "op": "ADD",
      "path": "4"
    },
    "2378": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3579,
        3609
      ],
      "op": "DUP7",
      "path": "4"
    },
    "2379": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3579,
        3609
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2380": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3579,
        3609
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "2381": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3619,
        3663
      ],
      "op": "DUP5",
      "path": "4",
      "statement": 25
    },
    "2382": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3619,
        3663
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2383": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3619,
        3663
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x960"
    },
    "2386": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3619,
        3663
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2387": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3619,
        3645
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x3"
    },
    "2389": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3619,
        3645
      ],
      "op": "DUP5",
      "path": "4"
    },
    "2390": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3619,
        3645
      ],
      "op": "ADD",
      "path": "4"
    },
    "2391": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3619,
        3645
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2392": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3619,
        3663
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2393": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3619,
        3663
      ],
      "op": "DUP8",
      "path": "4"
    },
    "2394": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3619,
        3663
      ],
      "op": "ADD",
      "path": "4"
    },
    "2395": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3619,
        3663
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2396": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3619,
        3663
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x146E"
    },
    "2399": {
      "fn": "SmartNodes.createJob",
      "jump": "i",
      "offset": [
        3619,
        3663
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2400": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3619,
        3663
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2401": {
      "op": "POP"
    },
    "2402": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3674,
        3686
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 26,
      "value": "0xA"
    },
    "2404": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3674,
        3688
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2405": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3674,
        3688
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2406": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3674,
        3688
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2407": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3674,
        3686
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2409": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3674,
        3688
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x971"
    },
    "2412": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3674,
        3688
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2413": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3674,
        3688
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x18BA"
    },
    "2416": {
      "fn": "SmartNodes.createJob",
      "jump": "i",
      "offset": [
        3674,
        3688
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2417": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3674,
        3688
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2418": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3674,
        3688
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2419": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3674,
        3688
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2420": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3674,
        3688
      ],
      "op": "POP",
      "path": "4"
    },
    "2421": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3674,
        3688
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "2422": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3674,
        3688
      ],
      "op": "POP",
      "path": "4"
    },
    "2423": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3799,
        3808
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2425": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3794,
        3921
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2426": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3818,
        3833
      ],
      "op": "DUP5",
      "path": "4"
    },
    "2427": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3818,
        3840
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2428": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3814,
        3815
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2429": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3814,
        3840
      ],
      "op": "LT",
      "path": "4"
    },
    "2430": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3794,
        3921
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "2431": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3794,
        3921
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x9D6"
    },
    "2434": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3794,
        3921
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2435": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3905,
        3910
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 27,
      "value": "0x0"
    },
    "2437": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3861,
        3871
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2438": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3861,
        3882
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "2440": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3861,
        3882
      ],
      "op": "ADD",
      "path": "4"
    },
    "2441": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3861,
        3902
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2443": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3883,
        3898
      ],
      "op": "DUP8",
      "path": "4"
    },
    "2444": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3899,
        3900
      ],
      "op": "DUP5",
      "path": "4"
    },
    "2445": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3883,
        3901
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2446": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3883,
        3901
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2447": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3883,
        3901
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2448": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3883,
        3901
      ],
      "op": "LT",
      "path": "4"
    },
    "2449": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3883,
        3901
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x99C"
    },
    "2452": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3883,
        3901
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2453": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3883,
        3901
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x99C"
    },
    "2456": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3883,
        3901
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x18D3"
    },
    "2459": {
      "fn": "SmartNodes.createJob",
      "jump": "i",
      "offset": [
        3883,
        3901
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2460": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3883,
        3901
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2461": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3883,
        3901
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2463": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3883,
        3901
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2464": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3883,
        3901
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2465": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3883,
        3901
      ],
      "op": "MUL",
      "path": "4"
    },
    "2466": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3883,
        3901
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2467": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3883,
        3901
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2468": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3883,
        3901
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2469": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3883,
        3901
      ],
      "op": "ADD",
      "path": "4"
    },
    "2470": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3883,
        3901
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2471": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3883,
        3901
      ],
      "op": "ADD",
      "path": "4"
    },
    "2472": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3883,
        3901
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2473": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2475": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2477": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2479": {
      "op": "SHL"
    },
    "2480": {
      "op": "SUB"
    },
    "2481": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3861,
        3902
      ],
      "op": "AND",
      "path": "4"
    },
    "2482": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3861,
        3902
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2483": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3861,
        3902
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2484": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3861,
        3902
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2485": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3861,
        3902
      ],
      "op": "ADD",
      "path": "4"
    },
    "2486": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3861,
        3902
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2487": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3861,
        3902
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2488": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3861,
        3902
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2489": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3861,
        3902
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2490": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3861,
        3902
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2492": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3861,
        3902
      ],
      "op": "ADD",
      "path": "4"
    },
    "2493": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2495": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3861,
        3902
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "2496": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3861,
        3910
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2497": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3861,
        3910
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2498": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2500": {
      "op": "NOT"
    },
    "2501": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3861,
        3910
      ],
      "op": "AND",
      "path": "4"
    },
    "2502": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3861,
        3910
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2503": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3861,
        3910
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "2504": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3861,
        3910
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "2505": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3861,
        3910
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2506": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3861,
        3910
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2507": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3861,
        3910
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2508": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3861,
        3910
      ],
      "op": "OR",
      "path": "4"
    },
    "2509": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3861,
        3910
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2510": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3861,
        3910
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "2511": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2513": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3842,
        3845
      ],
      "op": "ADD",
      "path": "4",
      "statement": 28
    },
    "2514": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3794,
        3921
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x979"
    },
    "2517": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3794,
        3921
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2518": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3794,
        3921
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2519": {
      "op": "POP"
    },
    "2520": {
      "fn": "SmartNodes.createJob",
      "offset": [
        4009,
        4019
      ],
      "op": "CALLER",
      "path": "4",
      "statement": 29
    },
    "2521": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3987,
        4020
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2523": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3987,
        4020
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2524": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3987,
        4020
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2525": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3987,
        4020
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2526": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3987,
        4008
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "2528": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3987,
        4008
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2529": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3987,
        4008
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2530": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3987,
        4008
      ],
      "op": "ADD",
      "path": "4"
    },
    "2531": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3987,
        4020
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2533": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3987,
        4020
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2534": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3987,
        4020
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2536": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3987,
        4020
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2537": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3987,
        4020
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "2538": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3987,
        4027
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2539": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3987,
        4027
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2540": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2542": {
      "op": "NOT"
    },
    "2543": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3987,
        4027
      ],
      "op": "AND",
      "path": "4"
    },
    "2544": {
      "fn": "SmartNodes.createJob",
      "offset": [
        4023,
        4027
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "2546": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3987,
        4027
      ],
      "op": "OR",
      "path": "4"
    },
    "2547": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3987,
        4027
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2548": {
      "fn": "SmartNodes.createJob",
      "offset": [
        3987,
        4027
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "2549": {
      "op": "POP"
    },
    "2550": {
      "op": "POP"
    },
    "2551": {
      "op": "POP"
    },
    "2552": {
      "op": "POP"
    },
    "2553": {
      "fn": "SmartNodes.createJob",
      "jump": "o",
      "offset": [
        2846,
        4034
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2554": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        2499,
        2840
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2555": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        2599,
        2609
      ],
      "op": "CALLER",
      "path": "4"
    },
    "2556": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        2556,
        2575
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2558": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        2578,
        2610
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2559": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        2578,
        2610
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2560": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        2578,
        2610
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2561": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        2578,
        2598
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x5"
    },
    "2563": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        2578,
        2610
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2565": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        2578,
        2610
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2566": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        2578,
        2610
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2567": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        2578,
        2610
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2568": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        2578,
        2610
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2570": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        2578,
        2610
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2571": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        2578,
        2610
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2572": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        2578,
        2610
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "2573": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        2578,
        2610
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2574": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        2650,
        2673
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2575": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        2650,
        2673
      ],
      "op": "DUP5",
      "path": "4"
    },
    "2576": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        2650,
        2673
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2577": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        2650,
        2660
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x7"
    },
    "2579": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        2650,
        2673
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2580": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        2650,
        2673
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "2581": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        2650,
        2673
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2582": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        2650,
        2673
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2583": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        2650,
        2673
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2584": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        2650,
        2673
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "2585": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        2702,
        2718
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 30,
      "value": "0x3"
    },
    "2587": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        2702,
        2718
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2588": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        2702,
        2718
      ],
      "op": "ADD",
      "path": "4"
    },
    "2589": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        2702,
        2718
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2590": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        2702,
        2718
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xFFFFFFFF"
    },
    "2595": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        2702,
        2718
      ],
      "op": "AND",
      "path": "4"
    },
    "2596": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        2692,
        2718
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2597": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        2692,
        2718
      ],
      "op": "GT",
      "path": "4"
    },
    "2598": {
      "branch": 75,
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        2692,
        2718
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "2599": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        2684,
        2753
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xA72"
    },
    "2602": {
      "branch": 75,
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        2684,
        2753
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2603": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        2684,
        2753
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2605": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        2684,
        2753
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2606": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2610": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2612": {
      "op": "SHL"
    },
    "2613": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        2684,
        2753
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2614": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        2684,
        2753
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2615": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2617": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        2684,
        2753
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "2619": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        2684,
        2753
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2620": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        2684,
        2753
      ],
      "op": "ADD",
      "path": "4"
    },
    "2621": {
      "op": "MSTORE"
    },
    "2622": {
      "op": "PUSH1",
      "value": "0x1E"
    },
    "2624": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2626": {
      "op": "DUP3"
    },
    "2627": {
      "op": "ADD"
    },
    "2628": {
      "op": "MSTORE"
    },
    "2629": {
      "op": "PUSH32",
      "value": "0x416D6F756E742065786365656473206C6F636B65642062616C616E63652E0000"
    },
    "2662": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2664": {
      "op": "DUP3"
    },
    "2665": {
      "op": "ADD"
    },
    "2666": {
      "op": "MSTORE"
    },
    "2667": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2669": {
      "op": "ADD"
    },
    "2670": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        2684,
        2753
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x5A4"
    },
    "2673": {
      "op": "JUMP"
    },
    "2674": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        2684,
        2753
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2675": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        2764,
        2780
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 31,
      "value": "0x3"
    },
    "2677": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        2764,
        2780
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2678": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        2764,
        2780
      ],
      "op": "ADD",
      "path": "4"
    },
    "2679": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        2764,
        2798
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2680": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        2764,
        2798
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2681": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        2791,
        2797
      ],
      "op": "DUP5",
      "path": "4"
    },
    "2682": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        2791,
        2797
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2683": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        2764,
        2780
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2684": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        2764,
        2780
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2686": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        2764,
        2780
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2687": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        2764,
        2798
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xA8F"
    },
    "2690": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        2764,
        2798
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2691": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        2791,
        2797
      ],
      "op": "DUP5",
      "path": "4"
    },
    "2692": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        2791,
        2797
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2693": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        2764,
        2798
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xFFFFFFFF"
    },
    "2698": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        2764,
        2798
      ],
      "op": "AND",
      "path": "4"
    },
    "2699": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        2764,
        2798
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x18E9"
    },
    "2702": {
      "fn": "SmartNodes.unlockTokens",
      "jump": "i",
      "offset": [
        2764,
        2798
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2703": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        2764,
        2798
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2704": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        2764,
        2798
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "2705": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        2764,
        2798
      ],
      "op": "POP",
      "path": "4"
    },
    "2706": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        2764,
        2798
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x100"
    },
    "2709": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        2764,
        2798
      ],
      "op": "EXP",
      "path": "4"
    },
    "2710": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        2764,
        2798
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2711": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        2764,
        2798
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2712": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        2764,
        2798
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2713": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        2764,
        2798
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xFFFFFFFF"
    },
    "2718": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        2764,
        2798
      ],
      "op": "MUL",
      "path": "4"
    },
    "2719": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        2764,
        2798
      ],
      "op": "NOT",
      "path": "4"
    },
    "2720": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        2764,
        2798
      ],
      "op": "AND",
      "path": "4"
    },
    "2721": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        2764,
        2798
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2722": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        2764,
        2798
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2723": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        2764,
        2798
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xFFFFFFFF"
    },
    "2728": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        2764,
        2798
      ],
      "op": "AND",
      "path": "4"
    },
    "2729": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        2764,
        2798
      ],
      "op": "MUL",
      "path": "4"
    },
    "2730": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        2764,
        2798
      ],
      "op": "OR",
      "path": "4"
    },
    "2731": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        2764,
        2798
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2732": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        2764,
        2798
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "2733": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        2764,
        2798
      ],
      "op": "POP",
      "path": "4"
    },
    "2734": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        2808,
        2833
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 32,
      "value": "0x7E4"
    },
    "2737": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        2814,
        2824
      ],
      "op": "CALLER",
      "path": "4"
    },
    "2738": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        2826,
        2832
      ],
      "op": "DUP5",
      "path": "4"
    },
    "2739": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        2808,
        2813
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1319"
    },
    "2742": {
      "fn": "SmartNodes.unlockTokens",
      "jump": "i",
      "offset": [
        2808,
        2833
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2743": {
      "fn": "ERC20.symbol",
      "offset": [
        2285,
        2387
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2744": {
      "fn": "ERC20.symbol",
      "offset": [
        2341,
        2354
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "2746": {
      "fn": "ERC20.symbol",
      "offset": [
        2373,
        2380
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 33,
      "value": "0x4"
    },
    "2748": {
      "fn": "ERC20.symbol",
      "offset": [
        2366,
        2380
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2749": {
      "fn": "ERC20.symbol",
      "offset": [
        2366,
        2380
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2750": {
      "fn": "ERC20.symbol",
      "offset": [
        2366,
        2380
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x47C"
    },
    "2753": {
      "fn": "ERC20.symbol",
      "offset": [
        2366,
        2380
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2754": {
      "fn": "ERC20.symbol",
      "offset": [
        2366,
        2380
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x183A"
    },
    "2757": {
      "fn": "ERC20.symbol",
      "jump": "i",
      "offset": [
        2366,
        2380
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2758": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6376,
        6781
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2759": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "3"
    },
    "2760": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6469,
        6473
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2762": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6537
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2763": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6537
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2764": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6537
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2765": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6523
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2767": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6537
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2769": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6537
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2770": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6537
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2771": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6537
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2772": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6537
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2774": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6537
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2775": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6537
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2776": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6537
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2777": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2779": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2781": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2783": {
      "op": "SHL"
    },
    "2784": {
      "op": "SUB"
    },
    "2785": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6546
      ],
      "op": "DUP7",
      "path": "0"
    },
    "2786": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6546
      ],
      "op": "AND",
      "path": "0"
    },
    "2787": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6546
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2788": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6546
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2789": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6546
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2790": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6546
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2791": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6546
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2792": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6546
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2793": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6546
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2794": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6546
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2795": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6564,
        6599
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 34
    },
    "2796": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6564,
        6599
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2797": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6564,
        6599
      ],
      "op": "LT",
      "path": "0"
    },
    "2798": {
      "branch": 81,
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6564,
        6599
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2799": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6556,
        6641
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB48"
    },
    "2802": {
      "branch": 81,
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6556,
        6641
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2803": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6556,
        6641
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2805": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6556,
        6641
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2806": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2810": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2812": {
      "op": "SHL"
    },
    "2813": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6556,
        6641
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2814": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6556,
        6641
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2815": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2817": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6556,
        6641
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2819": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6556,
        6641
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2820": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6556,
        6641
      ],
      "op": "ADD",
      "path": "0"
    },
    "2821": {
      "op": "MSTORE"
    },
    "2822": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "2824": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2826": {
      "op": "DUP3"
    },
    "2827": {
      "op": "ADD"
    },
    "2828": {
      "op": "MSTORE"
    },
    "2829": {
      "op": "PUSH32",
      "value": "0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
    },
    "2862": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2864": {
      "op": "DUP3"
    },
    "2865": {
      "op": "ADD"
    },
    "2866": {
      "op": "MSTORE"
    },
    "2867": {
      "op": "PUSH5",
      "value": "0x207A65726F"
    },
    "2873": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "2875": {
      "op": "SHL"
    },
    "2876": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2878": {
      "op": "DUP3"
    },
    "2879": {
      "op": "ADD"
    },
    "2880": {
      "op": "MSTORE"
    },
    "2881": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2883": {
      "op": "ADD"
    },
    "2884": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6556,
        6641
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5A4"
    },
    "2887": {
      "op": "JUMP"
    },
    "2888": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6556,
        6641
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2889": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6675,
        6742
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 35,
      "value": "0xB55"
    },
    "2892": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "3"
    },
    "2893": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6698,
        6705
      ],
      "op": "DUP6",
      "path": "0"
    },
    "2894": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6726,
        6741
      ],
      "op": "DUP6",
      "path": "0"
    },
    "2895": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6707,
        6723
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2896": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6707,
        6741
      ],
      "op": "SUB",
      "path": "0"
    },
    "2897": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6675,
        6683
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xED9"
    },
    "2900": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6675,
        6742
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2901": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6675,
        6742
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2902": {
      "op": "POP"
    },
    "2903": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6774
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 36,
      "value": "0x1"
    },
    "2905": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6774
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "2906": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6376,
        6781
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2907": {
      "op": "POP"
    },
    "2908": {
      "op": "POP"
    },
    "2909": {
      "op": "POP"
    },
    "2910": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "o",
      "offset": [
        6376,
        6781
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2911": {
      "fn": "ERC20.transfer",
      "offset": [
        3654,
        3826
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2912": {
      "fn": "ERC20.transfer",
      "offset": [
        3740,
        3744
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2914": {
      "fn": "ERC20.transfer",
      "offset": [
        3756,
        3798
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 37,
      "value": "0x50C"
    },
    "2917": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "3"
    },
    "2918": {
      "fn": "ERC20.transfer",
      "offset": [
        3780,
        3789
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2919": {
      "fn": "ERC20.transfer",
      "offset": [
        3791,
        3797
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2920": {
      "fn": "ERC20.transfer",
      "offset": [
        3756,
        3765
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFFD"
    },
    "2923": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        3756,
        3798
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2924": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1576,
        2086
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2925": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1678,
        1870
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2927": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1678,
        1870
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2928": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1678,
        1870
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2929": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1678,
        1870
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xA0"
    },
    "2931": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1678,
        1870
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2932": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1678,
        1870
      ],
      "op": "ADD",
      "path": "4"
    },
    "2933": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1678,
        1870
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2934": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1678,
        1870
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2935": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1706,
        1724
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x8"
    },
    "2937": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1706,
        1724
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2938": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1678,
        1870
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2939": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1678,
        1870
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2940": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1678,
        1870
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2941": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1756,
        1766
      ],
      "op": "CALLER",
      "path": "4"
    },
    "2942": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1678,
        1870
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2944": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1678,
        1870
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2945": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1678,
        1870
      ],
      "op": "DUP5",
      "path": "4"
    },
    "2946": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1678,
        1870
      ],
      "op": "ADD",
      "path": "4"
    },
    "2947": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1678,
        1870
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2948": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1678,
        1870
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2949": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1678,
        1870
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2950": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1678,
        1870
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2951": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1678,
        1870
      ],
      "op": "DUP6",
      "path": "4"
    },
    "2952": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1678,
        1870
      ],
      "op": "ADD",
      "path": "4"
    },
    "2953": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1678,
        1870
      ],
      "op": "DUP7",
      "path": "4"
    },
    "2954": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1678,
        1870
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2955": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1678,
        1870
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2956": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2958": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1678,
        1870
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x60"
    },
    "2960": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1678,
        1870
      ],
      "op": "DUP7",
      "path": "4"
    },
    "2961": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1678,
        1870
      ],
      "op": "ADD",
      "path": "4"
    },
    "2962": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1678,
        1870
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2963": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1678,
        1870
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2964": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1678,
        1870
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2965": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1855,
        1859
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "2967": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1678,
        1870
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x80"
    },
    "2969": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1678,
        1870
      ],
      "op": "DUP8",
      "path": "4"
    },
    "2970": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1678,
        1870
      ],
      "op": "ADD",
      "path": "4"
    },
    "2971": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1678,
        1870
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2972": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1678,
        1870
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2973": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1678,
        1870
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2974": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1881,
        1911
      ],
      "op": "SWAP5",
      "path": "4",
      "statement": 38
    },
    "2975": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1881,
        1911
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2976": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1881,
        1911
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2977": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1881,
        1891
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x7"
    },
    "2979": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1881,
        1911
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2980": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1881,
        1911
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "2981": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1881,
        1911
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2982": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1881,
        1911
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "2983": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1881,
        1911
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2984": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1881,
        1911
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "2985": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1881,
        1923
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2986": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1881,
        1923
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2987": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1881,
        1923
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2988": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1881,
        1923
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "2989": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1881,
        1923
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2990": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1881,
        1923
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2991": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1881,
        1923
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2992": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1881,
        1923
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2993": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1881,
        1923
      ],
      "op": "ADD",
      "path": "4"
    },
    "2994": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1881,
        1923
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2995": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1881,
        1923
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2996": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2998": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3000": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3002": {
      "op": "SHL"
    },
    "3003": {
      "op": "SUB"
    },
    "3004": {
      "op": "NOT"
    },
    "3005": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1881,
        1923
      ],
      "op": "AND",
      "path": "4"
    },
    "3006": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3008": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3010": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3012": {
      "op": "SHL"
    },
    "3013": {
      "op": "SUB"
    },
    "3014": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1881,
        1923
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3015": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1881,
        1923
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "3016": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1881,
        1923
      ],
      "op": "AND",
      "path": "4"
    },
    "3017": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1881,
        1923
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "3018": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1881,
        1923
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3019": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1881,
        1923
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "3020": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1881,
        1923
      ],
      "op": "OR",
      "path": "4"
    },
    "3021": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1881,
        1923
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3022": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1881,
        1923
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3023": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1881,
        1923
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "3024": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1881,
        1923
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3025": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1881,
        1923
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "3026": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1678,
        1870
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3027": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1678,
        1870
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3028": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1678,
        1870
      ],
      "op": "DUP3",
      "path": "4"
    },
    "3029": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1678,
        1870
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3030": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1881,
        1923
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "3032": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1881,
        1923
      ],
      "op": "DUP3",
      "path": "4"
    },
    "3033": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1881,
        1923
      ],
      "op": "ADD",
      "path": "4"
    },
    "3034": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1881,
        1923
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3035": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1881,
        1923
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xBE4"
    },
    "3038": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1881,
        1923
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3039": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1881,
        1923
      ],
      "op": "DUP3",
      "path": "4"
    },
    "3040": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1881,
        1923
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1956"
    },
    "3043": {
      "fn": "SmartNodes.createValidator",
      "jump": "i",
      "offset": [
        1881,
        1923
      ],
      "op": "JUMP",
      "path": "4"
    },
    "3044": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1881,
        1923
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3045": {
      "op": "POP"
    },
    "3046": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1881,
        1923
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x60"
    },
    "3048": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1881,
        1923
      ],
      "op": "DUP3",
      "path": "4"
    },
    "3049": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1881,
        1923
      ],
      "op": "ADD",
      "path": "4"
    },
    "3050": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1881,
        1923
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "3051": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1881,
        1923
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x3"
    },
    "3053": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1881,
        1923
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3054": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1881,
        1923
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3055": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1881,
        1923
      ],
      "op": "ADD",
      "path": "4"
    },
    "3056": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1881,
        1923
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3057": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1881,
        1923
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "3058": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1881,
        1923
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x80"
    },
    "3060": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1881,
        1923
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3061": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1881,
        1923
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "3062": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1881,
        1923
      ],
      "op": "ADD",
      "path": "4"
    },
    "3063": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1881,
        1923
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "3064": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1881,
        1923
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "3065": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1881,
        1923
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "3066": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1881,
        1923
      ],
      "op": "PUSH5",
      "path": "4",
      "value": "0x100000000"
    },
    "3072": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1881,
        1923
      ],
      "op": "MUL",
      "path": "4"
    },
    "3073": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "3079": {
      "op": "NOT"
    },
    "3080": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1881,
        1923
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3081": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1881,
        1923
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "3082": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1881,
        1923
      ],
      "op": "AND",
      "path": "4"
    },
    "3083": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1881,
        1923
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xFFFFFFFF"
    },
    "3088": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1881,
        1923
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3089": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1881,
        1923
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "3090": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1881,
        1923
      ],
      "op": "AND",
      "path": "4"
    },
    "3091": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1881,
        1923
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3092": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1881,
        1923
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3093": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1881,
        1923
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3094": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1881,
        1923
      ],
      "op": "OR",
      "path": "4"
    },
    "3095": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1881,
        1923
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3096": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1881,
        1923
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3097": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1881,
        1923
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3098": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1881,
        1923
      ],
      "op": "OR",
      "path": "4"
    },
    "3099": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1881,
        1923
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3100": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1881,
        1923
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "3101": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1968,
        1986
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 39,
      "value": "0x8"
    },
    "3103": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1968,
        1986
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "3104": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1954,
        1964
      ],
      "op": "CALLER",
      "path": "4"
    },
    "3105": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1881,
        1923
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "3107": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1933,
        1965
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3108": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1933,
        1965
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3109": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1933,
        1965
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3110": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1933,
        1953
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x5"
    },
    "3112": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1933,
        1965
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "3114": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1933,
        1965
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3115": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1933,
        1965
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "3117": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1933,
        1965
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3118": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1933,
        1965
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3119": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1933,
        1965
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3120": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1933,
        1965
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "3121": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1933,
        1986
      ],
      "op": "DUP3",
      "path": "4"
    },
    "3122": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1933,
        1986
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3123": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1933,
        1986
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "3124": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1996,
        2028
      ],
      "op": "MLOAD",
      "path": "4",
      "statement": 40
    },
    "3125": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1996,
        2013
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x6"
    },
    "3127": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1996,
        2013
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3128": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1996,
        2028
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xC42"
    },
    "3131": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1996,
        2028
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3132": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        2014,
        2027
      ],
      "op": "DUP6",
      "path": "4"
    },
    "3133": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        2014,
        2027
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3134": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1996,
        2028
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1A16"
    },
    "3137": {
      "fn": "SmartNodes.createValidator",
      "jump": "i",
      "offset": [
        1996,
        2028
      ],
      "op": "JUMP",
      "path": "4"
    },
    "3138": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1996,
        2028
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3139": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1996,
        2028
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3140": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1996,
        2028
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3141": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1996,
        2028
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3142": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1996,
        2028
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "3144": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1996,
        2028
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "3145": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1996,
        2028
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3146": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1996,
        2028
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3147": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1996,
        2028
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3148": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1996,
        2028
      ],
      "op": "SUB",
      "path": "4"
    },
    "3149": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1996,
        2028
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "3151": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1996,
        2028
      ],
      "op": "ADD",
      "path": "4"
    },
    "3152": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1996,
        2028
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3153": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1996,
        2028
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "3154": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1996,
        2049
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "3155": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        2059,
        2077
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 41,
      "value": "0x8"
    },
    "3157": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        2059,
        2079
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3158": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        2059,
        2079
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "3159": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        2059,
        2079
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3160": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        2059,
        2077
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "3162": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        2059,
        2079
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xC62"
    },
    "3165": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        2059,
        2079
      ],
      "op": "DUP4",
      "path": "4"
    },
    "3166": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        2059,
        2079
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x18BA"
    },
    "3169": {
      "fn": "SmartNodes.createValidator",
      "jump": "i",
      "offset": [
        2059,
        2079
      ],
      "op": "JUMP",
      "path": "4"
    },
    "3170": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        2059,
        2079
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3171": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        2059,
        2079
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3172": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        2059,
        2079
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3173": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        2059,
        2079
      ],
      "op": "POP",
      "path": "4"
    },
    "3174": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        2059,
        2079
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "3175": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        2059,
        2079
      ],
      "op": "POP",
      "path": "4"
    },
    "3176": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1639,
        2086
      ],
      "op": "POP",
      "path": "4"
    },
    "3177": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        1576,
        2086
      ],
      "op": "POP",
      "path": "4"
    },
    "3178": {
      "fn": "SmartNodes.createValidator",
      "jump": "o",
      "offset": [
        1576,
        2086
      ],
      "op": "JUMP",
      "path": "4"
    },
    "3179": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4040,
        4926
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3180": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4145,
        4155
      ],
      "op": "CALLER",
      "path": "4"
    },
    "3181": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4102,
        4121
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "3183": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4124,
        4156
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3184": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4124,
        4156
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3185": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4124,
        4156
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3186": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4124,
        4144
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x5"
    },
    "3188": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4124,
        4156
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "3190": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4124,
        4156
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3191": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4124,
        4156
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3192": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4124,
        4156
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3193": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4124,
        4156
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "3195": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4124,
        4156
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3196": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4124,
        4156
      ],
      "op": "DUP4",
      "path": "4"
    },
    "3197": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4124,
        4156
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "3198": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4124,
        4156
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "3199": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4196,
        4219
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3200": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4196,
        4219
      ],
      "op": "DUP5",
      "path": "4"
    },
    "3201": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4196,
        4219
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3202": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4196,
        4206
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x7"
    },
    "3204": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4196,
        4219
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3205": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4196,
        4219
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "3206": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4196,
        4219
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3207": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4196,
        4219
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3208": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4196,
        4219
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3209": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4196,
        4219
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "3210": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4237,
        4255
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 42,
      "value": "0x3"
    },
    "3212": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4237,
        4255
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3213": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4237,
        4255
      ],
      "op": "ADD",
      "path": "4"
    },
    "3214": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4237,
        4255
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "3215": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4237,
        4255
      ],
      "op": "PUSH5",
      "path": "4",
      "value": "0x100000000"
    },
    "3221": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4237,
        4255
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3222": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4237,
        4255
      ],
      "op": "DIV",
      "path": "4"
    },
    "3223": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4237,
        4255
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xFF"
    },
    "3225": {
      "branch": 76,
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4237,
        4255
      ],
      "op": "AND",
      "path": "4"
    },
    "3226": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4229,
        4284
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xCE0"
    },
    "3229": {
      "branch": 76,
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4229,
        4284
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "3230": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4229,
        4284
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "3232": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4229,
        4284
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "3233": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3237": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3239": {
      "op": "SHL"
    },
    "3240": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4229,
        4284
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3241": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4229,
        4284
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3242": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3244": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4229,
        4284
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "3246": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4229,
        4284
      ],
      "op": "DUP3",
      "path": "4"
    },
    "3247": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4229,
        4284
      ],
      "op": "ADD",
      "path": "4"
    },
    "3248": {
      "op": "MSTORE"
    },
    "3249": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "3251": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3253": {
      "op": "DUP3"
    },
    "3254": {
      "op": "ADD"
    },
    "3255": {
      "op": "MSTORE"
    },
    "3256": {
      "op": "PUSH24",
      "value": "0x2B30B634B230BA37B91034B9903737BA1030B1BA34BB3297"
    },
    "3281": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "3283": {
      "op": "SHL"
    },
    "3284": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3286": {
      "op": "DUP3"
    },
    "3287": {
      "op": "ADD"
    },
    "3288": {
      "op": "MSTORE"
    },
    "3289": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3291": {
      "op": "ADD"
    },
    "3292": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4229,
        4284
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x5A4"
    },
    "3295": {
      "op": "JUMP"
    },
    "3296": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4229,
        4284
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3297": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4315,
        4333
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 43,
      "value": "0x0"
    },
    "3299": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4315,
        4333
      ],
      "op": "DUP4",
      "path": "4"
    },
    "3300": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4315,
        4333
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3301": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4315,
        4333
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3302": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4315,
        4326
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xB"
    },
    "3304": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4315,
        4333
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "3306": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4315,
        4333
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3307": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4315,
        4333
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "3309": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4315,
        4333
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3310": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4315,
        4333
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "3311": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4315,
        4336
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "3312": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4315,
        4345
      ],
      "op": "DUP4",
      "path": "4"
    },
    "3313": {
      "branch": 77,
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4315,
        4345
      ],
      "op": "EQ",
      "path": "4"
    },
    "3314": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4294,
        4407
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xD49"
    },
    "3317": {
      "branch": 77,
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4294,
        4407
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "3318": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4294,
        4407
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "3320": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4294,
        4407
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "3321": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3325": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3327": {
      "op": "SHL"
    },
    "3328": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4294,
        4407
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3329": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4294,
        4407
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3330": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3332": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4294,
        4407
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "3334": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4294,
        4407
      ],
      "op": "DUP3",
      "path": "4"
    },
    "3335": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4294,
        4407
      ],
      "op": "ADD",
      "path": "4"
    },
    "3336": {
      "op": "MSTORE"
    },
    "3337": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3339": {
      "op": "DUP1"
    },
    "3340": {
      "op": "DUP3"
    },
    "3341": {
      "op": "ADD"
    },
    "3342": {
      "op": "MSTORE"
    },
    "3343": {
      "op": "PUSH32",
      "value": "0x4A6F62206372656174696F6E207265717565737420646F6573206E6F74206578"
    },
    "3376": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3378": {
      "op": "DUP3"
    },
    "3379": {
      "op": "ADD"
    },
    "3380": {
      "op": "MSTORE"
    },
    "3381": {
      "op": "PUSH4",
      "value": "0x34B9BA17"
    },
    "3386": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "3388": {
      "op": "SHL"
    },
    "3389": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3391": {
      "op": "DUP3"
    },
    "3392": {
      "op": "ADD"
    },
    "3393": {
      "op": "MSTORE"
    },
    "3394": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3396": {
      "op": "ADD"
    },
    "3397": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4294,
        4407
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x5A4"
    },
    "3400": {
      "op": "JUMP"
    },
    "3401": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4294,
        4407
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3402": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4418,
        4452
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "3404": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4455,
        4473
      ],
      "op": "DUP4",
      "path": "4"
    },
    "3405": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4455,
        4473
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3406": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4455,
        4473
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3407": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4455,
        4466
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xB"
    },
    "3409": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4455,
        4473
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "3411": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4455,
        4473
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3412": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4455,
        4473
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3413": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4455,
        4473
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3414": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4455,
        4473
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "3416": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4455,
        4473
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3417": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4455,
        4473
      ],
      "op": "DUP4",
      "path": "4"
    },
    "3418": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4455,
        4473
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "3419": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4502,
        4512
      ],
      "op": "CALLER",
      "path": "4",
      "statement": 44
    },
    "3420": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4483,
        4513
      ],
      "op": "DUP5",
      "path": "4"
    },
    "3421": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4483,
        4513
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3422": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4483,
        4501
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "3424": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4483,
        4501
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3425": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4483,
        4501
      ],
      "op": "ADD",
      "path": "4"
    },
    "3426": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4483,
        4513
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3427": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4483,
        4513
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "3428": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4483,
        4513
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3429": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4483,
        4513
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3430": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4483,
        4513
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3431": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4483,
        4513
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "3432": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4483,
        4520
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3433": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4483,
        4520
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "3434": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "3436": {
      "op": "NOT"
    },
    "3437": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4483,
        4520
      ],
      "op": "AND",
      "path": "4"
    },
    "3438": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4516,
        4520
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "3440": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4483,
        4520
      ],
      "op": "OR",
      "path": "4"
    },
    "3441": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4483,
        4520
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3442": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4483,
        4520
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "3443": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4563,
        4581
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xC"
    },
    "3445": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4563,
        4581
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "3446": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4535,
        4559
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xD7E"
    },
    "3449": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4455,
        4473
      ],
      "op": "DUP3",
      "path": "4"
    },
    "3450": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4535,
        4550
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x13F8"
    },
    "3453": {
      "fn": "SmartNodes.approveJobCreation",
      "jump": "i",
      "offset": [
        4535,
        4559
      ],
      "op": "JUMP",
      "path": "4"
    },
    "3454": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4535,
        4559
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3455": {
      "branch": 78,
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4535,
        4581
      ],
      "op": "SUB",
      "path": "4"
    },
    "3456": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4531,
        4920
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xED3"
    },
    "3459": {
      "branch": 78,
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4531,
        4920
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "3460": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4614,
        4838
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "3462": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4614,
        4838
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3463": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4614,
        4838
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "3464": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4614,
        4838
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xA0"
    },
    "3466": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4614,
        4838
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3467": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4614,
        4838
      ],
      "op": "ADD",
      "path": "4"
    },
    "3468": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4614,
        4838
      ],
      "op": "DUP3",
      "path": "4"
    },
    "3469": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4614,
        4838
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3470": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4614,
        4838
      ],
      "op": "DUP6",
      "path": "4"
    },
    "3471": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4614,
        4838
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3472": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4614,
        4838
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3473": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4670,
        4685
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "3475": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4670,
        4685
      ],
      "op": "DUP4",
      "path": "4"
    },
    "3476": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4670,
        4685
      ],
      "op": "ADD",
      "path": "4"
    },
    "3477": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4670,
        4685
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "3478": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3480": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3482": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3484": {
      "op": "SHL"
    },
    "3485": {
      "op": "SUB"
    },
    "3486": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4670,
        4685
      ],
      "op": "AND",
      "path": "4"
    },
    "3487": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4614,
        4838
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "3489": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4614,
        4838
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3490": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4614,
        4838
      ],
      "op": "DUP4",
      "path": "4"
    },
    "3491": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4614,
        4838
      ],
      "op": "ADD",
      "path": "4"
    },
    "3492": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4614,
        4838
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3493": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4614,
        4838
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3494": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4614,
        4838
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3495": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4614,
        4838
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3496": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4713,
        4729
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "3498": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4713,
        4729
      ],
      "op": "DUP5",
      "path": "4"
    },
    "3499": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4713,
        4729
      ],
      "op": "ADD",
      "path": "4"
    },
    "3500": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4713,
        4729
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "3501": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4614,
        4838
      ],
      "op": "DUP3",
      "path": "4"
    },
    "3502": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4614,
        4838
      ],
      "op": "DUP5",
      "path": "4"
    },
    "3503": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4614,
        4838
      ],
      "op": "ADD",
      "path": "4"
    },
    "3504": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4614,
        4838
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3505": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4764,
        4787
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x3"
    },
    "3507": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4764,
        4787
      ],
      "op": "DUP5",
      "path": "4"
    },
    "3508": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4764,
        4787
      ],
      "op": "ADD",
      "path": "4"
    },
    "3509": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4614,
        4838
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3510": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4614,
        4838
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "3511": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4614,
        4838
      ],
      "op": "DUP5",
      "path": "4"
    },
    "3512": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4614,
        4838
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "3513": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4614,
        4838
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3514": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4614,
        4838
      ],
      "op": "DUP5",
      "path": "4"
    },
    "3515": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4614,
        4838
      ],
      "op": "MUL",
      "path": "4"
    },
    "3516": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4614,
        4838
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3517": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4614,
        4838
      ],
      "op": "ADD",
      "path": "4"
    },
    "3518": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4614,
        4838
      ],
      "op": "DUP5",
      "path": "4"
    },
    "3519": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4614,
        4838
      ],
      "op": "ADD",
      "path": "4"
    },
    "3520": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4614,
        4838
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3521": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4614,
        4838
      ],
      "op": "SWAP6",
      "path": "4"
    },
    "3522": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4614,
        4838
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3523": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4614,
        4838
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3524": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4614,
        4838
      ],
      "op": "DUP6",
      "path": "4"
    },
    "3525": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4614,
        4838
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3526": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4597,
        4611
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "3528": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4597,
        4611
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "3529": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4614,
        4838
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x60"
    },
    "3531": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4614,
        4838
      ],
      "op": "DUP6",
      "path": "4"
    },
    "3532": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4614,
        4838
      ],
      "op": "ADD",
      "path": "4"
    },
    "3533": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4614,
        4838
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "3534": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4614,
        4838
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3535": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4614,
        4838
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "3536": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4764,
        4787
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3537": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4614,
        4838
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3538": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4614,
        4838
      ],
      "op": "DUP4",
      "path": "4"
    },
    "3539": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4614,
        4838
      ],
      "op": "ADD",
      "path": "4"
    },
    "3540": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4764,
        4787
      ],
      "op": "DUP3",
      "path": "4"
    },
    "3541": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4614,
        4838
      ],
      "op": "DUP3",
      "path": "4"
    },
    "3542": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4614,
        4838
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3543": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4614,
        4838
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "3544": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4614,
        4838
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xE0A"
    },
    "3547": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4614,
        4838
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "3548": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4614,
        4838
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "3550": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4614,
        4838
      ],
      "op": "MUL",
      "path": "4"
    },
    "3551": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4614,
        4838
      ],
      "op": "DUP3",
      "path": "4"
    },
    "3552": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4614,
        4838
      ],
      "op": "ADD",
      "path": "4"
    },
    "3553": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4614,
        4838
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3554": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4614,
        4838
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3555": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4614,
        4838
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "3557": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4614,
        4838
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3558": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4614,
        4838
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "3560": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4614,
        4838
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "3562": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4614,
        4838
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "3563": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4614,
        4838
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3564": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4614,
        4838
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3565": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4614,
        4838
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3566": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4614,
        4838
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "3567": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3569": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3571": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3573": {
      "op": "SHL"
    },
    "3574": {
      "op": "SUB"
    },
    "3575": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4614,
        4838
      ],
      "op": "AND",
      "path": "4"
    },
    "3576": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4614,
        4838
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3577": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4614,
        4838
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3578": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4614,
        4838
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "3580": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4614,
        4838
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3581": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4614,
        4838
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3582": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4614,
        4838
      ],
      "op": "ADD",
      "path": "4"
    },
    "3583": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4614,
        4838
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3584": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4614,
        4838
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "3586": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4614,
        4838
      ],
      "op": "ADD",
      "path": "4"
    },
    "3587": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4614,
        4838
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3588": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4614,
        4838
      ],
      "op": "DUP4",
      "path": "4"
    },
    "3589": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4614,
        4838
      ],
      "op": "GT",
      "path": "4"
    },
    "3590": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4614,
        4838
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xDEC"
    },
    "3593": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4614,
        4838
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "3594": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4614,
        4838
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3595": {
      "op": "POP"
    },
    "3596": {
      "op": "POP"
    },
    "3597": {
      "op": "POP"
    },
    "3598": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4614,
        4838
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3599": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4614,
        4838
      ],
      "op": "DUP4",
      "path": "4"
    },
    "3600": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4614,
        4838
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3601": {
      "op": "POP"
    },
    "3602": {
      "op": "POP"
    },
    "3603": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4818,
        4823
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "3605": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4614,
        4838
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "3607": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4614,
        4838
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3608": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4614,
        4838
      ],
      "op": "DUP3",
      "path": "4"
    },
    "3609": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4614,
        4838
      ],
      "op": "ADD",
      "path": "4"
    },
    "3610": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4614,
        4838
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3611": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4614,
        4838
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3612": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4614,
        4838
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3613": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4853,
        4864
      ],
      "op": "DUP8",
      "path": "4",
      "statement": 45
    },
    "3614": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4853,
        4864
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3615": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4853,
        4864
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3616": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4853,
        4857
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x9"
    },
    "3618": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4853,
        4864
      ],
      "op": "DUP3",
      "path": "4"
    },
    "3619": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4853,
        4864
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3620": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4853,
        4864
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "3622": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4853,
        4864
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3623": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4853,
        4864
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3624": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4853,
        4864
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3625": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4853,
        4864
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "3626": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4853,
        4870
      ],
      "op": "DUP4",
      "path": "4"
    },
    "3627": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4853,
        4870
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "3628": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4853,
        4870
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3629": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4853,
        4870
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "3630": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4853,
        4870
      ],
      "op": "DUP4",
      "path": "4"
    },
    "3631": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4853,
        4870
      ],
      "op": "DUP4",
      "path": "4"
    },
    "3632": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4853,
        4870
      ],
      "op": "ADD",
      "path": "4"
    },
    "3633": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4853,
        4870
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "3634": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4614,
        4838
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "3636": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4853,
        4870
      ],
      "op": "DUP3",
      "path": "4"
    },
    "3637": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4853,
        4870
      ],
      "op": "ADD",
      "path": "4"
    },
    "3638": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4853,
        4870
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3639": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4853,
        4870
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "3640": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3642": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3644": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3646": {
      "op": "SHL"
    },
    "3647": {
      "op": "SUB"
    },
    "3648": {
      "op": "NOT"
    },
    "3649": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4853,
        4870
      ],
      "op": "AND",
      "path": "4"
    },
    "3650": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3652": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3654": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3656": {
      "op": "SHL"
    },
    "3657": {
      "op": "SUB"
    },
    "3658": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4853,
        4870
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3659": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4853,
        4870
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "3660": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4853,
        4870
      ],
      "op": "AND",
      "path": "4"
    },
    "3661": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4853,
        4870
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3662": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4853,
        4870
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3663": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4853,
        4870
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3664": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4853,
        4870
      ],
      "op": "OR",
      "path": "4"
    },
    "3665": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4853,
        4870
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3666": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4853,
        4870
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "3667": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4853,
        4870
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3668": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4853,
        4870
      ],
      "op": "DUP4",
      "path": "4"
    },
    "3669": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4853,
        4870
      ],
      "op": "ADD",
      "path": "4"
    },
    "3670": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4853,
        4870
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "3671": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4853,
        4870
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "3673": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4853,
        4870
      ],
      "op": "DUP3",
      "path": "4"
    },
    "3674": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4853,
        4870
      ],
      "op": "ADD",
      "path": "4"
    },
    "3675": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4853,
        4870
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "3676": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4853,
        4870
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x60"
    },
    "3678": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4853,
        4870
      ],
      "op": "DUP4",
      "path": "4"
    },
    "3679": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4853,
        4870
      ],
      "op": "ADD",
      "path": "4"
    },
    "3680": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4853,
        4870
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "3681": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4853,
        4870
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3682": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4853,
        4870
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "3683": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4853,
        4870
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "3684": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4853,
        4870
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "3685": {
      "op": "POP"
    },
    "3686": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4853,
        4870
      ],
      "op": "DUP5",
      "path": "4"
    },
    "3687": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4853,
        4870
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "3688": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4853,
        4864
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3689": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4853,
        4864
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "3690": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4853,
        4870
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xE7B"
    },
    "3693": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4853,
        4870
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "3694": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4853,
        4870
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x3"
    },
    "3696": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4853,
        4870
      ],
      "op": "DUP6",
      "path": "4"
    },
    "3697": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4853,
        4870
      ],
      "op": "ADD",
      "path": "4"
    },
    "3698": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4853,
        4870
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "3699": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4853,
        4870
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3700": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4853,
        4870
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3701": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4853,
        4870
      ],
      "op": "ADD",
      "path": "4"
    },
    "3702": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4853,
        4870
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3703": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4853,
        4870
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x146E"
    },
    "3706": {
      "fn": "SmartNodes.approveJobCreation",
      "jump": "i",
      "offset": [
        4853,
        4870
      ],
      "op": "JUMP",
      "path": "4"
    },
    "3707": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4853,
        4870
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3708": {
      "op": "POP"
    },
    "3709": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4853,
        4870
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x80"
    },
    "3711": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4853,
        4870
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3712": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4853,
        4870
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3713": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4853,
        4870
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3714": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4853,
        4870
      ],
      "op": "ADD",
      "path": "4"
    },
    "3715": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4853,
        4870
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "3716": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4853,
        4870
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "3718": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4853,
        4870
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3719": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4853,
        4870
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3720": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4853,
        4870
      ],
      "op": "ADD",
      "path": "4"
    },
    "3721": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4853,
        4870
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3722": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4853,
        4870
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "3723": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "3725": {
      "op": "NOT"
    },
    "3726": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4853,
        4870
      ],
      "op": "AND",
      "path": "4"
    },
    "3727": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4853,
        4870
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3728": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4853,
        4870
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "3729": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4853,
        4870
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "3730": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4853,
        4870
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3731": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4853,
        4870
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3732": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4853,
        4870
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3733": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4853,
        4870
      ],
      "op": "OR",
      "path": "4"
    },
    "3734": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4853,
        4870
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3735": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4853,
        4870
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "3736": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3738": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4891,
        4909
      ],
      "op": "DUP6",
      "path": "4",
      "statement": 46
    },
    "3739": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4891,
        4909
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3740": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4891,
        4909
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3741": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4891,
        4902
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xB"
    },
    "3743": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4891,
        4909
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "3745": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4891,
        4909
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3746": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4891,
        4909
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "3748": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4891,
        4909
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3749": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4891,
        4909
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "3750": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4884,
        4909
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3751": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4884,
        4909
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3752": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4884,
        4909
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "3753": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3755": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4884,
        4909
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3756": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4884,
        4909
      ],
      "op": "ADD",
      "path": "4"
    },
    "3757": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4884,
        4909
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3758": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4884,
        4909
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "3759": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3761": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3763": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3765": {
      "op": "SHL"
    },
    "3766": {
      "op": "SUB"
    },
    "3767": {
      "op": "NOT"
    },
    "3768": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4884,
        4909
      ],
      "op": "AND",
      "path": "4"
    },
    "3769": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4884,
        4909
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3770": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4884,
        4909
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "3771": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4884,
        4909
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "3773": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4884,
        4909
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3774": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4884,
        4909
      ],
      "op": "ADD",
      "path": "4"
    },
    "3775": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4884,
        4909
      ],
      "op": "DUP3",
      "path": "4"
    },
    "3776": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4884,
        4909
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3777": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4884,
        4909
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "3778": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4891,
        4909
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3779": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4884,
        4909
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xECF"
    },
    "3782": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4884,
        4909
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x3"
    },
    "3784": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4884,
        4909
      ],
      "op": "DUP4",
      "path": "4"
    },
    "3785": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4884,
        4909
      ],
      "op": "ADD",
      "path": "4"
    },
    "3786": {
      "op": "DUP3"
    },
    "3787": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4884,
        4909
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x14D3"
    },
    "3790": {
      "fn": "SmartNodes.approveJobCreation",
      "jump": "i",
      "offset": [
        4884,
        4909
      ],
      "op": "JUMP",
      "path": "4"
    },
    "3791": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4884,
        4909
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3792": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4884,
        4909
      ],
      "op": "POP",
      "path": "4"
    },
    "3793": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4884,
        4909
      ],
      "op": "POP",
      "path": "4"
    },
    "3794": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4583,
        4920
      ],
      "op": "POP",
      "path": "4"
    },
    "3795": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4531,
        4920
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3796": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4092,
        4926
      ],
      "op": "POP",
      "path": "4"
    },
    "3797": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4092,
        4926
      ],
      "op": "POP",
      "path": "4"
    },
    "3798": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4092,
        4926
      ],
      "op": "POP",
      "path": "4"
    },
    "3799": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        4040,
        4926
      ],
      "op": "POP",
      "path": "4"
    },
    "3800": {
      "fn": "SmartNodes.approveJobCreation",
      "jump": "o",
      "offset": [
        4040,
        4926
      ],
      "op": "JUMP",
      "path": "4"
    },
    "3801": {
      "fn": "ERC20._approve",
      "offset": [
        9952,
        10322
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3802": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3804": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3806": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3808": {
      "op": "SHL"
    },
    "3809": {
      "op": "SUB"
    },
    "3810": {
      "fn": "ERC20._approve",
      "offset": [
        10083,
        10102
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 47
    },
    "3811": {
      "branch": 82,
      "fn": "ERC20._approve",
      "offset": [
        10083,
        10102
      ],
      "op": "AND",
      "path": "0"
    },
    "3812": {
      "fn": "ERC20._approve",
      "offset": [
        10075,
        10143
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF3B"
    },
    "3815": {
      "branch": 82,
      "fn": "ERC20._approve",
      "offset": [
        10075,
        10143
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3816": {
      "fn": "ERC20._approve",
      "offset": [
        10075,
        10143
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3818": {
      "fn": "ERC20._approve",
      "offset": [
        10075,
        10143
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3819": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3823": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3825": {
      "op": "SHL"
    },
    "3826": {
      "fn": "ERC20._approve",
      "offset": [
        10075,
        10143
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3827": {
      "fn": "ERC20._approve",
      "offset": [
        10075,
        10143
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3828": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3830": {
      "fn": "ERC20._approve",
      "offset": [
        10075,
        10143
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3832": {
      "fn": "ERC20._approve",
      "offset": [
        10075,
        10143
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3833": {
      "fn": "ERC20._approve",
      "offset": [
        10075,
        10143
      ],
      "op": "ADD",
      "path": "0"
    },
    "3834": {
      "op": "MSTORE"
    },
    "3835": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3837": {
      "op": "DUP1"
    },
    "3838": {
      "op": "DUP3"
    },
    "3839": {
      "op": "ADD"
    },
    "3840": {
      "op": "MSTORE"
    },
    "3841": {
      "op": "PUSH32",
      "value": "0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
    },
    "3874": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3876": {
      "op": "DUP3"
    },
    "3877": {
      "op": "ADD"
    },
    "3878": {
      "op": "MSTORE"
    },
    "3879": {
      "op": "PUSH4",
      "value": "0x72657373"
    },
    "3884": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3886": {
      "op": "SHL"
    },
    "3887": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3889": {
      "op": "DUP3"
    },
    "3890": {
      "op": "ADD"
    },
    "3891": {
      "op": "MSTORE"
    },
    "3892": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3894": {
      "op": "ADD"
    },
    "3895": {
      "fn": "ERC20._approve",
      "offset": [
        10075,
        10143
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5A4"
    },
    "3898": {
      "op": "JUMP"
    },
    "3899": {
      "fn": "ERC20._approve",
      "offset": [
        10075,
        10143
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3900": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3902": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3904": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3906": {
      "op": "SHL"
    },
    "3907": {
      "op": "SUB"
    },
    "3908": {
      "fn": "ERC20._approve",
      "offset": [
        10161,
        10182
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 48
    },
    "3909": {
      "branch": 83,
      "fn": "ERC20._approve",
      "offset": [
        10161,
        10182
      ],
      "op": "AND",
      "path": "0"
    },
    "3910": {
      "fn": "ERC20._approve",
      "offset": [
        10153,
        10221
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF9C"
    },
    "3913": {
      "branch": 83,
      "fn": "ERC20._approve",
      "offset": [
        10153,
        10221
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3914": {
      "fn": "ERC20._approve",
      "offset": [
        10153,
        10221
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3916": {
      "fn": "ERC20._approve",
      "offset": [
        10153,
        10221
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3917": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3921": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3923": {
      "op": "SHL"
    },
    "3924": {
      "fn": "ERC20._approve",
      "offset": [
        10153,
        10221
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3925": {
      "fn": "ERC20._approve",
      "offset": [
        10153,
        10221
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3926": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3928": {
      "fn": "ERC20._approve",
      "offset": [
        10153,
        10221
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3930": {
      "fn": "ERC20._approve",
      "offset": [
        10153,
        10221
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3931": {
      "fn": "ERC20._approve",
      "offset": [
        10153,
        10221
      ],
      "op": "ADD",
      "path": "0"
    },
    "3932": {
      "op": "MSTORE"
    },
    "3933": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "3935": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3937": {
      "op": "DUP3"
    },
    "3938": {
      "op": "ADD"
    },
    "3939": {
      "op": "MSTORE"
    },
    "3940": {
      "op": "PUSH32",
      "value": "0x45524332303A20617070726F766520746F20746865207A65726F206164647265"
    },
    "3973": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3975": {
      "op": "DUP3"
    },
    "3976": {
      "op": "ADD"
    },
    "3977": {
      "op": "MSTORE"
    },
    "3978": {
      "op": "PUSH2",
      "value": "0x7373"
    },
    "3981": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "3983": {
      "op": "SHL"
    },
    "3984": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3986": {
      "op": "DUP3"
    },
    "3987": {
      "op": "ADD"
    },
    "3988": {
      "op": "MSTORE"
    },
    "3989": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3991": {
      "op": "ADD"
    },
    "3992": {
      "fn": "ERC20._approve",
      "offset": [
        10153,
        10221
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5A4"
    },
    "3995": {
      "op": "JUMP"
    },
    "3996": {
      "fn": "ERC20._approve",
      "offset": [
        10153,
        10221
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3997": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3999": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4001": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4003": {
      "op": "SHL"
    },
    "4004": {
      "op": "SUB"
    },
    "4005": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10250
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 49
    },
    "4006": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10250
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4007": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10250
      ],
      "op": "AND",
      "path": "0"
    },
    "4008": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10250
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4010": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10250
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4011": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10250
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4012": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10250
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4013": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10243
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "4015": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10250
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4017": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10250
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4018": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10250
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4019": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10250
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4020": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10250
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4022": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10250
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4023": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10250
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4024": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10250
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4025": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10259
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "4026": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10259
      ],
      "op": "DUP8",
      "path": "0"
    },
    "4027": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10259
      ],
      "op": "AND",
      "path": "0"
    },
    "4028": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10259
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4029": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10259
      ],
      "op": "DUP5",
      "path": "0"
    },
    "4030": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10259
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4031": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10259
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "4032": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10259
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4033": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10259
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4034": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10259
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4035": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10259
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4036": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10259
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4037": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10259
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4038": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10268
      ],
      "op": "DUP6",
      "path": "0"
    },
    "4039": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10268
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4040": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10268
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "4041": {
      "fn": "ERC20._approve",
      "offset": [
        10283,
        10315
      ],
      "op": "SWAP1",
      "path": "0",
      "statement": 50
    },
    "4042": {
      "fn": "ERC20._approve",
      "offset": [
        10283,
        10315
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4043": {
      "op": "DUP5"
    },
    "4044": {
      "op": "DUP2"
    },
    "4045": {
      "op": "MSTORE"
    },
    "4046": {
      "fn": "ERC20._approve",
      "offset": [
        10283,
        10315
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "4079": {
      "fn": "ERC20._approve",
      "offset": [
        10283,
        10315
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4080": {
      "op": "ADD"
    },
    "4081": {
      "fn": "ERC20._approve",
      "offset": [
        10283,
        10315
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4083": {
      "fn": "ERC20._approve",
      "offset": [
        10283,
        10315
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4084": {
      "fn": "ERC20._approve",
      "offset": [
        10283,
        10315
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4085": {
      "fn": "ERC20._approve",
      "offset": [
        10283,
        10315
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4086": {
      "fn": "ERC20._approve",
      "offset": [
        10283,
        10315
      ],
      "op": "SUB",
      "path": "0"
    },
    "4087": {
      "fn": "ERC20._approve",
      "offset": [
        10283,
        10315
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4088": {
      "fn": "ERC20._approve",
      "offset": [
        10283,
        10315
      ],
      "op": "LOG3",
      "path": "0"
    },
    "4089": {
      "fn": "ERC20._approve",
      "offset": [
        9952,
        10322
      ],
      "op": "POP",
      "path": "0"
    },
    "4090": {
      "fn": "ERC20._approve",
      "offset": [
        9952,
        10322
      ],
      "op": "POP",
      "path": "0"
    },
    "4091": {
      "fn": "ERC20._approve",
      "offset": [
        9952,
        10322
      ],
      "op": "POP",
      "path": "0"
    },
    "4092": {
      "fn": "ERC20._approve",
      "jump": "o",
      "offset": [
        9952,
        10322
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4093": {
      "fn": "ERC20._transfer",
      "offset": [
        7255,
        7968
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4094": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4096": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4098": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4100": {
      "op": "SHL"
    },
    "4101": {
      "op": "SUB"
    },
    "4102": {
      "fn": "ERC20._transfer",
      "offset": [
        7390,
        7410
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 51
    },
    "4103": {
      "branch": 84,
      "fn": "ERC20._transfer",
      "offset": [
        7390,
        7410
      ],
      "op": "AND",
      "path": "0"
    },
    "4104": {
      "fn": "ERC20._transfer",
      "offset": [
        7382,
        7452
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1061"
    },
    "4107": {
      "branch": 84,
      "fn": "ERC20._transfer",
      "offset": [
        7382,
        7452
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4108": {
      "fn": "ERC20._transfer",
      "offset": [
        7382,
        7452
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4110": {
      "fn": "ERC20._transfer",
      "offset": [
        7382,
        7452
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4111": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4115": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4117": {
      "op": "SHL"
    },
    "4118": {
      "fn": "ERC20._transfer",
      "offset": [
        7382,
        7452
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4119": {
      "fn": "ERC20._transfer",
      "offset": [
        7382,
        7452
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4120": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4122": {
      "fn": "ERC20._transfer",
      "offset": [
        7382,
        7452
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4124": {
      "fn": "ERC20._transfer",
      "offset": [
        7382,
        7452
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4125": {
      "fn": "ERC20._transfer",
      "offset": [
        7382,
        7452
      ],
      "op": "ADD",
      "path": "0"
    },
    "4126": {
      "op": "MSTORE"
    },
    "4127": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "4129": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4131": {
      "op": "DUP3"
    },
    "4132": {
      "op": "ADD"
    },
    "4133": {
      "op": "MSTORE"
    },
    "4134": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E736665722066726F6D20746865207A65726F206164"
    },
    "4167": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4169": {
      "op": "DUP3"
    },
    "4170": {
      "op": "ADD"
    },
    "4171": {
      "op": "MSTORE"
    },
    "4172": {
      "op": "PUSH5",
      "value": "0x6472657373"
    },
    "4178": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "4180": {
      "op": "SHL"
    },
    "4181": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4183": {
      "op": "DUP3"
    },
    "4184": {
      "op": "ADD"
    },
    "4185": {
      "op": "MSTORE"
    },
    "4186": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4188": {
      "op": "ADD"
    },
    "4189": {
      "fn": "ERC20._transfer",
      "offset": [
        7382,
        7452
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5A4"
    },
    "4192": {
      "op": "JUMP"
    },
    "4193": {
      "fn": "ERC20._transfer",
      "offset": [
        7382,
        7452
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4194": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4196": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4198": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4200": {
      "op": "SHL"
    },
    "4201": {
      "op": "SUB"
    },
    "4202": {
      "fn": "ERC20._transfer",
      "offset": [
        7470,
        7493
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 52
    },
    "4203": {
      "branch": 85,
      "fn": "ERC20._transfer",
      "offset": [
        7470,
        7493
      ],
      "op": "AND",
      "path": "0"
    },
    "4204": {
      "fn": "ERC20._transfer",
      "offset": [
        7462,
        7533
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10C3"
    },
    "4207": {
      "branch": 85,
      "fn": "ERC20._transfer",
      "offset": [
        7462,
        7533
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4208": {
      "fn": "ERC20._transfer",
      "offset": [
        7462,
        7533
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4210": {
      "fn": "ERC20._transfer",
      "offset": [
        7462,
        7533
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4211": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4215": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4217": {
      "op": "SHL"
    },
    "4218": {
      "fn": "ERC20._transfer",
      "offset": [
        7462,
        7533
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4219": {
      "fn": "ERC20._transfer",
      "offset": [
        7462,
        7533
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4220": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4222": {
      "fn": "ERC20._transfer",
      "offset": [
        7462,
        7533
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4224": {
      "fn": "ERC20._transfer",
      "offset": [
        7462,
        7533
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4225": {
      "fn": "ERC20._transfer",
      "offset": [
        7462,
        7533
      ],
      "op": "ADD",
      "path": "0"
    },
    "4226": {
      "op": "MSTORE"
    },
    "4227": {
      "op": "PUSH1",
      "value": "0x23"
    },
    "4229": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4231": {
      "op": "DUP3"
    },
    "4232": {
      "op": "ADD"
    },
    "4233": {
      "op": "MSTORE"
    },
    "4234": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E7366657220746F20746865207A65726F2061646472"
    },
    "4267": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4269": {
      "op": "DUP3"
    },
    "4270": {
      "op": "ADD"
    },
    "4271": {
      "op": "MSTORE"
    },
    "4272": {
      "op": "PUSH3",
      "value": "0x657373"
    },
    "4276": {
      "op": "PUSH1",
      "value": "0xE8"
    },
    "4278": {
      "op": "SHL"
    },
    "4279": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4281": {
      "op": "DUP3"
    },
    "4282": {
      "op": "ADD"
    },
    "4283": {
      "op": "MSTORE"
    },
    "4284": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4286": {
      "op": "ADD"
    },
    "4287": {
      "fn": "ERC20._transfer",
      "offset": [
        7462,
        7533
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5A4"
    },
    "4290": {
      "op": "JUMP"
    },
    "4291": {
      "fn": "ERC20._transfer",
      "offset": [
        7462,
        7533
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4292": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4294": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4296": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4298": {
      "op": "SHL"
    },
    "4299": {
      "op": "SUB"
    },
    "4300": {
      "fn": "ERC20._transfer",
      "offset": [
        7626,
        7643
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4301": {
      "fn": "ERC20._transfer",
      "offset": [
        7626,
        7643
      ],
      "op": "AND",
      "path": "0"
    },
    "4302": {
      "fn": "ERC20._transfer",
      "offset": [
        7602,
        7623
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4304": {
      "fn": "ERC20._transfer",
      "offset": [
        7626,
        7643
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4305": {
      "fn": "ERC20._transfer",
      "offset": [
        7626,
        7643
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4306": {
      "fn": "ERC20._transfer",
      "offset": [
        7626,
        7643
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4307": {
      "fn": "ERC20._transfer",
      "offset": [
        7626,
        7643
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4309": {
      "fn": "ERC20._transfer",
      "offset": [
        7626,
        7643
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4310": {
      "fn": "ERC20._transfer",
      "offset": [
        7626,
        7643
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4311": {
      "fn": "ERC20._transfer",
      "offset": [
        7626,
        7643
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4312": {
      "fn": "ERC20._transfer",
      "offset": [
        7626,
        7643
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4314": {
      "fn": "ERC20._transfer",
      "offset": [
        7626,
        7643
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4315": {
      "fn": "ERC20._transfer",
      "offset": [
        7626,
        7643
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4316": {
      "fn": "ERC20._transfer",
      "offset": [
        7626,
        7643
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4317": {
      "fn": "ERC20._transfer",
      "offset": [
        7661,
        7684
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 53
    },
    "4318": {
      "fn": "ERC20._transfer",
      "offset": [
        7661,
        7684
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4319": {
      "fn": "ERC20._transfer",
      "offset": [
        7661,
        7684
      ],
      "op": "LT",
      "path": "0"
    },
    "4320": {
      "branch": 86,
      "fn": "ERC20._transfer",
      "offset": [
        7661,
        7684
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4321": {
      "fn": "ERC20._transfer",
      "offset": [
        7653,
        7727
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x113B"
    },
    "4324": {
      "branch": 86,
      "fn": "ERC20._transfer",
      "offset": [
        7653,
        7727
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4325": {
      "fn": "ERC20._transfer",
      "offset": [
        7653,
        7727
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4327": {
      "fn": "ERC20._transfer",
      "offset": [
        7653,
        7727
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4328": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4332": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4334": {
      "op": "SHL"
    },
    "4335": {
      "fn": "ERC20._transfer",
      "offset": [
        7653,
        7727
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4336": {
      "fn": "ERC20._transfer",
      "offset": [
        7653,
        7727
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4337": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4339": {
      "fn": "ERC20._transfer",
      "offset": [
        7653,
        7727
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4341": {
      "fn": "ERC20._transfer",
      "offset": [
        7653,
        7727
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4342": {
      "fn": "ERC20._transfer",
      "offset": [
        7653,
        7727
      ],
      "op": "ADD",
      "path": "0"
    },
    "4343": {
      "op": "MSTORE"
    },
    "4344": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "4346": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4348": {
      "op": "DUP3"
    },
    "4349": {
      "op": "ADD"
    },
    "4350": {
      "op": "MSTORE"
    },
    "4351": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E7366657220616D6F756E7420657863656564732062"
    },
    "4384": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4386": {
      "op": "DUP3"
    },
    "4387": {
      "op": "ADD"
    },
    "4388": {
      "op": "MSTORE"
    },
    "4389": {
      "op": "PUSH6",
      "value": "0x616C616E6365"
    },
    "4396": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "4398": {
      "op": "SHL"
    },
    "4399": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4401": {
      "op": "DUP3"
    },
    "4402": {
      "op": "ADD"
    },
    "4403": {
      "op": "MSTORE"
    },
    "4404": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4406": {
      "op": "ADD"
    },
    "4407": {
      "fn": "ERC20._transfer",
      "offset": [
        7653,
        7727
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5A4"
    },
    "4410": {
      "op": "JUMP"
    },
    "4411": {
      "fn": "ERC20._transfer",
      "offset": [
        7653,
        7727
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4412": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4414": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4416": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4418": {
      "op": "SHL"
    },
    "4419": {
      "op": "SUB"
    },
    "4420": {
      "fn": "ERC20._transfer",
      "offset": [
        7761,
        7778
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 54
    },
    "4421": {
      "fn": "ERC20._transfer",
      "offset": [
        7761,
        7778
      ],
      "op": "DUP6",
      "path": "0"
    },
    "4422": {
      "fn": "ERC20._transfer",
      "offset": [
        7761,
        7778
      ],
      "op": "AND",
      "path": "0"
    },
    "4423": {
      "fn": "ERC20._transfer",
      "offset": [
        7761,
        7770
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4425": {
      "fn": "ERC20._transfer",
      "offset": [
        7761,
        7778
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4426": {
      "fn": "ERC20._transfer",
      "offset": [
        7761,
        7778
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4427": {
      "fn": "ERC20._transfer",
      "offset": [
        7761,
        7778
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4428": {
      "fn": "ERC20._transfer",
      "offset": [
        7761,
        7778
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4430": {
      "fn": "ERC20._transfer",
      "offset": [
        7761,
        7778
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4431": {
      "fn": "ERC20._transfer",
      "offset": [
        7761,
        7778
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4432": {
      "fn": "ERC20._transfer",
      "offset": [
        7761,
        7778
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4433": {
      "fn": "ERC20._transfer",
      "offset": [
        7761,
        7778
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4435": {
      "fn": "ERC20._transfer",
      "offset": [
        7761,
        7778
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4436": {
      "fn": "ERC20._transfer",
      "offset": [
        7761,
        7778
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4437": {
      "fn": "ERC20._transfer",
      "offset": [
        7761,
        7778
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4438": {
      "fn": "ERC20._transfer",
      "offset": [
        7781,
        7803
      ],
      "op": "DUP6",
      "path": "0"
    },
    "4439": {
      "fn": "ERC20._transfer",
      "offset": [
        7781,
        7803
      ],
      "op": "DUP6",
      "path": "0"
    },
    "4440": {
      "fn": "ERC20._transfer",
      "offset": [
        7781,
        7803
      ],
      "op": "SUB",
      "path": "0"
    },
    "4441": {
      "fn": "ERC20._transfer",
      "offset": [
        7761,
        7803
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4442": {
      "fn": "ERC20._transfer",
      "offset": [
        7761,
        7803
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "4443": {
      "fn": "ERC20._transfer",
      "offset": [
        7823,
        7843
      ],
      "op": "SWAP2",
      "path": "0",
      "statement": 55
    },
    "4444": {
      "fn": "ERC20._transfer",
      "offset": [
        7823,
        7843
      ],
      "op": "DUP6",
      "path": "0"
    },
    "4445": {
      "fn": "ERC20._transfer",
      "offset": [
        7823,
        7843
      ],
      "op": "AND",
      "path": "0"
    },
    "4446": {
      "fn": "ERC20._transfer",
      "offset": [
        7823,
        7843
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4447": {
      "fn": "ERC20._transfer",
      "offset": [
        7823,
        7843
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4448": {
      "fn": "ERC20._transfer",
      "offset": [
        7823,
        7843
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4449": {
      "fn": "ERC20._transfer",
      "offset": [
        7823,
        7843
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4450": {
      "fn": "ERC20._transfer",
      "offset": [
        7823,
        7843
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4451": {
      "fn": "ERC20._transfer",
      "offset": [
        7823,
        7853
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4452": {
      "fn": "ERC20._transfer",
      "offset": [
        7823,
        7853
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4453": {
      "fn": "ERC20._transfer",
      "offset": [
        7797,
        7803
      ],
      "op": "DUP5",
      "path": "0"
    },
    "4454": {
      "fn": "ERC20._transfer",
      "offset": [
        7797,
        7803
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "4455": {
      "fn": "ERC20._transfer",
      "offset": [
        7761,
        7770
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4456": {
      "fn": "ERC20._transfer",
      "offset": [
        7823,
        7853
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1172"
    },
    "4459": {
      "fn": "ERC20._transfer",
      "offset": [
        7823,
        7853
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4460": {
      "fn": "ERC20._transfer",
      "offset": [
        7797,
        7803
      ],
      "op": "DUP5",
      "path": "0"
    },
    "4461": {
      "fn": "ERC20._transfer",
      "offset": [
        7797,
        7803
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4462": {
      "fn": "ERC20._transfer",
      "offset": [
        7823,
        7853
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x188A"
    },
    "4465": {
      "fn": "ERC20._transfer",
      "jump": "i",
      "offset": [
        7823,
        7853
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4466": {
      "fn": "ERC20._transfer",
      "offset": [
        7823,
        7853
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4467": {
      "fn": "ERC20._transfer",
      "offset": [
        7823,
        7853
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "4468": {
      "fn": "ERC20._transfer",
      "offset": [
        7823,
        7853
      ],
      "op": "POP",
      "path": "0"
    },
    "4469": {
      "fn": "ERC20._transfer",
      "offset": [
        7823,
        7853
      ],
      "op": "POP",
      "path": "0"
    },
    "4470": {
      "fn": "ERC20._transfer",
      "offset": [
        7823,
        7853
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4471": {
      "fn": "ERC20._transfer",
      "offset": [
        7823,
        7853
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4472": {
      "fn": "ERC20._transfer",
      "offset": [
        7823,
        7853
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "4473": {
      "fn": "ERC20._transfer",
      "offset": [
        7823,
        7853
      ],
      "op": "POP",
      "path": "0"
    },
    "4474": {
      "fn": "ERC20._transfer",
      "offset": [
        7886,
        7895
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 56
    },
    "4475": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4477": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4479": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4481": {
      "op": "SHL"
    },
    "4482": {
      "op": "SUB"
    },
    "4483": {
      "fn": "ERC20._transfer",
      "offset": [
        7869,
        7904
      ],
      "op": "AND",
      "path": "0"
    },
    "4484": {
      "fn": "ERC20._transfer",
      "offset": [
        7878,
        7884
      ],
      "op": "DUP5",
      "path": "0"
    },
    "4485": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4487": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4489": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4491": {
      "op": "SHL"
    },
    "4492": {
      "op": "SUB"
    },
    "4493": {
      "fn": "ERC20._transfer",
      "offset": [
        7869,
        7904
      ],
      "op": "AND",
      "path": "0"
    },
    "4494": {
      "fn": "ERC20._transfer",
      "offset": [
        7869,
        7904
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "4527": {
      "fn": "ERC20._transfer",
      "offset": [
        7897,
        7903
      ],
      "op": "DUP5",
      "path": "0"
    },
    "4528": {
      "fn": "ERC20._transfer",
      "offset": [
        7869,
        7904
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4530": {
      "fn": "ERC20._transfer",
      "offset": [
        7869,
        7904
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4531": {
      "fn": "ERC20._transfer",
      "offset": [
        7869,
        7904
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11BE"
    },
    "4534": {
      "fn": "ERC20._transfer",
      "offset": [
        7869,
        7904
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4535": {
      "op": "DUP2"
    },
    "4536": {
      "op": "MSTORE"
    },
    "4537": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4539": {
      "op": "ADD"
    },
    "4540": {
      "op": "SWAP1"
    },
    "4541": {
      "op": "JUMP"
    },
    "4542": {
      "fn": "ERC20._transfer",
      "offset": [
        7869,
        7904
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4543": {
      "fn": "ERC20._transfer",
      "offset": [
        7869,
        7904
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4545": {
      "fn": "ERC20._transfer",
      "offset": [
        7869,
        7904
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4546": {
      "fn": "ERC20._transfer",
      "offset": [
        7869,
        7904
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4547": {
      "fn": "ERC20._transfer",
      "offset": [
        7869,
        7904
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4548": {
      "fn": "ERC20._transfer",
      "offset": [
        7869,
        7904
      ],
      "op": "SUB",
      "path": "0"
    },
    "4549": {
      "fn": "ERC20._transfer",
      "offset": [
        7869,
        7904
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4550": {
      "fn": "ERC20._transfer",
      "offset": [
        7869,
        7904
      ],
      "op": "LOG3",
      "path": "0"
    },
    "4551": {
      "fn": "ERC20._transfer",
      "offset": [
        7915,
        7961
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 57,
      "value": "0xED3"
    },
    "4554": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        2092,
        2493
      ],
      "op": "JUMP",
      "path": "4"
    },
    "4555": {
      "fn": "ERC20._burn",
      "offset": [
        8953,
        9529
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4556": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4558": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4560": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4562": {
      "op": "SHL"
    },
    "4563": {
      "op": "SUB"
    },
    "4564": {
      "fn": "ERC20._burn",
      "offset": [
        9036,
        9057
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 58
    },
    "4565": {
      "branch": 87,
      "fn": "ERC20._burn",
      "offset": [
        9036,
        9057
      ],
      "op": "AND",
      "path": "0"
    },
    "4566": {
      "fn": "ERC20._burn",
      "offset": [
        9028,
        9095
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x122B"
    },
    "4569": {
      "branch": 87,
      "fn": "ERC20._burn",
      "offset": [
        9028,
        9095
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4570": {
      "fn": "ERC20._burn",
      "offset": [
        9028,
        9095
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4572": {
      "fn": "ERC20._burn",
      "offset": [
        9028,
        9095
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4573": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4577": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4579": {
      "op": "SHL"
    },
    "4580": {
      "fn": "ERC20._burn",
      "offset": [
        9028,
        9095
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4581": {
      "fn": "ERC20._burn",
      "offset": [
        9028,
        9095
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4582": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4584": {
      "fn": "ERC20._burn",
      "offset": [
        9028,
        9095
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4586": {
      "fn": "ERC20._burn",
      "offset": [
        9028,
        9095
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4587": {
      "fn": "ERC20._burn",
      "offset": [
        9028,
        9095
      ],
      "op": "ADD",
      "path": "0"
    },
    "4588": {
      "op": "MSTORE"
    },
    "4589": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "4591": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4593": {
      "op": "DUP3"
    },
    "4594": {
      "op": "ADD"
    },
    "4595": {
      "op": "MSTORE"
    },
    "4596": {
      "op": "PUSH32",
      "value": "0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573"
    },
    "4629": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4631": {
      "op": "DUP3"
    },
    "4632": {
      "op": "ADD"
    },
    "4633": {
      "op": "MSTORE"
    },
    "4634": {
      "op": "PUSH1",
      "value": "0x73"
    },
    "4636": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "4638": {
      "op": "SHL"
    },
    "4639": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4641": {
      "op": "DUP3"
    },
    "4642": {
      "op": "ADD"
    },
    "4643": {
      "op": "MSTORE"
    },
    "4644": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4646": {
      "op": "ADD"
    },
    "4647": {
      "fn": "ERC20._burn",
      "offset": [
        9028,
        9095
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5A4"
    },
    "4650": {
      "op": "JUMP"
    },
    "4651": {
      "fn": "ERC20._burn",
      "offset": [
        9028,
        9095
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4652": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4654": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4656": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4658": {
      "op": "SHL"
    },
    "4659": {
      "op": "SUB"
    },
    "4660": {
      "fn": "ERC20._burn",
      "offset": [
        9191,
        9209
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4661": {
      "fn": "ERC20._burn",
      "offset": [
        9191,
        9209
      ],
      "op": "AND",
      "path": "0"
    },
    "4662": {
      "fn": "ERC20._burn",
      "offset": [
        9166,
        9188
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4664": {
      "fn": "ERC20._burn",
      "offset": [
        9191,
        9209
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4665": {
      "fn": "ERC20._burn",
      "offset": [
        9191,
        9209
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4666": {
      "fn": "ERC20._burn",
      "offset": [
        9191,
        9209
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4667": {
      "fn": "ERC20._burn",
      "offset": [
        9191,
        9209
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4669": {
      "fn": "ERC20._burn",
      "offset": [
        9191,
        9209
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4670": {
      "fn": "ERC20._burn",
      "offset": [
        9191,
        9209
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4671": {
      "fn": "ERC20._burn",
      "offset": [
        9191,
        9209
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4672": {
      "fn": "ERC20._burn",
      "offset": [
        9191,
        9209
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4674": {
      "fn": "ERC20._burn",
      "offset": [
        9191,
        9209
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4675": {
      "fn": "ERC20._burn",
      "offset": [
        9191,
        9209
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4676": {
      "fn": "ERC20._burn",
      "offset": [
        9191,
        9209
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4677": {
      "fn": "ERC20._burn",
      "offset": [
        9227,
        9251
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 59
    },
    "4678": {
      "fn": "ERC20._burn",
      "offset": [
        9227,
        9251
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4679": {
      "fn": "ERC20._burn",
      "offset": [
        9227,
        9251
      ],
      "op": "LT",
      "path": "0"
    },
    "4680": {
      "branch": 88,
      "fn": "ERC20._burn",
      "offset": [
        9227,
        9251
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4681": {
      "fn": "ERC20._burn",
      "offset": [
        9219,
        9290
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x129F"
    },
    "4684": {
      "branch": 88,
      "fn": "ERC20._burn",
      "offset": [
        9219,
        9290
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4685": {
      "fn": "ERC20._burn",
      "offset": [
        9219,
        9290
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4687": {
      "fn": "ERC20._burn",
      "offset": [
        9219,
        9290
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4688": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4692": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4694": {
      "op": "SHL"
    },
    "4695": {
      "fn": "ERC20._burn",
      "offset": [
        9219,
        9290
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4696": {
      "fn": "ERC20._burn",
      "offset": [
        9219,
        9290
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4697": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4699": {
      "fn": "ERC20._burn",
      "offset": [
        9219,
        9290
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4701": {
      "fn": "ERC20._burn",
      "offset": [
        9219,
        9290
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4702": {
      "fn": "ERC20._burn",
      "offset": [
        9219,
        9290
      ],
      "op": "ADD",
      "path": "0"
    },
    "4703": {
      "op": "MSTORE"
    },
    "4704": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "4706": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4708": {
      "op": "DUP3"
    },
    "4709": {
      "op": "ADD"
    },
    "4710": {
      "op": "MSTORE"
    },
    "4711": {
      "op": "PUSH32",
      "value": "0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E"
    },
    "4744": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4746": {
      "op": "DUP3"
    },
    "4747": {
      "op": "ADD"
    },
    "4748": {
      "op": "MSTORE"
    },
    "4749": {
      "op": "PUSH2",
      "value": "0x6365"
    },
    "4752": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "4754": {
      "op": "SHL"
    },
    "4755": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4757": {
      "op": "DUP3"
    },
    "4758": {
      "op": "ADD"
    },
    "4759": {
      "op": "MSTORE"
    },
    "4760": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4762": {
      "op": "ADD"
    },
    "4763": {
      "fn": "ERC20._burn",
      "offset": [
        9219,
        9290
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5A4"
    },
    "4766": {
      "op": "JUMP"
    },
    "4767": {
      "fn": "ERC20._burn",
      "offset": [
        9219,
        9290
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4768": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4770": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4772": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4774": {
      "op": "SHL"
    },
    "4775": {
      "op": "SUB"
    },
    "4776": {
      "fn": "ERC20._burn",
      "offset": [
        9324,
        9342
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 60
    },
    "4777": {
      "fn": "ERC20._burn",
      "offset": [
        9324,
        9342
      ],
      "op": "AND",
      "path": "0"
    },
    "4778": {
      "fn": "ERC20._burn",
      "offset": [
        9324,
        9333
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4780": {
      "fn": "ERC20._burn",
      "offset": [
        9324,
        9342
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4781": {
      "fn": "ERC20._burn",
      "offset": [
        9324,
        9342
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4782": {
      "fn": "ERC20._burn",
      "offset": [
        9324,
        9342
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4783": {
      "fn": "ERC20._burn",
      "offset": [
        9324,
        9342
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4785": {
      "fn": "ERC20._burn",
      "offset": [
        9324,
        9342
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4786": {
      "fn": "ERC20._burn",
      "offset": [
        9324,
        9342
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4787": {
      "fn": "ERC20._burn",
      "offset": [
        9324,
        9342
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4788": {
      "fn": "ERC20._burn",
      "offset": [
        9324,
        9342
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4790": {
      "fn": "ERC20._burn",
      "offset": [
        9324,
        9342
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4791": {
      "fn": "ERC20._burn",
      "offset": [
        9324,
        9342
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4792": {
      "fn": "ERC20._burn",
      "offset": [
        9345,
        9368
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4793": {
      "fn": "ERC20._burn",
      "offset": [
        9345,
        9368
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4794": {
      "fn": "ERC20._burn",
      "offset": [
        9345,
        9368
      ],
      "op": "SUB",
      "path": "0"
    },
    "4795": {
      "fn": "ERC20._burn",
      "offset": [
        9324,
        9368
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4796": {
      "fn": "ERC20._burn",
      "offset": [
        9324,
        9368
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "4797": {
      "fn": "ERC20._burn",
      "offset": [
        9388,
        9400
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 61,
      "value": "0x2"
    },
    "4799": {
      "fn": "ERC20._burn",
      "offset": [
        9388,
        9410
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4800": {
      "fn": "ERC20._burn",
      "offset": [
        9388,
        9410
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4801": {
      "fn": "ERC20._burn",
      "offset": [
        9362,
        9368
      ],
      "op": "DUP5",
      "path": "0"
    },
    "4802": {
      "fn": "ERC20._burn",
      "offset": [
        9362,
        9368
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "4803": {
      "fn": "ERC20._burn",
      "offset": [
        9324,
        9333
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4804": {
      "fn": "ERC20._burn",
      "offset": [
        9388,
        9410
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12CE"
    },
    "4807": {
      "fn": "ERC20._burn",
      "offset": [
        9388,
        9410
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4808": {
      "fn": "ERC20._burn",
      "offset": [
        9362,
        9368
      ],
      "op": "DUP5",
      "path": "0"
    },
    "4809": {
      "fn": "ERC20._burn",
      "offset": [
        9362,
        9368
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4810": {
      "fn": "ERC20._burn",
      "offset": [
        9388,
        9410
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A32"
    },
    "4813": {
      "fn": "ERC20._burn",
      "jump": "i",
      "offset": [
        9388,
        9410
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4814": {
      "fn": "ERC20._burn",
      "offset": [
        9388,
        9410
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4815": {
      "fn": "ERC20._burn",
      "offset": [
        9388,
        9410
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4816": {
      "fn": "ERC20._burn",
      "offset": [
        9388,
        9410
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4817": {
      "fn": "ERC20._burn",
      "offset": [
        9388,
        9410
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "4818": {
      "op": "POP"
    },
    "4819": {
      "op": "POP"
    },
    "4820": {
      "fn": "ERC20._burn",
      "offset": [
        9426,
        9463
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 62,
      "value": "0x40"
    },
    "4822": {
      "fn": "ERC20._burn",
      "offset": [
        9426,
        9463
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4823": {
      "op": "DUP3"
    },
    "4824": {
      "op": "DUP2"
    },
    "4825": {
      "op": "MSTORE"
    },
    "4826": {
      "fn": "ERC20._burn",
      "offset": [
        9452,
        9453
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4828": {
      "fn": "ERC20._burn",
      "offset": [
        9452,
        9453
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4829": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4831": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4833": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4835": {
      "op": "SHL"
    },
    "4836": {
      "op": "SUB"
    },
    "4837": {
      "fn": "ERC20._burn",
      "offset": [
        9426,
        9463
      ],
      "op": "DUP6",
      "path": "0"
    },
    "4838": {
      "fn": "ERC20._burn",
      "offset": [
        9426,
        9463
      ],
      "op": "AND",
      "path": "0"
    },
    "4839": {
      "fn": "ERC20._burn",
      "offset": [
        9426,
        9463
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4840": {
      "fn": "ERC20._burn",
      "offset": [
        9426,
        9463
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "4873": {
      "fn": "ERC20._burn",
      "offset": [
        9426,
        9463
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4874": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4876": {
      "op": "ADD"
    },
    "4877": {
      "fn": "ERC20._burn",
      "offset": [
        9426,
        9463
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4879": {
      "fn": "ERC20._burn",
      "offset": [
        9426,
        9463
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4880": {
      "fn": "ERC20._burn",
      "offset": [
        9426,
        9463
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4881": {
      "fn": "ERC20._burn",
      "offset": [
        9426,
        9463
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4882": {
      "fn": "ERC20._burn",
      "offset": [
        9426,
        9463
      ],
      "op": "SUB",
      "path": "0"
    },
    "4883": {
      "fn": "ERC20._burn",
      "offset": [
        9426,
        9463
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4884": {
      "fn": "ERC20._burn",
      "offset": [
        9426,
        9463
      ],
      "op": "LOG3",
      "path": "0"
    },
    "4885": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        2137,
        2493
      ],
      "op": "POP",
      "path": "4"
    },
    "4886": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        2137,
        2493
      ],
      "op": "POP",
      "path": "4"
    },
    "4887": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        2092,
        2493
      ],
      "op": "POP",
      "path": "4"
    },
    "4888": {
      "fn": "SmartNodes.lockTokens",
      "jump": "o",
      "offset": [
        2092,
        2493
      ],
      "op": "JUMP",
      "path": "4"
    },
    "4889": {
      "fn": "ERC20._mint",
      "offset": [
        8244,
        8633
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4890": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4892": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4894": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4896": {
      "op": "SHL"
    },
    "4897": {
      "op": "SUB"
    },
    "4898": {
      "fn": "ERC20._mint",
      "offset": [
        8327,
        8348
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 63
    },
    "4899": {
      "branch": 89,
      "fn": "ERC20._mint",
      "offset": [
        8327,
        8348
      ],
      "op": "AND",
      "path": "0"
    },
    "4900": {
      "fn": "ERC20._mint",
      "offset": [
        8319,
        8384
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x136F"
    },
    "4903": {
      "branch": 89,
      "fn": "ERC20._mint",
      "offset": [
        8319,
        8384
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4904": {
      "fn": "ERC20._mint",
      "offset": [
        8319,
        8384
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4906": {
      "fn": "ERC20._mint",
      "offset": [
        8319,
        8384
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4907": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4911": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4913": {
      "op": "SHL"
    },
    "4914": {
      "fn": "ERC20._mint",
      "offset": [
        8319,
        8384
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4915": {
      "fn": "ERC20._mint",
      "offset": [
        8319,
        8384
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4916": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4918": {
      "fn": "ERC20._mint",
      "offset": [
        8319,
        8384
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4920": {
      "fn": "ERC20._mint",
      "offset": [
        8319,
        8384
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4921": {
      "fn": "ERC20._mint",
      "offset": [
        8319,
        8384
      ],
      "op": "ADD",
      "path": "0"
    },
    "4922": {
      "op": "MSTORE"
    },
    "4923": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4925": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4927": {
      "op": "DUP3"
    },
    "4928": {
      "op": "ADD"
    },
    "4929": {
      "op": "MSTORE"
    },
    "4930": {
      "op": "PUSH32",
      "value": "0x45524332303A206D696E7420746F20746865207A65726F206164647265737300"
    },
    "4963": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4965": {
      "op": "DUP3"
    },
    "4966": {
      "op": "ADD"
    },
    "4967": {
      "op": "MSTORE"
    },
    "4968": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4970": {
      "op": "ADD"
    },
    "4971": {
      "fn": "ERC20._mint",
      "offset": [
        8319,
        8384
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5A4"
    },
    "4974": {
      "op": "JUMP"
    },
    "4975": {
      "fn": "ERC20._mint",
      "offset": [
        8319,
        8384
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4976": {
      "fn": "ERC20._mint",
      "offset": [
        8471,
        8477
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 64
    },
    "4977": {
      "fn": "ERC20._mint",
      "offset": [
        8455,
        8467
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "4979": {
      "fn": "ERC20._mint",
      "offset": [
        8455,
        8467
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4981": {
      "fn": "ERC20._mint",
      "offset": [
        8455,
        8477
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4982": {
      "fn": "ERC20._mint",
      "offset": [
        8455,
        8477
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4983": {
      "fn": "ERC20._mint",
      "offset": [
        8455,
        8477
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4984": {
      "fn": "ERC20._mint",
      "offset": [
        8455,
        8477
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1381"
    },
    "4987": {
      "fn": "ERC20._mint",
      "offset": [
        8455,
        8477
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4988": {
      "fn": "ERC20._mint",
      "offset": [
        8455,
        8477
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4989": {
      "fn": "ERC20._mint",
      "offset": [
        8455,
        8477
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x188A"
    },
    "4992": {
      "fn": "ERC20._mint",
      "jump": "i",
      "offset": [
        8455,
        8477
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4993": {
      "fn": "ERC20._mint",
      "offset": [
        8455,
        8477
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4994": {
      "fn": "ERC20._mint",
      "offset": [
        8455,
        8477
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4995": {
      "fn": "ERC20._mint",
      "offset": [
        8455,
        8477
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4996": {
      "fn": "ERC20._mint",
      "offset": [
        8455,
        8477
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "4997": {
      "op": "POP"
    },
    "4998": {
      "op": "POP"
    },
    "4999": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5001": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5003": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5005": {
      "op": "SHL"
    },
    "5006": {
      "op": "SUB"
    },
    "5007": {
      "fn": "ERC20._mint",
      "offset": [
        8487,
        8505
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 65
    },
    "5008": {
      "fn": "ERC20._mint",
      "offset": [
        8487,
        8505
      ],
      "op": "AND",
      "path": "0"
    },
    "5009": {
      "fn": "ERC20._mint",
      "offset": [
        8487,
        8496
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5011": {
      "fn": "ERC20._mint",
      "offset": [
        8487,
        8505
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5012": {
      "fn": "ERC20._mint",
      "offset": [
        8487,
        8505
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5013": {
      "fn": "ERC20._mint",
      "offset": [
        8487,
        8505
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5014": {
      "fn": "ERC20._mint",
      "offset": [
        8487,
        8505
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "5016": {
      "fn": "ERC20._mint",
      "offset": [
        8487,
        8505
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5017": {
      "fn": "ERC20._mint",
      "offset": [
        8487,
        8505
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5018": {
      "fn": "ERC20._mint",
      "offset": [
        8487,
        8505
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5019": {
      "fn": "ERC20._mint",
      "offset": [
        8487,
        8505
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5021": {
      "fn": "ERC20._mint",
      "offset": [
        8487,
        8505
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5022": {
      "fn": "ERC20._mint",
      "offset": [
        8487,
        8505
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "5023": {
      "fn": "ERC20._mint",
      "offset": [
        8487,
        8515
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5024": {
      "fn": "ERC20._mint",
      "offset": [
        8487,
        8515
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5025": {
      "fn": "ERC20._mint",
      "offset": [
        8509,
        8515
      ],
      "op": "DUP4",
      "path": "0"
    },
    "5026": {
      "fn": "ERC20._mint",
      "offset": [
        8509,
        8515
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "5027": {
      "fn": "ERC20._mint",
      "offset": [
        8487,
        8496
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5028": {
      "fn": "ERC20._mint",
      "offset": [
        8487,
        8515
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13AE"
    },
    "5031": {
      "fn": "ERC20._mint",
      "offset": [
        8487,
        8515
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5032": {
      "fn": "ERC20._mint",
      "offset": [
        8509,
        8515
      ],
      "op": "DUP5",
      "path": "0"
    },
    "5033": {
      "fn": "ERC20._mint",
      "offset": [
        8509,
        8515
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5034": {
      "fn": "ERC20._mint",
      "offset": [
        8487,
        8515
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x188A"
    },
    "5037": {
      "fn": "ERC20._mint",
      "jump": "i",
      "offset": [
        8487,
        8515
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5038": {
      "fn": "ERC20._mint",
      "offset": [
        8487,
        8515
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5039": {
      "fn": "ERC20._mint",
      "offset": [
        8487,
        8515
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5040": {
      "fn": "ERC20._mint",
      "offset": [
        8487,
        8515
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5041": {
      "fn": "ERC20._mint",
      "offset": [
        8487,
        8515
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "5042": {
      "op": "POP"
    },
    "5043": {
      "op": "POP"
    },
    "5044": {
      "fn": "ERC20._mint",
      "offset": [
        8530,
        8567
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 66,
      "value": "0x40"
    },
    "5046": {
      "fn": "ERC20._mint",
      "offset": [
        8530,
        8567
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5047": {
      "op": "DUP2"
    },
    "5048": {
      "op": "DUP2"
    },
    "5049": {
      "op": "MSTORE"
    },
    "5050": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5052": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5054": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5056": {
      "op": "SHL"
    },
    "5057": {
      "op": "SUB"
    },
    "5058": {
      "fn": "ERC20._mint",
      "offset": [
        8530,
        8567
      ],
      "op": "DUP4",
      "path": "0"
    },
    "5059": {
      "fn": "ERC20._mint",
      "offset": [
        8530,
        8567
      ],
      "op": "AND",
      "path": "0"
    },
    "5060": {
      "fn": "ERC20._mint",
      "offset": [
        8530,
        8567
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5061": {
      "fn": "ERC20._mint",
      "offset": [
        8547,
        8548
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5063": {
      "fn": "ERC20._mint",
      "offset": [
        8547,
        8548
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5064": {
      "fn": "ERC20._mint",
      "offset": [
        8530,
        8567
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "5097": {
      "fn": "ERC20._mint",
      "offset": [
        8530,
        8567
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5098": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5100": {
      "op": "ADD"
    },
    "5101": {
      "fn": "ERC20._mint",
      "offset": [
        8530,
        8567
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5103": {
      "fn": "ERC20._mint",
      "offset": [
        8530,
        8567
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5104": {
      "fn": "ERC20._mint",
      "offset": [
        8530,
        8567
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5105": {
      "fn": "ERC20._mint",
      "offset": [
        8530,
        8567
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5106": {
      "fn": "ERC20._mint",
      "offset": [
        8530,
        8567
      ],
      "op": "SUB",
      "path": "0"
    },
    "5107": {
      "fn": "ERC20._mint",
      "offset": [
        8530,
        8567
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5108": {
      "fn": "ERC20._mint",
      "offset": [
        8530,
        8567
      ],
      "op": "LOG3",
      "path": "0"
    },
    "5109": {
      "fn": "ERC20._mint",
      "offset": [
        8244,
        8633
      ],
      "op": "POP",
      "path": "0"
    },
    "5110": {
      "fn": "ERC20._mint",
      "offset": [
        8244,
        8633
      ],
      "op": "POP",
      "path": "0"
    },
    "5111": {
      "fn": "ERC20._mint",
      "jump": "o",
      "offset": [
        8244,
        8633
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5112": {
      "fn": "SmartNodes.countSignatures",
      "offset": [
        4932,
        5296
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "5113": {
      "fn": "SmartNodes.countSignatures",
      "offset": [
        5040,
        5047
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "5115": {
      "fn": "SmartNodes.countSignatures",
      "offset": [
        5040,
        5047
      ],
      "op": "DUP1",
      "path": "4"
    },
    "5116": {
      "fn": "SmartNodes.countSignatures",
      "offset": [
        5040,
        5047
      ],
      "op": "DUP1",
      "path": "4"
    },
    "5117": {
      "fn": "SmartNodes.countSignatures",
      "offset": [
        5090,
        5267
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "5118": {
      "fn": "SmartNodes.countSignatures",
      "offset": [
        5114,
        5137
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x3"
    },
    "5120": {
      "fn": "SmartNodes.countSignatures",
      "offset": [
        5114,
        5137
      ],
      "op": "DUP5",
      "path": "4"
    },
    "5121": {
      "fn": "SmartNodes.countSignatures",
      "offset": [
        5114,
        5137
      ],
      "op": "ADD",
      "path": "4"
    },
    "5122": {
      "fn": "SmartNodes.countSignatures",
      "offset": [
        5114,
        5144
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "5123": {
      "fn": "SmartNodes.countSignatures",
      "offset": [
        5110,
        5144
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5124": {
      "fn": "SmartNodes.countSignatures",
      "offset": [
        5110,
        5144
      ],
      "op": "LT",
      "path": "4"
    },
    "5125": {
      "fn": "SmartNodes.countSignatures",
      "offset": [
        5090,
        5267
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "5126": {
      "fn": "SmartNodes.countSignatures",
      "offset": [
        5090,
        5267
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1467"
    },
    "5129": {
      "fn": "SmartNodes.countSignatures",
      "offset": [
        5090,
        5267
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "5130": {
      "fn": "SmartNodes.countSignatures",
      "offset": [
        5169,
        5176
      ],
      "op": "DUP4",
      "path": "4"
    },
    "5131": {
      "fn": "SmartNodes.countSignatures",
      "offset": [
        5169,
        5187
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "5133": {
      "fn": "SmartNodes.countSignatures",
      "offset": [
        5169,
        5187
      ],
      "op": "ADD",
      "path": "4"
    },
    "5134": {
      "fn": "SmartNodes.countSignatures",
      "offset": [
        5169,
        5215
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "5136": {
      "fn": "SmartNodes.countSignatures",
      "offset": [
        5188,
        5195
      ],
      "op": "DUP6",
      "path": "4"
    },
    "5137": {
      "fn": "SmartNodes.countSignatures",
      "offset": [
        5188,
        5211
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x3"
    },
    "5139": {
      "fn": "SmartNodes.countSignatures",
      "offset": [
        5188,
        5211
      ],
      "op": "ADD",
      "path": "4"
    },
    "5140": {
      "fn": "SmartNodes.countSignatures",
      "offset": [
        5212,
        5213
      ],
      "op": "DUP4",
      "path": "4"
    },
    "5141": {
      "fn": "SmartNodes.countSignatures",
      "offset": [
        5188,
        5214
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5142": {
      "fn": "SmartNodes.countSignatures",
      "offset": [
        5188,
        5214
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "5143": {
      "fn": "SmartNodes.countSignatures",
      "offset": [
        5188,
        5214
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5144": {
      "fn": "SmartNodes.countSignatures",
      "offset": [
        5188,
        5214
      ],
      "op": "LT",
      "path": "4"
    },
    "5145": {
      "fn": "SmartNodes.countSignatures",
      "offset": [
        5188,
        5214
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1424"
    },
    "5148": {
      "fn": "SmartNodes.countSignatures",
      "offset": [
        5188,
        5214
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "5149": {
      "fn": "SmartNodes.countSignatures",
      "offset": [
        5188,
        5214
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1424"
    },
    "5152": {
      "fn": "SmartNodes.countSignatures",
      "offset": [
        5188,
        5214
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x18D3"
    },
    "5155": {
      "fn": "SmartNodes.countSignatures",
      "jump": "i",
      "offset": [
        5188,
        5214
      ],
      "op": "JUMP",
      "path": "4"
    },
    "5156": {
      "fn": "SmartNodes.countSignatures",
      "offset": [
        5188,
        5214
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "5157": {
      "fn": "SmartNodes.countSignatures",
      "offset": [
        5188,
        5214
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "5159": {
      "fn": "SmartNodes.countSignatures",
      "offset": [
        5188,
        5214
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "5160": {
      "fn": "SmartNodes.countSignatures",
      "offset": [
        5188,
        5214
      ],
      "op": "DUP3",
      "path": "4"
    },
    "5161": {
      "fn": "SmartNodes.countSignatures",
      "offset": [
        5188,
        5214
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5162": {
      "fn": "SmartNodes.countSignatures",
      "offset": [
        5188,
        5214
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "5164": {
      "fn": "SmartNodes.countSignatures",
      "offset": [
        5188,
        5214
      ],
      "op": "DUP1",
      "path": "4"
    },
    "5165": {
      "fn": "SmartNodes.countSignatures",
      "offset": [
        5188,
        5214
      ],
      "op": "DUP4",
      "path": "4"
    },
    "5166": {
      "fn": "SmartNodes.countSignatures",
      "offset": [
        5188,
        5214
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "5167": {
      "fn": "SmartNodes.countSignatures",
      "offset": [
        5188,
        5214
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5168": {
      "fn": "SmartNodes.countSignatures",
      "offset": [
        5188,
        5214
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "5169": {
      "fn": "SmartNodes.countSignatures",
      "offset": [
        5188,
        5214
      ],
      "op": "ADD",
      "path": "4"
    },
    "5170": {
      "fn": "SmartNodes.countSignatures",
      "offset": [
        5188,
        5214
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "5171": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5173": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5175": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5177": {
      "op": "SHL"
    },
    "5178": {
      "op": "SUB"
    },
    "5179": {
      "fn": "SmartNodes.countSignatures",
      "offset": [
        5188,
        5214
      ],
      "op": "AND",
      "path": "4"
    },
    "5180": {
      "fn": "SmartNodes.countSignatures",
      "offset": [
        5169,
        5215
      ],
      "op": "DUP4",
      "path": "4"
    },
    "5181": {
      "fn": "SmartNodes.countSignatures",
      "offset": [
        5169,
        5215
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5182": {
      "fn": "SmartNodes.countSignatures",
      "offset": [
        5169,
        5215
      ],
      "op": "DUP3",
      "path": "4"
    },
    "5183": {
      "fn": "SmartNodes.countSignatures",
      "offset": [
        5169,
        5215
      ],
      "op": "ADD",
      "path": "4"
    },
    "5184": {
      "fn": "SmartNodes.countSignatures",
      "offset": [
        5169,
        5215
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "5185": {
      "fn": "SmartNodes.countSignatures",
      "offset": [
        5169,
        5215
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5186": {
      "fn": "SmartNodes.countSignatures",
      "offset": [
        5169,
        5215
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "5187": {
      "fn": "SmartNodes.countSignatures",
      "offset": [
        5169,
        5215
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5188": {
      "fn": "SmartNodes.countSignatures",
      "offset": [
        5169,
        5215
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "5190": {
      "fn": "SmartNodes.countSignatures",
      "offset": [
        5169,
        5215
      ],
      "op": "ADD",
      "path": "4"
    },
    "5191": {
      "fn": "SmartNodes.countSignatures",
      "offset": [
        5169,
        5215
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5192": {
      "fn": "SmartNodes.countSignatures",
      "offset": [
        5169,
        5215
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "5193": {
      "fn": "SmartNodes.countSignatures",
      "offset": [
        5169,
        5215
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "5194": {
      "fn": "SmartNodes.countSignatures",
      "offset": [
        5169,
        5215
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xFF"
    },
    "5196": {
      "branch": 79,
      "fn": "SmartNodes.countSignatures",
      "offset": [
        5169,
        5215
      ],
      "op": "AND",
      "path": "4"
    },
    "5197": {
      "fn": "SmartNodes.countSignatures",
      "offset": [
        5165,
        5257
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "5198": {
      "fn": "SmartNodes.countSignatures",
      "offset": [
        5165,
        5257
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x145F"
    },
    "5201": {
      "branch": 79,
      "fn": "SmartNodes.countSignatures",
      "offset": [
        5165,
        5257
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "5202": {
      "fn": "SmartNodes.countSignatures",
      "offset": [
        5235,
        5242
      ],
      "op": "DUP2",
      "path": "4",
      "statement": 67
    },
    "5203": {
      "fn": "SmartNodes.countSignatures",
      "offset": [
        5235,
        5242
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x145B"
    },
    "5206": {
      "fn": "SmartNodes.countSignatures",
      "offset": [
        5235,
        5242
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5207": {
      "fn": "SmartNodes.countSignatures",
      "offset": [
        5235,
        5242
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x18BA"
    },
    "5210": {
      "fn": "SmartNodes.countSignatures",
      "jump": "i",
      "offset": [
        5235,
        5242
      ],
      "op": "JUMP",
      "path": "4"
    },
    "5211": {
      "fn": "SmartNodes.countSignatures",
      "offset": [
        5235,
        5242
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "5212": {
      "fn": "SmartNodes.countSignatures",
      "offset": [
        5235,
        5242
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "5213": {
      "fn": "SmartNodes.countSignatures",
      "offset": [
        5235,
        5242
      ],
      "op": "POP",
      "path": "4"
    },
    "5214": {
      "fn": "SmartNodes.countSignatures",
      "offset": [
        5235,
        5242
      ],
      "op": "POP",
      "path": "4"
    },
    "5215": {
      "fn": "SmartNodes.countSignatures",
      "offset": [
        5165,
        5257
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "5216": {
      "fn": "SmartNodes.countSignatures",
      "offset": [
        5146,
        5149
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 68,
      "value": "0x1"
    },
    "5218": {
      "fn": "SmartNodes.countSignatures",
      "offset": [
        5146,
        5149
      ],
      "op": "ADD",
      "path": "4"
    },
    "5219": {
      "fn": "SmartNodes.countSignatures",
      "offset": [
        5090,
        5267
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x13FD"
    },
    "5222": {
      "fn": "SmartNodes.countSignatures",
      "offset": [
        5090,
        5267
      ],
      "op": "JUMP",
      "path": "4"
    },
    "5223": {
      "fn": "SmartNodes.countSignatures",
      "offset": [
        5090,
        5267
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "5224": {
      "op": "POP"
    },
    "5225": {
      "fn": "SmartNodes.countSignatures",
      "offset": [
        5284,
        5289
      ],
      "op": "SWAP3",
      "path": "4",
      "statement": 69
    },
    "5226": {
      "fn": "SmartNodes.countSignatures",
      "offset": [
        4932,
        5296
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "5227": {
      "op": "POP"
    },
    "5228": {
      "op": "POP"
    },
    "5229": {
      "fn": "SmartNodes.countSignatures",
      "jump": "o",
      "offset": [
        4932,
        5296
      ],
      "op": "JUMP",
      "path": "4"
    },
    "5230": {
      "op": "JUMPDEST"
    },
    "5231": {
      "op": "DUP3"
    },
    "5232": {
      "op": "DUP1"
    },
    "5233": {
      "op": "SLOAD"
    },
    "5234": {
      "op": "DUP3"
    },
    "5235": {
      "op": "DUP3"
    },
    "5236": {
      "op": "SSTORE"
    },
    "5237": {
      "op": "SWAP1"
    },
    "5238": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5240": {
      "op": "MSTORE"
    },
    "5241": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5243": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5245": {
      "op": "KECCAK256"
    },
    "5246": {
      "op": "SWAP1"
    },
    "5247": {
      "op": "DUP2"
    },
    "5248": {
      "op": "ADD"
    },
    "5249": {
      "op": "SWAP3"
    },
    "5250": {
      "op": "DUP3"
    },
    "5251": {
      "op": "ISZERO"
    },
    "5252": {
      "op": "PUSH2",
      "value": "0x14C3"
    },
    "5255": {
      "op": "JUMPI"
    },
    "5256": {
      "op": "SWAP2"
    },
    "5257": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5259": {
      "op": "MUL"
    },
    "5260": {
      "op": "DUP3"
    },
    "5261": {
      "op": "ADD"
    },
    "5262": {
      "op": "JUMPDEST"
    },
    "5263": {
      "op": "DUP3"
    },
    "5264": {
      "op": "DUP2"
    },
    "5265": {
      "op": "GT"
    },
    "5266": {
      "op": "ISZERO"
    },
    "5267": {
      "op": "PUSH2",
      "value": "0x14C3"
    },
    "5270": {
      "op": "JUMPI"
    },
    "5271": {
      "op": "DUP3"
    },
    "5272": {
      "op": "MLOAD"
    },
    "5273": {
      "op": "DUP3"
    },
    "5274": {
      "op": "SLOAD"
    },
    "5275": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5277": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5279": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5281": {
      "op": "SHL"
    },
    "5282": {
      "op": "SUB"
    },
    "5283": {
      "op": "NOT"
    },
    "5284": {
      "op": "AND"
    },
    "5285": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5287": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5289": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5291": {
      "op": "SHL"
    },
    "5292": {
      "op": "SUB"
    },
    "5293": {
      "op": "SWAP1"
    },
    "5294": {
      "op": "SWAP2"
    },
    "5295": {
      "op": "AND"
    },
    "5296": {
      "op": "OR"
    },
    "5297": {
      "op": "DUP3"
    },
    "5298": {
      "op": "SSTORE"
    },
    "5299": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5301": {
      "op": "SWAP1"
    },
    "5302": {
      "op": "SWAP3"
    },
    "5303": {
      "op": "ADD"
    },
    "5304": {
      "op": "SWAP2"
    },
    "5305": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5307": {
      "op": "SWAP1"
    },
    "5308": {
      "op": "SWAP2"
    },
    "5309": {
      "op": "ADD"
    },
    "5310": {
      "op": "SWAP1"
    },
    "5311": {
      "op": "PUSH2",
      "value": "0x148E"
    },
    "5314": {
      "op": "JUMP"
    },
    "5315": {
      "op": "JUMPDEST"
    },
    "5316": {
      "op": "POP"
    },
    "5317": {
      "op": "PUSH2",
      "value": "0x14CF"
    },
    "5320": {
      "op": "SWAP3"
    },
    "5321": {
      "op": "SWAP2"
    },
    "5322": {
      "op": "POP"
    },
    "5323": {
      "op": "PUSH2",
      "value": "0x14F4"
    },
    "5326": {
      "jump": "i",
      "op": "JUMP"
    },
    "5327": {
      "op": "JUMPDEST"
    },
    "5328": {
      "op": "POP"
    },
    "5329": {
      "op": "SWAP1"
    },
    "5330": {
      "jump": "o",
      "op": "JUMP"
    },
    "5331": {
      "op": "JUMPDEST"
    },
    "5332": {
      "op": "POP"
    },
    "5333": {
      "op": "DUP1"
    },
    "5334": {
      "op": "SLOAD"
    },
    "5335": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5337": {
      "op": "DUP3"
    },
    "5338": {
      "op": "SSTORE"
    },
    "5339": {
      "op": "SWAP1"
    },
    "5340": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5342": {
      "op": "MSTORE"
    },
    "5343": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5345": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5347": {
      "op": "KECCAK256"
    },
    "5348": {
      "op": "SWAP1"
    },
    "5349": {
      "op": "DUP2"
    },
    "5350": {
      "op": "ADD"
    },
    "5351": {
      "op": "SWAP1"
    },
    "5352": {
      "op": "PUSH2",
      "value": "0x14F1"
    },
    "5355": {
      "op": "SWAP2"
    },
    "5356": {
      "op": "SWAP1"
    },
    "5357": {
      "op": "PUSH2",
      "value": "0x14F4"
    },
    "5360": {
      "jump": "i",
      "op": "JUMP"
    },
    "5361": {
      "op": "JUMPDEST"
    },
    "5362": {
      "op": "POP"
    },
    "5363": {
      "jump": "o",
      "op": "JUMP"
    },
    "5364": {
      "op": "JUMPDEST"
    },
    "5365": {
      "op": "JUMPDEST"
    },
    "5366": {
      "op": "DUP1"
    },
    "5367": {
      "op": "DUP3"
    },
    "5368": {
      "op": "GT"
    },
    "5369": {
      "op": "ISZERO"
    },
    "5370": {
      "op": "PUSH2",
      "value": "0x14CF"
    },
    "5373": {
      "op": "JUMPI"
    },
    "5374": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5376": {
      "op": "DUP2"
    },
    "5377": {
      "op": "SSTORE"
    },
    "5378": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5380": {
      "op": "ADD"
    },
    "5381": {
      "op": "PUSH2",
      "value": "0x14F5"
    },
    "5384": {
      "op": "JUMP"
    },
    "5385": {
      "op": "JUMPDEST"
    },
    "5386": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5388": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5390": {
      "op": "DUP3"
    },
    "5391": {
      "op": "DUP5"
    },
    "5392": {
      "op": "SUB"
    },
    "5393": {
      "op": "SLT"
    },
    "5394": {
      "op": "ISZERO"
    },
    "5395": {
      "op": "PUSH2",
      "value": "0x151B"
    },
    "5398": {
      "op": "JUMPI"
    },
    "5399": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5401": {
      "op": "DUP1"
    },
    "5402": {
      "op": "REVERT"
    },
    "5403": {
      "op": "JUMPDEST"
    },
    "5404": {
      "op": "POP"
    },
    "5405": {
      "op": "CALLDATALOAD"
    },
    "5406": {
      "op": "SWAP2"
    },
    "5407": {
      "op": "SWAP1"
    },
    "5408": {
      "op": "POP"
    },
    "5409": {
      "jump": "o",
      "op": "JUMP"
    },
    "5410": {
      "op": "JUMPDEST"
    },
    "5411": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5413": {
      "op": "JUMPDEST"
    },
    "5414": {
      "op": "DUP4"
    },
    "5415": {
      "op": "DUP2"
    },
    "5416": {
      "op": "LT"
    },
    "5417": {
      "op": "ISZERO"
    },
    "5418": {
      "op": "PUSH2",
      "value": "0x153D"
    },
    "5421": {
      "op": "JUMPI"
    },
    "5422": {
      "op": "DUP2"
    },
    "5423": {
      "op": "DUP2"
    },
    "5424": {
      "op": "ADD"
    },
    "5425": {
      "op": "MLOAD"
    },
    "5426": {
      "op": "DUP4"
    },
    "5427": {
      "op": "DUP3"
    },
    "5428": {
      "op": "ADD"
    },
    "5429": {
      "op": "MSTORE"
    },
    "5430": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5432": {
      "op": "ADD"
    },
    "5433": {
      "op": "PUSH2",
      "value": "0x1525"
    },
    "5436": {
      "op": "JUMP"
    },
    "5437": {
      "op": "JUMPDEST"
    },
    "5438": {
      "op": "POP"
    },
    "5439": {
      "op": "POP"
    },
    "5440": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5442": {
      "op": "SWAP2"
    },
    "5443": {
      "op": "ADD"
    },
    "5444": {
      "op": "MSTORE"
    },
    "5445": {
      "jump": "o",
      "op": "JUMP"
    },
    "5446": {
      "op": "JUMPDEST"
    },
    "5447": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5449": {
      "op": "DUP2"
    },
    "5450": {
      "op": "MLOAD"
    },
    "5451": {
      "op": "DUP1"
    },
    "5452": {
      "op": "DUP5"
    },
    "5453": {
      "op": "MSTORE"
    },
    "5454": {
      "op": "PUSH2",
      "value": "0x155E"
    },
    "5457": {
      "op": "DUP2"
    },
    "5458": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5460": {
      "op": "DUP7"
    },
    "5461": {
      "op": "ADD"
    },
    "5462": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5464": {
      "op": "DUP7"
    },
    "5465": {
      "op": "ADD"
    },
    "5466": {
      "op": "PUSH2",
      "value": "0x1522"
    },
    "5469": {
      "jump": "i",
      "op": "JUMP"
    },
    "5470": {
      "op": "JUMPDEST"
    },
    "5471": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5473": {
      "op": "ADD"
    },
    "5474": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5476": {
      "op": "NOT"
    },
    "5477": {
      "op": "AND"
    },
    "5478": {
      "op": "SWAP3"
    },
    "5479": {
      "op": "SWAP1"
    },
    "5480": {
      "op": "SWAP3"
    },
    "5481": {
      "op": "ADD"
    },
    "5482": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5484": {
      "op": "ADD"
    },
    "5485": {
      "op": "SWAP3"
    },
    "5486": {
      "op": "SWAP2"
    },
    "5487": {
      "op": "POP"
    },
    "5488": {
      "op": "POP"
    },
    "5489": {
      "jump": "o",
      "op": "JUMP"
    },
    "5490": {
      "op": "JUMPDEST"
    },
    "5491": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5493": {
      "op": "DUP2"
    },
    "5494": {
      "op": "MSTORE"
    },
    "5495": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5497": {
      "op": "PUSH2",
      "value": "0x1585"
    },
    "5500": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5502": {
      "op": "DUP4"
    },
    "5503": {
      "op": "ADD"
    },
    "5504": {
      "op": "DUP5"
    },
    "5505": {
      "op": "PUSH2",
      "value": "0x1546"
    },
    "5508": {
      "jump": "i",
      "op": "JUMP"
    },
    "5509": {
      "op": "JUMPDEST"
    },
    "5510": {
      "op": "SWAP4"
    },
    "5511": {
      "op": "SWAP3"
    },
    "5512": {
      "op": "POP"
    },
    "5513": {
      "op": "POP"
    },
    "5514": {
      "op": "POP"
    },
    "5515": {
      "jump": "o",
      "op": "JUMP"
    },
    "5516": {
      "op": "JUMPDEST"
    },
    "5517": {
      "op": "DUP1"
    },
    "5518": {
      "op": "CALLDATALOAD"
    },
    "5519": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5521": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5523": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5525": {
      "op": "SHL"
    },
    "5526": {
      "op": "SUB"
    },
    "5527": {
      "op": "DUP2"
    },
    "5528": {
      "op": "AND"
    },
    "5529": {
      "op": "DUP2"
    },
    "5530": {
      "op": "EQ"
    },
    "5531": {
      "op": "PUSH2",
      "value": "0x15A3"
    },
    "5534": {
      "op": "JUMPI"
    },
    "5535": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5537": {
      "op": "DUP1"
    },
    "5538": {
      "op": "REVERT"
    },
    "5539": {
      "op": "JUMPDEST"
    },
    "5540": {
      "op": "SWAP2"
    },
    "5541": {
      "op": "SWAP1"
    },
    "5542": {
      "op": "POP"
    },
    "5543": {
      "jump": "o",
      "op": "JUMP"
    },
    "5544": {
      "op": "JUMPDEST"
    },
    "5545": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5547": {
      "op": "DUP1"
    },
    "5548": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5550": {
      "op": "DUP4"
    },
    "5551": {
      "op": "DUP6"
    },
    "5552": {
      "op": "SUB"
    },
    "5553": {
      "op": "SLT"
    },
    "5554": {
      "op": "ISZERO"
    },
    "5555": {
      "op": "PUSH2",
      "value": "0x15BB"
    },
    "5558": {
      "op": "JUMPI"
    },
    "5559": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5561": {
      "op": "DUP1"
    },
    "5562": {
      "op": "REVERT"
    },
    "5563": {
      "op": "JUMPDEST"
    },
    "5564": {
      "op": "PUSH2",
      "value": "0x15C4"
    },
    "5567": {
      "op": "DUP4"
    },
    "5568": {
      "op": "PUSH2",
      "value": "0x158C"
    },
    "5571": {
      "jump": "i",
      "op": "JUMP"
    },
    "5572": {
      "op": "JUMPDEST"
    },
    "5573": {
      "op": "SWAP5"
    },
    "5574": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5576": {
      "op": "SWAP4"
    },
    "5577": {
      "op": "SWAP1"
    },
    "5578": {
      "op": "SWAP4"
    },
    "5579": {
      "op": "ADD"
    },
    "5580": {
      "op": "CALLDATALOAD"
    },
    "5581": {
      "op": "SWAP4"
    },
    "5582": {
      "op": "POP"
    },
    "5583": {
      "op": "POP"
    },
    "5584": {
      "op": "POP"
    },
    "5585": {
      "jump": "o",
      "op": "JUMP"
    },
    "5586": {
      "op": "JUMPDEST"
    },
    "5587": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5592": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5594": {
      "op": "SHL"
    },
    "5595": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5597": {
      "op": "MSTORE"
    },
    "5598": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "5600": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5602": {
      "op": "MSTORE"
    },
    "5603": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5605": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5607": {
      "op": "REVERT"
    },
    "5608": {
      "op": "JUMPDEST"
    },
    "5609": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5611": {
      "op": "MLOAD"
    },
    "5612": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5614": {
      "op": "DUP3"
    },
    "5615": {
      "op": "ADD"
    },
    "5616": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5618": {
      "op": "NOT"
    },
    "5619": {
      "op": "AND"
    },
    "5620": {
      "op": "DUP2"
    },
    "5621": {
      "op": "ADD"
    },
    "5622": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "5631": {
      "op": "DUP2"
    },
    "5632": {
      "op": "GT"
    },
    "5633": {
      "op": "DUP3"
    },
    "5634": {
      "op": "DUP3"
    },
    "5635": {
      "op": "LT"
    },
    "5636": {
      "op": "OR"
    },
    "5637": {
      "op": "ISZERO"
    },
    "5638": {
      "op": "PUSH2",
      "value": "0x1611"
    },
    "5641": {
      "op": "JUMPI"
    },
    "5642": {
      "op": "PUSH2",
      "value": "0x1611"
    },
    "5645": {
      "op": "PUSH2",
      "value": "0x15D2"
    },
    "5648": {
      "jump": "i",
      "op": "JUMP"
    },
    "5649": {
      "op": "JUMPDEST"
    },
    "5650": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5652": {
      "op": "MSTORE"
    },
    "5653": {
      "op": "SWAP2"
    },
    "5654": {
      "op": "SWAP1"
    },
    "5655": {
      "op": "POP"
    },
    "5656": {
      "jump": "o",
      "op": "JUMP"
    },
    "5657": {
      "op": "JUMPDEST"
    },
    "5658": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5660": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5662": {
      "op": "DUP1"
    },
    "5663": {
      "op": "DUP4"
    },
    "5664": {
      "op": "DUP6"
    },
    "5665": {
      "op": "SUB"
    },
    "5666": {
      "op": "SLT"
    },
    "5667": {
      "op": "ISZERO"
    },
    "5668": {
      "op": "PUSH2",
      "value": "0x162C"
    },
    "5671": {
      "op": "JUMPI"
    },
    "5672": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5674": {
      "op": "DUP1"
    },
    "5675": {
      "op": "REVERT"
    },
    "5676": {
      "op": "JUMPDEST"
    },
    "5677": {
      "op": "DUP3"
    },
    "5678": {
      "op": "CALLDATALOAD"
    },
    "5679": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "5688": {
      "op": "DUP1"
    },
    "5689": {
      "op": "DUP3"
    },
    "5690": {
      "op": "GT"
    },
    "5691": {
      "op": "ISZERO"
    },
    "5692": {
      "op": "PUSH2",
      "value": "0x1644"
    },
    "5695": {
      "op": "JUMPI"
    },
    "5696": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5698": {
      "op": "DUP1"
    },
    "5699": {
      "op": "REVERT"
    },
    "5700": {
      "op": "JUMPDEST"
    },
    "5701": {
      "op": "DUP2"
    },
    "5702": {
      "op": "DUP6"
    },
    "5703": {
      "op": "ADD"
    },
    "5704": {
      "op": "SWAP2"
    },
    "5705": {
      "op": "POP"
    },
    "5706": {
      "op": "DUP6"
    },
    "5707": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5709": {
      "op": "DUP4"
    },
    "5710": {
      "op": "ADD"
    },
    "5711": {
      "op": "SLT"
    },
    "5712": {
      "op": "PUSH2",
      "value": "0x1658"
    },
    "5715": {
      "op": "JUMPI"
    },
    "5716": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5718": {
      "op": "DUP1"
    },
    "5719": {
      "op": "REVERT"
    },
    "5720": {
      "op": "JUMPDEST"
    },
    "5721": {
      "op": "DUP2"
    },
    "5722": {
      "op": "CALLDATALOAD"
    },
    "5723": {
      "op": "DUP2"
    },
    "5724": {
      "op": "DUP2"
    },
    "5725": {
      "op": "GT"
    },
    "5726": {
      "op": "ISZERO"
    },
    "5727": {
      "op": "PUSH2",
      "value": "0x166A"
    },
    "5730": {
      "op": "JUMPI"
    },
    "5731": {
      "op": "PUSH2",
      "value": "0x166A"
    },
    "5734": {
      "op": "PUSH2",
      "value": "0x15D2"
    },
    "5737": {
      "jump": "i",
      "op": "JUMP"
    },
    "5738": {
      "op": "JUMPDEST"
    },
    "5739": {
      "op": "PUSH2",
      "value": "0x167C"
    },
    "5742": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5744": {
      "op": "DUP3"
    },
    "5745": {
      "op": "ADD"
    },
    "5746": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5748": {
      "op": "NOT"
    },
    "5749": {
      "op": "AND"
    },
    "5750": {
      "op": "DUP6"
    },
    "5751": {
      "op": "ADD"
    },
    "5752": {
      "op": "PUSH2",
      "value": "0x15E8"
    },
    "5755": {
      "jump": "i",
      "op": "JUMP"
    },
    "5756": {
      "op": "JUMPDEST"
    },
    "5757": {
      "op": "SWAP2"
    },
    "5758": {
      "op": "POP"
    },
    "5759": {
      "op": "DUP1"
    },
    "5760": {
      "op": "DUP3"
    },
    "5761": {
      "op": "MSTORE"
    },
    "5762": {
      "op": "DUP7"
    },
    "5763": {
      "op": "DUP5"
    },
    "5764": {
      "op": "DUP3"
    },
    "5765": {
      "op": "DUP6"
    },
    "5766": {
      "op": "ADD"
    },
    "5767": {
      "op": "ADD"
    },
    "5768": {
      "op": "GT"
    },
    "5769": {
      "op": "ISZERO"
    },
    "5770": {
      "op": "PUSH2",
      "value": "0x1692"
    },
    "5773": {
      "op": "JUMPI"
    },
    "5774": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5776": {
      "op": "DUP1"
    },
    "5777": {
      "op": "REVERT"
    },
    "5778": {
      "op": "JUMPDEST"
    },
    "5779": {
      "op": "DUP1"
    },
    "5780": {
      "op": "DUP5"
    },
    "5781": {
      "op": "DUP5"
    },
    "5782": {
      "op": "ADD"
    },
    "5783": {
      "op": "DUP6"
    },
    "5784": {
      "op": "DUP5"
    },
    "5785": {
      "op": "ADD"
    },
    "5786": {
      "op": "CALLDATACOPY"
    },
    "5787": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5789": {
      "op": "SWAP1"
    },
    "5790": {
      "op": "DUP3"
    },
    "5791": {
      "op": "ADD"
    },
    "5792": {
      "op": "SWAP1"
    },
    "5793": {
      "op": "SWAP4"
    },
    "5794": {
      "op": "ADD"
    },
    "5795": {
      "op": "SWAP3"
    },
    "5796": {
      "op": "SWAP1"
    },
    "5797": {
      "op": "SWAP3"
    },
    "5798": {
      "op": "MSTORE"
    },
    "5799": {
      "op": "POP"
    },
    "5800": {
      "op": "SWAP4"
    },
    "5801": {
      "op": "SWAP3"
    },
    "5802": {
      "op": "POP"
    },
    "5803": {
      "op": "POP"
    },
    "5804": {
      "op": "POP"
    },
    "5805": {
      "jump": "o",
      "op": "JUMP"
    },
    "5806": {
      "op": "JUMPDEST"
    },
    "5807": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5809": {
      "op": "DUP1"
    },
    "5810": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5812": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5814": {
      "op": "DUP5"
    },
    "5815": {
      "op": "DUP7"
    },
    "5816": {
      "op": "SUB"
    },
    "5817": {
      "op": "SLT"
    },
    "5818": {
      "op": "ISZERO"
    },
    "5819": {
      "op": "PUSH2",
      "value": "0x16C3"
    },
    "5822": {
      "op": "JUMPI"
    },
    "5823": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5825": {
      "op": "DUP1"
    },
    "5826": {
      "op": "REVERT"
    },
    "5827": {
      "op": "JUMPDEST"
    },
    "5828": {
      "op": "PUSH2",
      "value": "0x16CC"
    },
    "5831": {
      "op": "DUP5"
    },
    "5832": {
      "op": "PUSH2",
      "value": "0x158C"
    },
    "5835": {
      "jump": "i",
      "op": "JUMP"
    },
    "5836": {
      "op": "JUMPDEST"
    },
    "5837": {
      "op": "SWAP3"
    },
    "5838": {
      "op": "POP"
    },
    "5839": {
      "op": "PUSH2",
      "value": "0x16DA"
    },
    "5842": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5844": {
      "op": "DUP6"
    },
    "5845": {
      "op": "ADD"
    },
    "5846": {
      "op": "PUSH2",
      "value": "0x158C"
    },
    "5849": {
      "jump": "i",
      "op": "JUMP"
    },
    "5850": {
      "op": "JUMPDEST"
    },
    "5851": {
      "op": "SWAP2"
    },
    "5852": {
      "op": "POP"
    },
    "5853": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5855": {
      "op": "DUP5"
    },
    "5856": {
      "op": "ADD"
    },
    "5857": {
      "op": "CALLDATALOAD"
    },
    "5858": {
      "op": "SWAP1"
    },
    "5859": {
      "op": "POP"
    },
    "5860": {
      "op": "SWAP3"
    },
    "5861": {
      "op": "POP"
    },
    "5862": {
      "op": "SWAP3"
    },
    "5863": {
      "op": "POP"
    },
    "5864": {
      "op": "SWAP3"
    },
    "5865": {
      "jump": "o",
      "op": "JUMP"
    },
    "5866": {
      "op": "JUMPDEST"
    },
    "5867": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5869": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5871": {
      "op": "DUP3"
    },
    "5872": {
      "op": "DUP5"
    },
    "5873": {
      "op": "SUB"
    },
    "5874": {
      "op": "SLT"
    },
    "5875": {
      "op": "ISZERO"
    },
    "5876": {
      "op": "PUSH2",
      "value": "0x16FC"
    },
    "5879": {
      "op": "JUMPI"
    },
    "5880": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5882": {
      "op": "DUP1"
    },
    "5883": {
      "op": "REVERT"
    },
    "5884": {
      "op": "JUMPDEST"
    },
    "5885": {
      "op": "PUSH2",
      "value": "0x1585"
    },
    "5888": {
      "op": "DUP3"
    },
    "5889": {
      "op": "PUSH2",
      "value": "0x158C"
    },
    "5892": {
      "jump": "i",
      "op": "JUMP"
    },
    "5893": {
      "op": "JUMPDEST"
    },
    "5894": {
      "op": "DUP6"
    },
    "5895": {
      "op": "DUP2"
    },
    "5896": {
      "op": "MSTORE"
    },
    "5897": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5899": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5901": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5903": {
      "op": "SHL"
    },
    "5904": {
      "op": "SUB"
    },
    "5905": {
      "op": "DUP6"
    },
    "5906": {
      "op": "AND"
    },
    "5907": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5909": {
      "op": "DUP3"
    },
    "5910": {
      "op": "ADD"
    },
    "5911": {
      "op": "MSTORE"
    },
    "5912": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5914": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5916": {
      "op": "DUP3"
    },
    "5917": {
      "op": "ADD"
    },
    "5918": {
      "op": "DUP2"
    },
    "5919": {
      "op": "SWAP1"
    },
    "5920": {
      "op": "MSTORE"
    },
    "5921": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5923": {
      "op": "SWAP1"
    },
    "5924": {
      "op": "PUSH2",
      "value": "0x172F"
    },
    "5927": {
      "op": "SWAP1"
    },
    "5928": {
      "op": "DUP4"
    },
    "5929": {
      "op": "ADD"
    },
    "5930": {
      "op": "DUP7"
    },
    "5931": {
      "op": "PUSH2",
      "value": "0x1546"
    },
    "5934": {
      "jump": "i",
      "op": "JUMP"
    },
    "5935": {
      "op": "JUMPDEST"
    },
    "5936": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "5941": {
      "op": "SWAP5"
    },
    "5942": {
      "op": "SWAP1"
    },
    "5943": {
      "op": "SWAP5"
    },
    "5944": {
      "op": "AND"
    },
    "5945": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5947": {
      "op": "DUP4"
    },
    "5948": {
      "op": "ADD"
    },
    "5949": {
      "op": "MSTORE"
    },
    "5950": {
      "op": "POP"
    },
    "5951": {
      "op": "SWAP1"
    },
    "5952": {
      "op": "ISZERO"
    },
    "5953": {
      "op": "ISZERO"
    },
    "5954": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5956": {
      "op": "SWAP1"
    },
    "5957": {
      "op": "SWAP2"
    },
    "5958": {
      "op": "ADD"
    },
    "5959": {
      "op": "MSTORE"
    },
    "5960": {
      "op": "SWAP4"
    },
    "5961": {
      "op": "SWAP3"
    },
    "5962": {
      "op": "POP"
    },
    "5963": {
      "op": "POP"
    },
    "5964": {
      "op": "POP"
    },
    "5965": {
      "jump": "o",
      "op": "JUMP"
    },
    "5966": {
      "op": "JUMPDEST"
    },
    "5967": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5969": {
      "op": "DUP1"
    },
    "5970": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5972": {
      "op": "DUP4"
    },
    "5973": {
      "op": "DUP6"
    },
    "5974": {
      "op": "SUB"
    },
    "5975": {
      "op": "SLT"
    },
    "5976": {
      "op": "ISZERO"
    },
    "5977": {
      "op": "PUSH2",
      "value": "0x1761"
    },
    "5980": {
      "op": "JUMPI"
    },
    "5981": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5983": {
      "op": "DUP1"
    },
    "5984": {
      "op": "REVERT"
    },
    "5985": {
      "op": "JUMPDEST"
    },
    "5986": {
      "op": "DUP3"
    },
    "5987": {
      "op": "CALLDATALOAD"
    },
    "5988": {
      "op": "SWAP2"
    },
    "5989": {
      "op": "POP"
    },
    "5990": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5992": {
      "op": "DUP1"
    },
    "5993": {
      "op": "DUP5"
    },
    "5994": {
      "op": "ADD"
    },
    "5995": {
      "op": "CALLDATALOAD"
    },
    "5996": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "6005": {
      "op": "DUP1"
    },
    "6006": {
      "op": "DUP3"
    },
    "6007": {
      "op": "GT"
    },
    "6008": {
      "op": "ISZERO"
    },
    "6009": {
      "op": "PUSH2",
      "value": "0x1781"
    },
    "6012": {
      "op": "JUMPI"
    },
    "6013": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6015": {
      "op": "DUP1"
    },
    "6016": {
      "op": "REVERT"
    },
    "6017": {
      "op": "JUMPDEST"
    },
    "6018": {
      "op": "DUP2"
    },
    "6019": {
      "op": "DUP7"
    },
    "6020": {
      "op": "ADD"
    },
    "6021": {
      "op": "SWAP2"
    },
    "6022": {
      "op": "POP"
    },
    "6023": {
      "op": "DUP7"
    },
    "6024": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6026": {
      "op": "DUP4"
    },
    "6027": {
      "op": "ADD"
    },
    "6028": {
      "op": "SLT"
    },
    "6029": {
      "op": "PUSH2",
      "value": "0x1795"
    },
    "6032": {
      "op": "JUMPI"
    },
    "6033": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6035": {
      "op": "DUP1"
    },
    "6036": {
      "op": "REVERT"
    },
    "6037": {
      "op": "JUMPDEST"
    },
    "6038": {
      "op": "DUP2"
    },
    "6039": {
      "op": "CALLDATALOAD"
    },
    "6040": {
      "op": "DUP2"
    },
    "6041": {
      "op": "DUP2"
    },
    "6042": {
      "op": "GT"
    },
    "6043": {
      "op": "ISZERO"
    },
    "6044": {
      "op": "PUSH2",
      "value": "0x17A7"
    },
    "6047": {
      "op": "JUMPI"
    },
    "6048": {
      "op": "PUSH2",
      "value": "0x17A7"
    },
    "6051": {
      "op": "PUSH2",
      "value": "0x15D2"
    },
    "6054": {
      "jump": "i",
      "op": "JUMP"
    },
    "6055": {
      "op": "JUMPDEST"
    },
    "6056": {
      "op": "DUP1"
    },
    "6057": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "6059": {
      "op": "SHL"
    },
    "6060": {
      "op": "SWAP2"
    },
    "6061": {
      "op": "POP"
    },
    "6062": {
      "op": "PUSH2",
      "value": "0x17B8"
    },
    "6065": {
      "op": "DUP5"
    },
    "6066": {
      "op": "DUP4"
    },
    "6067": {
      "op": "ADD"
    },
    "6068": {
      "op": "PUSH2",
      "value": "0x15E8"
    },
    "6071": {
      "jump": "i",
      "op": "JUMP"
    },
    "6072": {
      "op": "JUMPDEST"
    },
    "6073": {
      "op": "DUP2"
    },
    "6074": {
      "op": "DUP2"
    },
    "6075": {
      "op": "MSTORE"
    },
    "6076": {
      "op": "SWAP2"
    },
    "6077": {
      "op": "DUP4"
    },
    "6078": {
      "op": "ADD"
    },
    "6079": {
      "op": "DUP5"
    },
    "6080": {
      "op": "ADD"
    },
    "6081": {
      "op": "SWAP2"
    },
    "6082": {
      "op": "DUP5"
    },
    "6083": {
      "op": "DUP2"
    },
    "6084": {
      "op": "ADD"
    },
    "6085": {
      "op": "SWAP1"
    },
    "6086": {
      "op": "DUP10"
    },
    "6087": {
      "op": "DUP5"
    },
    "6088": {
      "op": "GT"
    },
    "6089": {
      "op": "ISZERO"
    },
    "6090": {
      "op": "PUSH2",
      "value": "0x17D2"
    },
    "6093": {
      "op": "JUMPI"
    },
    "6094": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6096": {
      "op": "DUP1"
    },
    "6097": {
      "op": "REVERT"
    },
    "6098": {
      "op": "JUMPDEST"
    },
    "6099": {
      "op": "SWAP4"
    },
    "6100": {
      "op": "DUP6"
    },
    "6101": {
      "op": "ADD"
    },
    "6102": {
      "op": "SWAP4"
    },
    "6103": {
      "op": "JUMPDEST"
    },
    "6104": {
      "op": "DUP4"
    },
    "6105": {
      "op": "DUP6"
    },
    "6106": {
      "op": "LT"
    },
    "6107": {
      "op": "ISZERO"
    },
    "6108": {
      "op": "PUSH2",
      "value": "0x17F7"
    },
    "6111": {
      "op": "JUMPI"
    },
    "6112": {
      "op": "PUSH2",
      "value": "0x17E8"
    },
    "6115": {
      "op": "DUP6"
    },
    "6116": {
      "op": "PUSH2",
      "value": "0x158C"
    },
    "6119": {
      "jump": "i",
      "op": "JUMP"
    },
    "6120": {
      "op": "JUMPDEST"
    },
    "6121": {
      "op": "DUP3"
    },
    "6122": {
      "op": "MSTORE"
    },
    "6123": {
      "op": "SWAP4"
    },
    "6124": {
      "op": "DUP6"
    },
    "6125": {
      "op": "ADD"
    },
    "6126": {
      "op": "SWAP4"
    },
    "6127": {
      "op": "SWAP1"
    },
    "6128": {
      "op": "DUP6"
    },
    "6129": {
      "op": "ADD"
    },
    "6130": {
      "op": "SWAP1"
    },
    "6131": {
      "op": "PUSH2",
      "value": "0x17D7"
    },
    "6134": {
      "op": "JUMP"
    },
    "6135": {
      "op": "JUMPDEST"
    },
    "6136": {
      "op": "DUP1"
    },
    "6137": {
      "op": "SWAP7"
    },
    "6138": {
      "op": "POP"
    },
    "6139": {
      "op": "POP"
    },
    "6140": {
      "op": "POP"
    },
    "6141": {
      "op": "POP"
    },
    "6142": {
      "op": "POP"
    },
    "6143": {
      "op": "POP"
    },
    "6144": {
      "op": "POP"
    },
    "6145": {
      "op": "SWAP3"
    },
    "6146": {
      "op": "POP"
    },
    "6147": {
      "op": "SWAP3"
    },
    "6148": {
      "op": "SWAP1"
    },
    "6149": {
      "op": "POP"
    },
    "6150": {
      "jump": "o",
      "op": "JUMP"
    },
    "6151": {
      "op": "JUMPDEST"
    },
    "6152": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6154": {
      "op": "DUP1"
    },
    "6155": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6157": {
      "op": "DUP4"
    },
    "6158": {
      "op": "DUP6"
    },
    "6159": {
      "op": "SUB"
    },
    "6160": {
      "op": "SLT"
    },
    "6161": {
      "op": "ISZERO"
    },
    "6162": {
      "op": "PUSH2",
      "value": "0x181A"
    },
    "6165": {
      "op": "JUMPI"
    },
    "6166": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6168": {
      "op": "DUP1"
    },
    "6169": {
      "op": "REVERT"
    },
    "6170": {
      "op": "JUMPDEST"
    },
    "6171": {
      "op": "PUSH2",
      "value": "0x1823"
    },
    "6174": {
      "op": "DUP4"
    },
    "6175": {
      "op": "PUSH2",
      "value": "0x158C"
    },
    "6178": {
      "jump": "i",
      "op": "JUMP"
    },
    "6179": {
      "op": "JUMPDEST"
    },
    "6180": {
      "op": "SWAP2"
    },
    "6181": {
      "op": "POP"
    },
    "6182": {
      "op": "PUSH2",
      "value": "0x1831"
    },
    "6185": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6187": {
      "op": "DUP5"
    },
    "6188": {
      "op": "ADD"
    },
    "6189": {
      "op": "PUSH2",
      "value": "0x158C"
    },
    "6192": {
      "jump": "i",
      "op": "JUMP"
    },
    "6193": {
      "op": "JUMPDEST"
    },
    "6194": {
      "op": "SWAP1"
    },
    "6195": {
      "op": "POP"
    },
    "6196": {
      "op": "SWAP3"
    },
    "6197": {
      "op": "POP"
    },
    "6198": {
      "op": "SWAP3"
    },
    "6199": {
      "op": "SWAP1"
    },
    "6200": {
      "op": "POP"
    },
    "6201": {
      "jump": "o",
      "op": "JUMP"
    },
    "6202": {
      "op": "JUMPDEST"
    },
    "6203": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6205": {
      "op": "DUP2"
    },
    "6206": {
      "op": "DUP2"
    },
    "6207": {
      "op": "SHR"
    },
    "6208": {
      "op": "SWAP1"
    },
    "6209": {
      "op": "DUP3"
    },
    "6210": {
      "op": "AND"
    },
    "6211": {
      "op": "DUP1"
    },
    "6212": {
      "op": "PUSH2",
      "value": "0x184E"
    },
    "6215": {
      "op": "JUMPI"
    },
    "6216": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "6218": {
      "op": "DUP3"
    },
    "6219": {
      "op": "AND"
    },
    "6220": {
      "op": "SWAP2"
    },
    "6221": {
      "op": "POP"
    },
    "6222": {
      "op": "JUMPDEST"
    },
    "6223": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6225": {
      "op": "DUP3"
    },
    "6226": {
      "op": "LT"
    },
    "6227": {
      "op": "DUP2"
    },
    "6228": {
      "op": "SUB"
    },
    "6229": {
      "op": "PUSH2",
      "value": "0x186E"
    },
    "6232": {
      "op": "JUMPI"
    },
    "6233": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "6238": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6240": {
      "op": "SHL"
    },
    "6241": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6243": {
      "op": "MSTORE"
    },
    "6244": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "6246": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "6248": {
      "op": "MSTORE"
    },
    "6249": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6251": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6253": {
      "op": "REVERT"
    },
    "6254": {
      "op": "JUMPDEST"
    },
    "6255": {
      "op": "POP"
    },
    "6256": {
      "op": "SWAP2"
    },
    "6257": {
      "op": "SWAP1"
    },
    "6258": {
      "op": "POP"
    },
    "6259": {
      "jump": "o",
      "op": "JUMP"
    },
    "6260": {
      "op": "JUMPDEST"
    },
    "6261": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "6266": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6268": {
      "op": "SHL"
    },
    "6269": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6271": {
      "op": "MSTORE"
    },
    "6272": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "6274": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "6276": {
      "op": "MSTORE"
    },
    "6277": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6279": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6281": {
      "op": "REVERT"
    },
    "6282": {
      "op": "JUMPDEST"
    },
    "6283": {
      "op": "DUP1"
    },
    "6284": {
      "op": "DUP3"
    },
    "6285": {
      "op": "ADD"
    },
    "6286": {
      "op": "DUP1"
    },
    "6287": {
      "op": "DUP3"
    },
    "6288": {
      "op": "GT"
    },
    "6289": {
      "op": "ISZERO"
    },
    "6290": {
      "op": "PUSH2",
      "value": "0x510"
    },
    "6293": {
      "op": "JUMPI"
    },
    "6294": {
      "op": "PUSH2",
      "value": "0x510"
    },
    "6297": {
      "op": "PUSH2",
      "value": "0x1874"
    },
    "6300": {
      "jump": "i",
      "op": "JUMP"
    },
    "6301": {
      "op": "JUMPDEST"
    },
    "6302": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "6307": {
      "op": "DUP2"
    },
    "6308": {
      "op": "DUP2"
    },
    "6309": {
      "op": "AND"
    },
    "6310": {
      "op": "DUP4"
    },
    "6311": {
      "op": "DUP3"
    },
    "6312": {
      "op": "AND"
    },
    "6313": {
      "op": "ADD"
    },
    "6314": {
      "op": "SWAP1"
    },
    "6315": {
      "op": "DUP1"
    },
    "6316": {
      "op": "DUP3"
    },
    "6317": {
      "op": "GT"
    },
    "6318": {
      "op": "ISZERO"
    },
    "6319": {
      "op": "PUSH2",
      "value": "0x1467"
    },
    "6322": {
      "op": "JUMPI"
    },
    "6323": {
      "op": "PUSH2",
      "value": "0x1467"
    },
    "6326": {
      "op": "PUSH2",
      "value": "0x1874"
    },
    "6329": {
      "jump": "i",
      "op": "JUMP"
    },
    "6330": {
      "op": "JUMPDEST"
    },
    "6331": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6333": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6335": {
      "op": "DUP3"
    },
    "6336": {
      "op": "ADD"
    },
    "6337": {
      "op": "PUSH2",
      "value": "0x18CC"
    },
    "6340": {
      "op": "JUMPI"
    },
    "6341": {
      "op": "PUSH2",
      "value": "0x18CC"
    },
    "6344": {
      "op": "PUSH2",
      "value": "0x1874"
    },
    "6347": {
      "jump": "i",
      "op": "JUMP"
    },
    "6348": {
      "op": "JUMPDEST"
    },
    "6349": {
      "op": "POP"
    },
    "6350": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6352": {
      "op": "ADD"
    },
    "6353": {
      "op": "SWAP1"
    },
    "6354": {
      "jump": "o",
      "op": "JUMP"
    },
    "6355": {
      "op": "JUMPDEST"
    },
    "6356": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "6361": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6363": {
      "op": "SHL"
    },
    "6364": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6366": {
      "op": "MSTORE"
    },
    "6367": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "6369": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "6371": {
      "op": "MSTORE"
    },
    "6372": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6374": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6376": {
      "op": "REVERT"
    },
    "6377": {
      "op": "JUMPDEST"
    },
    "6378": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "6383": {
      "op": "DUP3"
    },
    "6384": {
      "op": "DUP2"
    },
    "6385": {
      "op": "AND"
    },
    "6386": {
      "op": "DUP3"
    },
    "6387": {
      "op": "DUP3"
    },
    "6388": {
      "op": "AND"
    },
    "6389": {
      "op": "SUB"
    },
    "6390": {
      "op": "SWAP1"
    },
    "6391": {
      "op": "DUP1"
    },
    "6392": {
      "op": "DUP3"
    },
    "6393": {
      "op": "GT"
    },
    "6394": {
      "op": "ISZERO"
    },
    "6395": {
      "op": "PUSH2",
      "value": "0x1467"
    },
    "6398": {
      "op": "JUMPI"
    },
    "6399": {
      "op": "PUSH2",
      "value": "0x1467"
    },
    "6402": {
      "op": "PUSH2",
      "value": "0x1874"
    },
    "6405": {
      "jump": "i",
      "op": "JUMP"
    },
    "6406": {
      "op": "JUMPDEST"
    },
    "6407": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6409": {
      "op": "DUP3"
    },
    "6410": {
      "op": "GT"
    },
    "6411": {
      "op": "ISZERO"
    },
    "6412": {
      "op": "PUSH2",
      "value": "0x7E4"
    },
    "6415": {
      "op": "JUMPI"
    },
    "6416": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6418": {
      "op": "DUP2"
    },
    "6419": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6421": {
      "op": "MSTORE"
    },
    "6422": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6424": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6426": {
      "op": "KECCAK256"
    },
    "6427": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6429": {
      "op": "DUP6"
    },
    "6430": {
      "op": "ADD"
    },
    "6431": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "6433": {
      "op": "SHR"
    },
    "6434": {
      "op": "DUP2"
    },
    "6435": {
      "op": "ADD"
    },
    "6436": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6438": {
      "op": "DUP7"
    },
    "6439": {
      "op": "LT"
    },
    "6440": {
      "op": "ISZERO"
    },
    "6441": {
      "op": "PUSH2",
      "value": "0x192F"
    },
    "6444": {
      "op": "JUMPI"
    },
    "6445": {
      "op": "POP"
    },
    "6446": {
      "op": "DUP1"
    },
    "6447": {
      "op": "JUMPDEST"
    },
    "6448": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6450": {
      "op": "DUP6"
    },
    "6451": {
      "op": "ADD"
    },
    "6452": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "6454": {
      "op": "SHR"
    },
    "6455": {
      "op": "DUP3"
    },
    "6456": {
      "op": "ADD"
    },
    "6457": {
      "op": "SWAP2"
    },
    "6458": {
      "op": "POP"
    },
    "6459": {
      "op": "JUMPDEST"
    },
    "6460": {
      "op": "DUP2"
    },
    "6461": {
      "op": "DUP2"
    },
    "6462": {
      "op": "LT"
    },
    "6463": {
      "op": "ISZERO"
    },
    "6464": {
      "op": "PUSH2",
      "value": "0x194E"
    },
    "6467": {
      "op": "JUMPI"
    },
    "6468": {
      "op": "DUP3"
    },
    "6469": {
      "op": "DUP2"
    },
    "6470": {
      "op": "SSTORE"
    },
    "6471": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6473": {
      "op": "ADD"
    },
    "6474": {
      "op": "PUSH2",
      "value": "0x193B"
    },
    "6477": {
      "op": "JUMP"
    },
    "6478": {
      "op": "JUMPDEST"
    },
    "6479": {
      "op": "POP"
    },
    "6480": {
      "op": "POP"
    },
    "6481": {
      "op": "POP"
    },
    "6482": {
      "op": "POP"
    },
    "6483": {
      "op": "POP"
    },
    "6484": {
      "op": "POP"
    },
    "6485": {
      "jump": "o",
      "op": "JUMP"
    },
    "6486": {
      "op": "JUMPDEST"
    },
    "6487": {
      "op": "DUP2"
    },
    "6488": {
      "op": "MLOAD"
    },
    "6489": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "6498": {
      "op": "DUP2"
    },
    "6499": {
      "op": "GT"
    },
    "6500": {
      "op": "ISZERO"
    },
    "6501": {
      "op": "PUSH2",
      "value": "0x1970"
    },
    "6504": {
      "op": "JUMPI"
    },
    "6505": {
      "op": "PUSH2",
      "value": "0x1970"
    },
    "6508": {
      "op": "PUSH2",
      "value": "0x15D2"
    },
    "6511": {
      "jump": "i",
      "op": "JUMP"
    },
    "6512": {
      "op": "JUMPDEST"
    },
    "6513": {
      "op": "PUSH2",
      "value": "0x1984"
    },
    "6516": {
      "op": "DUP2"
    },
    "6517": {
      "op": "PUSH2",
      "value": "0x197E"
    },
    "6520": {
      "op": "DUP5"
    },
    "6521": {
      "op": "SLOAD"
    },
    "6522": {
      "op": "PUSH2",
      "value": "0x183A"
    },
    "6525": {
      "jump": "i",
      "op": "JUMP"
    },
    "6526": {
      "op": "JUMPDEST"
    },
    "6527": {
      "op": "DUP5"
    },
    "6528": {
      "op": "PUSH2",
      "value": "0x1906"
    },
    "6531": {
      "jump": "i",
      "op": "JUMP"
    },
    "6532": {
      "op": "JUMPDEST"
    },
    "6533": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6535": {
      "op": "DUP1"
    },
    "6536": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6538": {
      "op": "DUP4"
    },
    "6539": {
      "op": "GT"
    },
    "6540": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6542": {
      "op": "DUP2"
    },
    "6543": {
      "op": "EQ"
    },
    "6544": {
      "op": "PUSH2",
      "value": "0x19B9"
    },
    "6547": {
      "op": "JUMPI"
    },
    "6548": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6550": {
      "op": "DUP5"
    },
    "6551": {
      "op": "ISZERO"
    },
    "6552": {
      "op": "PUSH2",
      "value": "0x19A1"
    },
    "6555": {
      "op": "JUMPI"
    },
    "6556": {
      "op": "POP"
    },
    "6557": {
      "op": "DUP6"
    },
    "6558": {
      "op": "DUP4"
    },
    "6559": {
      "op": "ADD"
    },
    "6560": {
      "op": "MLOAD"
    },
    "6561": {
      "op": "JUMPDEST"
    },
    "6562": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6564": {
      "op": "NOT"
    },
    "6565": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "6567": {
      "op": "DUP7"
    },
    "6568": {
      "op": "SWAP1"
    },
    "6569": {
      "op": "SHL"
    },
    "6570": {
      "op": "SHR"
    },
    "6571": {
      "op": "NOT"
    },
    "6572": {
      "op": "AND"
    },
    "6573": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6575": {
      "op": "DUP6"
    },
    "6576": {
      "op": "SWAP1"
    },
    "6577": {
      "op": "SHL"
    },
    "6578": {
      "op": "OR"
    },
    "6579": {
      "op": "DUP6"
    },
    "6580": {
      "op": "SSTORE"
    },
    "6581": {
      "op": "PUSH2",
      "value": "0x194E"
    },
    "6584": {
      "op": "JUMP"
    },
    "6585": {
      "op": "JUMPDEST"
    },
    "6586": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6588": {
      "op": "DUP6"
    },
    "6589": {
      "op": "DUP2"
    },
    "6590": {
      "op": "MSTORE"
    },
    "6591": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6593": {
      "op": "DUP2"
    },
    "6594": {
      "op": "KECCAK256"
    },
    "6595": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6597": {
      "op": "NOT"
    },
    "6598": {
      "op": "DUP7"
    },
    "6599": {
      "op": "AND"
    },
    "6600": {
      "op": "SWAP2"
    },
    "6601": {
      "op": "JUMPDEST"
    },
    "6602": {
      "op": "DUP3"
    },
    "6603": {
      "op": "DUP2"
    },
    "6604": {
      "op": "LT"
    },
    "6605": {
      "op": "ISZERO"
    },
    "6606": {
      "op": "PUSH2",
      "value": "0x19E8"
    },
    "6609": {
      "op": "JUMPI"
    },
    "6610": {
      "op": "DUP9"
    },
    "6611": {
      "op": "DUP7"
    },
    "6612": {
      "op": "ADD"
    },
    "6613": {
      "op": "MLOAD"
    },
    "6614": {
      "op": "DUP3"
    },
    "6615": {
      "op": "SSTORE"
    },
    "6616": {
      "op": "SWAP5"
    },
    "6617": {
      "op": "DUP5"
    },
    "6618": {
      "op": "ADD"
    },
    "6619": {
      "op": "SWAP5"
    },
    "6620": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6622": {
      "op": "SWAP1"
    },
    "6623": {
      "op": "SWAP2"
    },
    "6624": {
      "op": "ADD"
    },
    "6625": {
      "op": "SWAP1"
    },
    "6626": {
      "op": "DUP5"
    },
    "6627": {
      "op": "ADD"
    },
    "6628": {
      "op": "PUSH2",
      "value": "0x19C9"
    },
    "6631": {
      "op": "JUMP"
    },
    "6632": {
      "op": "JUMPDEST"
    },
    "6633": {
      "op": "POP"
    },
    "6634": {
      "op": "DUP6"
    },
    "6635": {
      "op": "DUP3"
    },
    "6636": {
      "op": "LT"
    },
    "6637": {
      "op": "ISZERO"
    },
    "6638": {
      "op": "PUSH2",
      "value": "0x1A06"
    },
    "6641": {
      "op": "JUMPI"
    },
    "6642": {
      "op": "DUP8"
    },
    "6643": {
      "op": "DUP6"
    },
    "6644": {
      "op": "ADD"
    },
    "6645": {
      "op": "MLOAD"
    },
    "6646": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6648": {
      "op": "NOT"
    },
    "6649": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "6651": {
      "op": "DUP9"
    },
    "6652": {
      "op": "SWAP1"
    },
    "6653": {
      "op": "SHL"
    },
    "6654": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "6656": {
      "op": "AND"
    },
    "6657": {
      "op": "SHR"
    },
    "6658": {
      "op": "NOT"
    },
    "6659": {
      "op": "AND"
    },
    "6660": {
      "op": "DUP2"
    },
    "6661": {
      "op": "SSTORE"
    },
    "6662": {
      "op": "JUMPDEST"
    },
    "6663": {
      "op": "POP"
    },
    "6664": {
      "op": "POP"
    },
    "6665": {
      "op": "POP"
    },
    "6666": {
      "op": "POP"
    },
    "6667": {
      "op": "POP"
    },
    "6668": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6670": {
      "op": "SWAP1"
    },
    "6671": {
      "op": "DUP2"
    },
    "6672": {
      "op": "SHL"
    },
    "6673": {
      "op": "ADD"
    },
    "6674": {
      "op": "SWAP1"
    },
    "6675": {
      "op": "SSTORE"
    },
    "6676": {
      "op": "POP"
    },
    "6677": {
      "jump": "o",
      "op": "JUMP"
    },
    "6678": {
      "op": "JUMPDEST"
    },
    "6679": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6681": {
      "op": "DUP3"
    },
    "6682": {
      "op": "MLOAD"
    },
    "6683": {
      "op": "PUSH2",
      "value": "0x1A28"
    },
    "6686": {
      "op": "DUP2"
    },
    "6687": {
      "op": "DUP5"
    },
    "6688": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6690": {
      "op": "DUP8"
    },
    "6691": {
      "op": "ADD"
    },
    "6692": {
      "op": "PUSH2",
      "value": "0x1522"
    },
    "6695": {
      "jump": "i",
      "op": "JUMP"
    },
    "6696": {
      "op": "JUMPDEST"
    },
    "6697": {
      "op": "SWAP2"
    },
    "6698": {
      "op": "SWAP1"
    },
    "6699": {
      "op": "SWAP2"
    },
    "6700": {
      "op": "ADD"
    },
    "6701": {
      "op": "SWAP3"
    },
    "6702": {
      "op": "SWAP2"
    },
    "6703": {
      "op": "POP"
    },
    "6704": {
      "op": "POP"
    },
    "6705": {
      "jump": "o",
      "op": "JUMP"
    },
    "6706": {
      "op": "JUMPDEST"
    },
    "6707": {
      "op": "DUP2"
    },
    "6708": {
      "op": "DUP2"
    },
    "6709": {
      "op": "SUB"
    },
    "6710": {
      "op": "DUP2"
    },
    "6711": {
      "op": "DUP2"
    },
    "6712": {
      "op": "GT"
    },
    "6713": {
      "op": "ISZERO"
    },
    "6714": {
      "op": "PUSH2",
      "value": "0x510"
    },
    "6717": {
      "op": "JUMPI"
    },
    "6718": {
      "op": "PUSH2",
      "value": "0x510"
    },
    "6721": {
      "op": "PUSH2",
      "value": "0x1874"
    },
    "6724": {
      "jump": "i",
      "op": "JUMP"
    }
  },
  "sha1": "454d006937145982335f1ff1ccac414a911de704",
  "source": "// SPDX-License-Identifier: GPL-3.0\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\n\ncontract SmartNodes is ERC20 {\n    struct Validator {\n        uint256 id;\n        address validatorAddress;\n        string publicKeyHash;\n        uint32 locked;\n        bool isActive;\n    }\n\n    struct Job {\n        uint256 id;\n        address owner;\n        uint256 capacity;\n        address[] workerAddresses; // Changed to workerAddresses to store addresses directly\n        bool isCompleted;\n    }\n\n    struct JobCreationRequest {\n        uint256 id;\n        address creator;\n        uint256 capacity;\n        address[] workerAddresses; // Changed to workerAddresses to store addresses directly\n        mapping(address => bool) signatures;\n    }\n\n    mapping(address => uint256) public validatorIdByAddress;\n    mapping(string => uint256) public validatorIdByHash;\n    mapping(uint256 => Validator) public validators;\n    uint256 public validatorIdCounter;\n\n    mapping(uint256 => Job) public jobs;\n    uint256 public jobIdCounter;\n\n    mapping(uint256 => JobCreationRequest) public pendingJobs;\n    uint256 public requiredSignatures = 2; // Number of signatures required for job creation\n\n    constructor() ERC20(\"TensorLink\", \"TLINK\") {\n        _mint(msg.sender, 100);\n        validatorIdCounter = 1;\n        jobIdCounter = 1;\n    }\n\n    function getJobIdCounter() external view returns (uint256) {\n        return jobIdCounter;\n    }\n\n    function getValidatorIdCounter() external view returns (uint256) {\n        return validatorIdCounter;\n    }\n\n    function createValidator(string memory publicKeyHash) external {\n        Validator memory validator = Validator({\n            id: validatorIdCounter,\n            validatorAddress: msg.sender,\n            publicKeyHash: publicKeyHash,\n            locked: 0,\n            isActive: true\n        });\n\n        validators[validatorIdCounter] = validator;\n        validatorIdByAddress[msg.sender] = validatorIdCounter;\n        validatorIdByHash[publicKeyHash] = validatorIdCounter;\n        validatorIdCounter++;\n    }\n\n    function lockTokens(uint256 amount) external {\n        require(amount > 0, \"Amount must be greater than zero.\");\n        require(balanceOf(msg.sender) >= amount, \"Insufficient balance.\");\n\n        uint256 validatorId = validatorIdByAddress[msg.sender];\n        Validator storage validator = validators[validatorId];\n\n        validator.locked += uint32(amount);\n        _burn(msg.sender, amount);\n    }\n\n    function unlockTokens(uint256 amount) external {\n        uint256 validatorId = validatorIdByAddress[msg.sender];\n        Validator storage validator = validators[validatorId];\n\n        require(amount <= validator.locked, \"Amount exceeds locked balance.\");\n\n        validator.locked -= uint32(amount);\n        _mint(msg.sender, amount);\n    }\n\n    function createJob(uint256 capacity, address[] memory workerAddresses)\n        external\n    {\n        require(capacity > 0, \"Capacity must be greater than zero.\");\n        require(\n            workerAddresses.length > 0,\n            \"At least one worker must be specified.\"\n        );\n\n        uint256 validatorId = validatorIdByAddress[msg.sender];\n        Validator storage validator = validators[validatorId];\n        require(validator.isActive, \"Validator is not active.\");\n\n        // Create the JobCreationRequest struct without initializing the signatures mapping\n        JobCreationRequest storage newRequest = pendingJobs[jobIdCounter];\n        newRequest.id = jobIdCounter;\n        newRequest.creator = msg.sender;\n        newRequest.capacity = capacity;\n        newRequest.workerAddresses = workerAddresses;\n\n        jobIdCounter++;\n\n        // Iterate over the workerAddresses array to initialize the signatures mapping entries\n        for (uint256 i = 0; i < workerAddresses.length; i++) {\n            newRequest.signatures[workerAddresses[i]] = false;\n        }\n\n        // Set the signature for the creator of the job\n        newRequest.signatures[msg.sender] = true;\n    }\n\n    function approveJobCreation(uint256 jobId) external {\n        uint256 validatorId = validatorIdByAddress[msg.sender];\n        Validator storage validator = validators[validatorId];\n        require(validator.isActive, \"Validator is not active.\");\n        require(\n            pendingJobs[jobId].id == jobId,\n            \"Job creation request does not exist.\"\n        );\n\n        JobCreationRequest storage request = pendingJobs[jobId];\n        request.signatures[msg.sender] = true;\n\n        if (countSignatures(request) == requiredSignatures) {\n            Job memory job = Job({\n                id: jobId,\n                owner: request.creator,\n                capacity: request.capacity,\n                workerAddresses: request.workerAddresses,\n                isCompleted: false\n            });\n\n            jobs[jobId] = job;\n            delete pendingJobs[jobId];\n        }\n    }\n\n    function countSignatures(JobCreationRequest storage request)\n        internal\n        view\n        returns (uint256)\n    {\n        uint256 count = 0;\n        for (uint256 i = 0; i < request.workerAddresses.length; i++) {\n            if (request.signatures[request.workerAddresses[i]]) {\n                count++;\n            }\n        }\n\n        return count;\n    }\n}\n",
  "sourceMap": "118:5180:4:-:0;;;1158:1;1122:37;;1216:140;;;;;;;;;;1896:113:0;;;;;;;;;;;;;-1:-1:-1;;;1896:113:0;;;;;;;;;;;;;;;;-1:-1:-1;;;1896:113:0;;;1970:5;1962;:13;;;;;;:::i;:::-;-1:-1:-1;1985:7:0;:17;1995:7;1985;:17;:::i;:::-;;1896:113;;1269:22:4::1;1275:10;1287:3;1269:5;;;:22;;:::i;:::-;1322:1;1301:18;:22:::0;;;1333:12:::1;:16:::0;118:5180;;8244:389:0;-1:-1:-1;;;;;8327:21:0;;8319:65;;;;-1:-1:-1;;;8319:65:0;;2928:2:5;8319:65:0;;;2910:21:5;2967:2;2947:18;;;2940:30;3006:33;2986:18;;;2979:61;3057:18;;8319:65:0;;;;;;;;8471:6;8455:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8487:18:0;;:9;:18;;;;;;;;;;:28;;8509:6;;8487:9;:28;;8509:6;;8487:28;:::i;:::-;;;;-1:-1:-1;;8530:37:0;;3459:25:5;;;-1:-1:-1;;;;;8530:37:0;;;8547:1;;8530:37;;3447:2:5;3432:18;8530:37:0;;;;;;;8244:389;;:::o;10906:121::-;;;;:::o;14:127:5:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:543::-;759:2;754:3;751:11;748:446;;;795:1;819:5;816:1;809:16;863:4;860:1;850:18;933:2;921:10;917:19;914:1;910:27;904:4;900:38;969:4;957:10;954:20;951:47;;;-1:-1:-1;992:4:5;951:47;1047:2;1042:3;1038:12;1035:1;1031:20;1025:4;1021:31;1011:41;;1102:82;1120:2;1113:5;1110:13;1102:82;;;1165:17;;;1146:1;1135:13;1102:82;;;1106:3;;;657:543;;;:::o;1376:1345::-;1496:10;;-1:-1:-1;;;;;1518:30:5;;1515:56;;;1551:18;;:::i;:::-;1580:97;1670:6;1630:38;1662:4;1656:11;1630:38;:::i;:::-;1624:4;1580:97;:::i;:::-;1732:4;;1789:2;1778:14;;1806:1;1801:663;;;;2508:1;2525:6;2522:89;;;-1:-1:-1;2577:19:5;;;2571:26;2522:89;-1:-1:-1;;1333:1:5;1329:11;;;1325:24;1321:29;1311:40;1357:1;1353:11;;;1308:57;2624:81;;1771:944;;1801:663;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1837:20:5;;;1955:236;1969:7;1966:1;1963:14;1955:236;;;2058:19;;;2052:26;2037:42;;2150:27;;;;2118:1;2106:14;;;;1985:19;;1955:236;;;1959:3;2219:6;2210:7;2207:19;2204:201;;;2280:19;;;2274:26;-1:-1:-1;;2363:1:5;2359:14;;;2375:3;2355:24;2351:37;2347:42;2332:58;2317:74;;2204:201;-1:-1:-1;;;;;2451:1:5;2435:14;;;2431:22;2418:36;;-1:-1:-1;1376:1345:5:o;3086:222::-;3151:9;;;3172:10;;;3169:133;;;3224:10;3219:3;3215:20;3212:1;3205:31;3259:4;3256:1;3249:15;3287:4;3284:1;3277:15;3169:133;3086:222;;;;:::o;3313:177::-;118:5180:4;;;;;;",
  "sourcePath": "contracts/SmartNodes.sol",
  "type": "contract"
}